Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ACTUAL
    ADDEQ
    ANNOTATION
    AS
    BREAK
    BY
    CATCH
    CHAR
    CLASS
    COLON
    COMPANION
    CONST
    CONSTRUCTOR
    CONTINUE
    CROSSINLINE
    DATA
    DECREMENT
    DELIMITED_COMMENT
    DIVEQ
    DO
    DOT
    DOUBLECOLON
    DYNAMIC
    EACH
    ENUM
    EQEQ
    EXPECT
    EXTERNAL
    FINAL
    FINALLY
    IMPORT
    INCREMENT
    INFIX
    INIT
    INLINE
    INNER
    INTERFACE
    INTERNAL
    IS
    LATEINIT
    LBRACK
    LINE_COMMENT
    LIST
    MAP
    MODEQ
    MODULE
    MULTEQ
    NOINLINE
    NOT
    NOT_IN
    NOT_IS
    NULL
    OBJECT
    OF
    OPEN
    OPERATOR
    OUT
    OVERRIDE
    PACKAGE
    PRIVATE
    PROTECTED
    PUBLIC
    RBRACK
    REIFIED
    RETURN
    SEALED
    SEMICOLON
    SHEBANG
    SUBEQ
    SUPER
    SUSPEND
    TAILREC
    THEN
    THIS
    THROW
    TRY
    TYPEDATA
    TYPEOF
    TYPE_ALIAS
    UNIT
    VARARG
    WHERE
    WS

Grammar

Rule 0     S' -> statement_list
Rule 1     statement_list -> statement
Rule 2     statement_list -> statement_list statement
Rule 3     function -> FUN ID LPAREN argument_list RPAREN LBRACE statement_list RBRACE
Rule 4     statement -> assignment
Rule 5     statement -> expression
Rule 6     statement -> print
Rule 7     statement -> input
Rule 8     statement -> repeat
Rule 9     statement -> condition
Rule 10    statement -> loop
Rule 11    assignment -> VAR ID ASSIGN expression
Rule 12    assignment -> VAL ID ASSIGN expression
Rule 13    assignment -> ID ASSIGN expression
Rule 14    expression -> expression NOTEQ expression
Rule 15    expression -> expression LT expression
Rule 16    expression -> expression LTEQ expression
Rule 17    expression -> expression GT expression
Rule 18    expression -> expression GTEQ expression
Rule 19    expression -> expression AND expression
Rule 20    expression -> expression OR expression
Rule 21    expression -> expression PLUS expression
Rule 22    expression -> expression MINUS expression
Rule 23    expression -> expression TIMES expression
Rule 24    expression -> expression DIVIDE expression
Rule 25    expression -> expression MOD expression
Rule 26    expression -> LPAREN expression RPAREN
Rule 27    expression -> NUMBER
Rule 28    expression -> FLOAT
Rule 29    expression -> DOUBLE
Rule 30    expression -> BOOLEAN
Rule 31    expression -> STRING
Rule 32    expression -> ID
Rule 33    range -> NUMBER RANGE NUMBER
Rule 34    expression -> range
Rule 35    print -> PRINTLN LPAREN argument_list RPAREN
Rule 36    print -> PRINT LPAREN argument_list RPAREN
Rule 37    argument_list -> expression
Rule 38    argument_list -> expression COMMA expression
Rule 39    argument_list -> argument_list COMMA expression
Rule 40    argument_list -> empty
Rule 41    input -> READLINE LPAREN RPAREN
Rule 42    repeat -> REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE
Rule 43    condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
Rule 44    condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE
Rule 45    loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
Rule 46    loop -> FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE
Rule 47    loop -> FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE
Rule 48    condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE
Rule 49    when_cases -> when_case
Rule 50    when_cases -> when_cases when_case
Rule 51    when_case -> expression_list ARROW statement_list
Rule 52    when_case -> ELSE ARROW statement_list
Rule 53    expression_list -> expression
Rule 54    expression_list -> expression_list COMMA expression
Rule 55    data_structure -> LISTOF LPAREN argument_list RPAREN
Rule 56    data_structure -> MAPOF LPAREN map_argument_list RPAREN
Rule 57    data_structure -> SETOF LPAREN argument_list RPAREN
Rule 58    expression -> data_structure
Rule 59    map_argument_list -> map_element
Rule 60    map_argument_list -> map_argument_list COMMA map_element
Rule 61    map_element -> expression TO expression
Rule 62    type -> ID
Rule 63    empty -> <empty>

Terminals, with rules where they appear

ABSTRACT             : 
ACTUAL               : 
ADDEQ                : 
AND                  : 19
ANNOTATION           : 
ARROW                : 51 52
AS                   : 
ASSIGN               : 11 12 13
BOOLEAN              : 30
BREAK                : 
BY                   : 
CATCH                : 
CHAR                 : 
CLASS                : 
COLON                : 
COMMA                : 38 39 54 60
COMPANION            : 
CONST                : 
CONSTRUCTOR          : 
CONTINUE             : 
CROSSINLINE          : 
DATA                 : 
DECREMENT            : 
DELIMITED_COMMENT    : 
DIVEQ                : 
DIVIDE               : 24
DO                   : 
DOT                  : 
DOUBLE               : 29
DOUBLECOLON          : 
DYNAMIC              : 
EACH                 : 
ELSE                 : 43 52
ENUM                 : 
EQEQ                 : 
EXPECT               : 
EXTERNAL             : 
FINAL                : 
FINALLY              : 
FLOAT                : 28
FOR                  : 46 47
FUN                  : 3
GT                   : 17
GTEQ                 : 18
ID                   : 3 11 12 13 32 46 47 62
IF                   : 43 44
IMPORT               : 
IN                   : 46 47
INCREMENT            : 
INFIX                : 
INIT                 : 
INLINE               : 
INNER                : 
INTERFACE            : 
INTERNAL             : 
IS                   : 
LATEINIT             : 
LBRACE               : 3 42 43 43 44 45 46 47 48
LBRACK               : 
LINE_COMMENT         : 
LIST                 : 
LISTOF               : 55
LPAREN               : 3 26 35 36 41 42 43 44 45 46 47 48 55 56 57
LT                   : 15
LTEQ                 : 16
MAP                  : 
MAPOF                : 56
MINUS                : 22
MOD                  : 25
MODEQ                : 
MODULE               : 
MULTEQ               : 
NOINLINE             : 
NOT                  : 
NOTEQ                : 14
NOT_IN               : 
NOT_IS               : 
NULL                 : 
NUMBER               : 27 33 33 42
OBJECT               : 
OF                   : 
OPEN                 : 
OPERATOR             : 
OR                   : 20
OUT                  : 
OVERRIDE             : 
PACKAGE              : 
PLUS                 : 21
PRINT                : 36
PRINTLN              : 35
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
RANGE                : 33
RBRACE               : 3 42 43 43 44 45 46 47 48
RBRACK               : 
READLINE             : 41
REIFIED              : 
REPEAT               : 42
RETURN               : 
RPAREN               : 3 26 35 36 41 42 43 44 45 46 47 48 55 56 57
SEALED               : 
SEMICOLON            : 
SETOF                : 57
SHEBANG              : 
STRING               : 31
SUBEQ                : 
SUPER                : 
SUSPEND              : 
TAILREC              : 
THEN                 : 
THIS                 : 
THROW                : 
TIMES                : 23
TO                   : 61
TRY                  : 
TYPEDATA             : 
TYPEOF               : 
TYPE_ALIAS           : 
UNIT                 : 
VAL                  : 12
VAR                  : 11
VARARG               : 
WHEN                 : 48
WHERE                : 
WHILE                : 45
WS                   : 
error                : 

Nonterminals, with rules where they appear

argument_list        : 3 35 36 39 55 57
assignment           : 4
condition            : 9
data_structure       : 58
empty                : 40
expression           : 5 11 12 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 37 38 38 39 43 44 45 46 48 53 54 61 61
expression_list      : 51 54
function             : 
input                : 7
loop                 : 10
map_argument_list    : 56 60
map_element          : 59 60
print                : 6
range                : 34 47
repeat               : 8
statement            : 1 2
statement_list       : 2 3 42 43 43 44 45 46 47 51 52 0
type                 : 
when_case            : 49 50
when_cases           : 48 50

Parsing method: LALR

state 0

    (0) S' -> . statement_list
    (1) statement_list -> . statement
    (2) statement_list -> . statement_list statement
    (4) statement -> . assignment
    (5) statement -> . expression
    (6) statement -> . print
    (7) statement -> . input
    (8) statement -> . repeat
    (9) statement -> . condition
    (10) statement -> . loop
    (11) assignment -> . VAR ID ASSIGN expression
    (12) assignment -> . VAL ID ASSIGN expression
    (13) assignment -> . ID ASSIGN expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (35) print -> . PRINTLN LPAREN argument_list RPAREN
    (36) print -> . PRINT LPAREN argument_list RPAREN
    (41) input -> . READLINE LPAREN RPAREN
    (42) repeat -> . REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE
    (43) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (44) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (48) condition -> . WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE
    (45) loop -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (46) loop -> . FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE
    (47) loop -> . FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    VAR             shift and go to state 10
    VAL             shift and go to state 12
    ID              shift and go to state 11
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    PRINTLN         shift and go to state 21
    PRINT           shift and go to state 22
    READLINE        shift and go to state 23
    REPEAT          shift and go to state 24
    IF              shift and go to state 25
    WHEN            shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    statement_list                 shift and go to state 1
    statement                      shift and go to state 2
    assignment                     shift and go to state 3
    expression                     shift and go to state 4
    print                          shift and go to state 5
    input                          shift and go to state 6
    repeat                         shift and go to state 7
    condition                      shift and go to state 8
    loop                           shift and go to state 9
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 1

    (0) S' -> statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . assignment
    (5) statement -> . expression
    (6) statement -> . print
    (7) statement -> . input
    (8) statement -> . repeat
    (9) statement -> . condition
    (10) statement -> . loop
    (11) assignment -> . VAR ID ASSIGN expression
    (12) assignment -> . VAL ID ASSIGN expression
    (13) assignment -> . ID ASSIGN expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (35) print -> . PRINTLN LPAREN argument_list RPAREN
    (36) print -> . PRINT LPAREN argument_list RPAREN
    (41) input -> . READLINE LPAREN RPAREN
    (42) repeat -> . REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE
    (43) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (44) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (48) condition -> . WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE
    (45) loop -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (46) loop -> . FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE
    (47) loop -> . FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    VAR             shift and go to state 10
    VAL             shift and go to state 12
    ID              shift and go to state 11
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    PRINTLN         shift and go to state 21
    PRINT           shift and go to state 22
    READLINE        shift and go to state 23
    REPEAT          shift and go to state 24
    IF              shift and go to state 25
    WHEN            shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    statement                      shift and go to state 32
    assignment                     shift and go to state 3
    expression                     shift and go to state 4
    print                          shift and go to state 5
    input                          shift and go to state 6
    repeat                         shift and go to state 7
    condition                      shift and go to state 8
    loop                           shift and go to state 9
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 2

    (1) statement_list -> statement .

    VAR             reduce using rule 1 (statement_list -> statement .)
    VAL             reduce using rule 1 (statement_list -> statement .)
    ID              reduce using rule 1 (statement_list -> statement .)
    LPAREN          reduce using rule 1 (statement_list -> statement .)
    NUMBER          reduce using rule 1 (statement_list -> statement .)
    FLOAT           reduce using rule 1 (statement_list -> statement .)
    DOUBLE          reduce using rule 1 (statement_list -> statement .)
    BOOLEAN         reduce using rule 1 (statement_list -> statement .)
    STRING          reduce using rule 1 (statement_list -> statement .)
    PRINTLN         reduce using rule 1 (statement_list -> statement .)
    PRINT           reduce using rule 1 (statement_list -> statement .)
    READLINE        reduce using rule 1 (statement_list -> statement .)
    REPEAT          reduce using rule 1 (statement_list -> statement .)
    IF              reduce using rule 1 (statement_list -> statement .)
    WHEN            reduce using rule 1 (statement_list -> statement .)
    WHILE           reduce using rule 1 (statement_list -> statement .)
    FOR             reduce using rule 1 (statement_list -> statement .)
    LISTOF          reduce using rule 1 (statement_list -> statement .)
    MAPOF           reduce using rule 1 (statement_list -> statement .)
    SETOF           reduce using rule 1 (statement_list -> statement .)
    $end            reduce using rule 1 (statement_list -> statement .)
    RBRACE          reduce using rule 1 (statement_list -> statement .)
    ELSE            reduce using rule 1 (statement_list -> statement .)


state 3

    (4) statement -> assignment .

    VAR             reduce using rule 4 (statement -> assignment .)
    VAL             reduce using rule 4 (statement -> assignment .)
    ID              reduce using rule 4 (statement -> assignment .)
    LPAREN          reduce using rule 4 (statement -> assignment .)
    NUMBER          reduce using rule 4 (statement -> assignment .)
    FLOAT           reduce using rule 4 (statement -> assignment .)
    DOUBLE          reduce using rule 4 (statement -> assignment .)
    BOOLEAN         reduce using rule 4 (statement -> assignment .)
    STRING          reduce using rule 4 (statement -> assignment .)
    PRINTLN         reduce using rule 4 (statement -> assignment .)
    PRINT           reduce using rule 4 (statement -> assignment .)
    READLINE        reduce using rule 4 (statement -> assignment .)
    REPEAT          reduce using rule 4 (statement -> assignment .)
    IF              reduce using rule 4 (statement -> assignment .)
    WHEN            reduce using rule 4 (statement -> assignment .)
    WHILE           reduce using rule 4 (statement -> assignment .)
    FOR             reduce using rule 4 (statement -> assignment .)
    LISTOF          reduce using rule 4 (statement -> assignment .)
    MAPOF           reduce using rule 4 (statement -> assignment .)
    SETOF           reduce using rule 4 (statement -> assignment .)
    $end            reduce using rule 4 (statement -> assignment .)
    RBRACE          reduce using rule 4 (statement -> assignment .)
    ELSE            reduce using rule 4 (statement -> assignment .)


state 4

    (5) statement -> expression .
    (14) expression -> expression . NOTEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . LTEQ expression
    (17) expression -> expression . GT expression
    (18) expression -> expression . GTEQ expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression

    VAR             reduce using rule 5 (statement -> expression .)
    VAL             reduce using rule 5 (statement -> expression .)
    ID              reduce using rule 5 (statement -> expression .)
    LPAREN          reduce using rule 5 (statement -> expression .)
    NUMBER          reduce using rule 5 (statement -> expression .)
    FLOAT           reduce using rule 5 (statement -> expression .)
    DOUBLE          reduce using rule 5 (statement -> expression .)
    BOOLEAN         reduce using rule 5 (statement -> expression .)
    STRING          reduce using rule 5 (statement -> expression .)
    PRINTLN         reduce using rule 5 (statement -> expression .)
    PRINT           reduce using rule 5 (statement -> expression .)
    READLINE        reduce using rule 5 (statement -> expression .)
    REPEAT          reduce using rule 5 (statement -> expression .)
    IF              reduce using rule 5 (statement -> expression .)
    WHEN            reduce using rule 5 (statement -> expression .)
    WHILE           reduce using rule 5 (statement -> expression .)
    FOR             reduce using rule 5 (statement -> expression .)
    LISTOF          reduce using rule 5 (statement -> expression .)
    MAPOF           reduce using rule 5 (statement -> expression .)
    SETOF           reduce using rule 5 (statement -> expression .)
    $end            reduce using rule 5 (statement -> expression .)
    RBRACE          reduce using rule 5 (statement -> expression .)
    ELSE            reduce using rule 5 (statement -> expression .)
    NOTEQ           shift and go to state 33
    LT              shift and go to state 34
    LTEQ            shift and go to state 35
    GT              shift and go to state 36
    GTEQ            shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44


state 5

    (6) statement -> print .

    VAR             reduce using rule 6 (statement -> print .)
    VAL             reduce using rule 6 (statement -> print .)
    ID              reduce using rule 6 (statement -> print .)
    LPAREN          reduce using rule 6 (statement -> print .)
    NUMBER          reduce using rule 6 (statement -> print .)
    FLOAT           reduce using rule 6 (statement -> print .)
    DOUBLE          reduce using rule 6 (statement -> print .)
    BOOLEAN         reduce using rule 6 (statement -> print .)
    STRING          reduce using rule 6 (statement -> print .)
    PRINTLN         reduce using rule 6 (statement -> print .)
    PRINT           reduce using rule 6 (statement -> print .)
    READLINE        reduce using rule 6 (statement -> print .)
    REPEAT          reduce using rule 6 (statement -> print .)
    IF              reduce using rule 6 (statement -> print .)
    WHEN            reduce using rule 6 (statement -> print .)
    WHILE           reduce using rule 6 (statement -> print .)
    FOR             reduce using rule 6 (statement -> print .)
    LISTOF          reduce using rule 6 (statement -> print .)
    MAPOF           reduce using rule 6 (statement -> print .)
    SETOF           reduce using rule 6 (statement -> print .)
    $end            reduce using rule 6 (statement -> print .)
    RBRACE          reduce using rule 6 (statement -> print .)
    ELSE            reduce using rule 6 (statement -> print .)


state 6

    (7) statement -> input .

    VAR             reduce using rule 7 (statement -> input .)
    VAL             reduce using rule 7 (statement -> input .)
    ID              reduce using rule 7 (statement -> input .)
    LPAREN          reduce using rule 7 (statement -> input .)
    NUMBER          reduce using rule 7 (statement -> input .)
    FLOAT           reduce using rule 7 (statement -> input .)
    DOUBLE          reduce using rule 7 (statement -> input .)
    BOOLEAN         reduce using rule 7 (statement -> input .)
    STRING          reduce using rule 7 (statement -> input .)
    PRINTLN         reduce using rule 7 (statement -> input .)
    PRINT           reduce using rule 7 (statement -> input .)
    READLINE        reduce using rule 7 (statement -> input .)
    REPEAT          reduce using rule 7 (statement -> input .)
    IF              reduce using rule 7 (statement -> input .)
    WHEN            reduce using rule 7 (statement -> input .)
    WHILE           reduce using rule 7 (statement -> input .)
    FOR             reduce using rule 7 (statement -> input .)
    LISTOF          reduce using rule 7 (statement -> input .)
    MAPOF           reduce using rule 7 (statement -> input .)
    SETOF           reduce using rule 7 (statement -> input .)
    $end            reduce using rule 7 (statement -> input .)
    RBRACE          reduce using rule 7 (statement -> input .)
    ELSE            reduce using rule 7 (statement -> input .)


state 7

    (8) statement -> repeat .

    VAR             reduce using rule 8 (statement -> repeat .)
    VAL             reduce using rule 8 (statement -> repeat .)
    ID              reduce using rule 8 (statement -> repeat .)
    LPAREN          reduce using rule 8 (statement -> repeat .)
    NUMBER          reduce using rule 8 (statement -> repeat .)
    FLOAT           reduce using rule 8 (statement -> repeat .)
    DOUBLE          reduce using rule 8 (statement -> repeat .)
    BOOLEAN         reduce using rule 8 (statement -> repeat .)
    STRING          reduce using rule 8 (statement -> repeat .)
    PRINTLN         reduce using rule 8 (statement -> repeat .)
    PRINT           reduce using rule 8 (statement -> repeat .)
    READLINE        reduce using rule 8 (statement -> repeat .)
    REPEAT          reduce using rule 8 (statement -> repeat .)
    IF              reduce using rule 8 (statement -> repeat .)
    WHEN            reduce using rule 8 (statement -> repeat .)
    WHILE           reduce using rule 8 (statement -> repeat .)
    FOR             reduce using rule 8 (statement -> repeat .)
    LISTOF          reduce using rule 8 (statement -> repeat .)
    MAPOF           reduce using rule 8 (statement -> repeat .)
    SETOF           reduce using rule 8 (statement -> repeat .)
    $end            reduce using rule 8 (statement -> repeat .)
    RBRACE          reduce using rule 8 (statement -> repeat .)
    ELSE            reduce using rule 8 (statement -> repeat .)


state 8

    (9) statement -> condition .

    VAR             reduce using rule 9 (statement -> condition .)
    VAL             reduce using rule 9 (statement -> condition .)
    ID              reduce using rule 9 (statement -> condition .)
    LPAREN          reduce using rule 9 (statement -> condition .)
    NUMBER          reduce using rule 9 (statement -> condition .)
    FLOAT           reduce using rule 9 (statement -> condition .)
    DOUBLE          reduce using rule 9 (statement -> condition .)
    BOOLEAN         reduce using rule 9 (statement -> condition .)
    STRING          reduce using rule 9 (statement -> condition .)
    PRINTLN         reduce using rule 9 (statement -> condition .)
    PRINT           reduce using rule 9 (statement -> condition .)
    READLINE        reduce using rule 9 (statement -> condition .)
    REPEAT          reduce using rule 9 (statement -> condition .)
    IF              reduce using rule 9 (statement -> condition .)
    WHEN            reduce using rule 9 (statement -> condition .)
    WHILE           reduce using rule 9 (statement -> condition .)
    FOR             reduce using rule 9 (statement -> condition .)
    LISTOF          reduce using rule 9 (statement -> condition .)
    MAPOF           reduce using rule 9 (statement -> condition .)
    SETOF           reduce using rule 9 (statement -> condition .)
    $end            reduce using rule 9 (statement -> condition .)
    RBRACE          reduce using rule 9 (statement -> condition .)
    ELSE            reduce using rule 9 (statement -> condition .)


state 9

    (10) statement -> loop .

    VAR             reduce using rule 10 (statement -> loop .)
    VAL             reduce using rule 10 (statement -> loop .)
    ID              reduce using rule 10 (statement -> loop .)
    LPAREN          reduce using rule 10 (statement -> loop .)
    NUMBER          reduce using rule 10 (statement -> loop .)
    FLOAT           reduce using rule 10 (statement -> loop .)
    DOUBLE          reduce using rule 10 (statement -> loop .)
    BOOLEAN         reduce using rule 10 (statement -> loop .)
    STRING          reduce using rule 10 (statement -> loop .)
    PRINTLN         reduce using rule 10 (statement -> loop .)
    PRINT           reduce using rule 10 (statement -> loop .)
    READLINE        reduce using rule 10 (statement -> loop .)
    REPEAT          reduce using rule 10 (statement -> loop .)
    IF              reduce using rule 10 (statement -> loop .)
    WHEN            reduce using rule 10 (statement -> loop .)
    WHILE           reduce using rule 10 (statement -> loop .)
    FOR             reduce using rule 10 (statement -> loop .)
    LISTOF          reduce using rule 10 (statement -> loop .)
    MAPOF           reduce using rule 10 (statement -> loop .)
    SETOF           reduce using rule 10 (statement -> loop .)
    $end            reduce using rule 10 (statement -> loop .)
    RBRACE          reduce using rule 10 (statement -> loop .)
    ELSE            reduce using rule 10 (statement -> loop .)


state 10

    (11) assignment -> VAR . ID ASSIGN expression

    ID              shift and go to state 45


state 11

    (13) assignment -> ID . ASSIGN expression
    (32) expression -> ID .

    ASSIGN          shift and go to state 46
    NOTEQ           reduce using rule 32 (expression -> ID .)
    LT              reduce using rule 32 (expression -> ID .)
    LTEQ            reduce using rule 32 (expression -> ID .)
    GT              reduce using rule 32 (expression -> ID .)
    GTEQ            reduce using rule 32 (expression -> ID .)
    AND             reduce using rule 32 (expression -> ID .)
    OR              reduce using rule 32 (expression -> ID .)
    PLUS            reduce using rule 32 (expression -> ID .)
    MINUS           reduce using rule 32 (expression -> ID .)
    TIMES           reduce using rule 32 (expression -> ID .)
    DIVIDE          reduce using rule 32 (expression -> ID .)
    MOD             reduce using rule 32 (expression -> ID .)
    VAR             reduce using rule 32 (expression -> ID .)
    VAL             reduce using rule 32 (expression -> ID .)
    ID              reduce using rule 32 (expression -> ID .)
    LPAREN          reduce using rule 32 (expression -> ID .)
    NUMBER          reduce using rule 32 (expression -> ID .)
    FLOAT           reduce using rule 32 (expression -> ID .)
    DOUBLE          reduce using rule 32 (expression -> ID .)
    BOOLEAN         reduce using rule 32 (expression -> ID .)
    STRING          reduce using rule 32 (expression -> ID .)
    PRINTLN         reduce using rule 32 (expression -> ID .)
    PRINT           reduce using rule 32 (expression -> ID .)
    READLINE        reduce using rule 32 (expression -> ID .)
    REPEAT          reduce using rule 32 (expression -> ID .)
    IF              reduce using rule 32 (expression -> ID .)
    WHEN            reduce using rule 32 (expression -> ID .)
    WHILE           reduce using rule 32 (expression -> ID .)
    FOR             reduce using rule 32 (expression -> ID .)
    LISTOF          reduce using rule 32 (expression -> ID .)
    MAPOF           reduce using rule 32 (expression -> ID .)
    SETOF           reduce using rule 32 (expression -> ID .)
    $end            reduce using rule 32 (expression -> ID .)
    RBRACE          reduce using rule 32 (expression -> ID .)
    ELSE            reduce using rule 32 (expression -> ID .)


state 12

    (12) assignment -> VAL . ID ASSIGN expression

    ID              shift and go to state 47


state 13

    (26) expression -> LPAREN . expression RPAREN
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 49
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    expression                     shift and go to state 48
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 14

    (27) expression -> NUMBER .
    (33) range -> NUMBER . RANGE NUMBER

    NOTEQ           reduce using rule 27 (expression -> NUMBER .)
    LT              reduce using rule 27 (expression -> NUMBER .)
    LTEQ            reduce using rule 27 (expression -> NUMBER .)
    GT              reduce using rule 27 (expression -> NUMBER .)
    GTEQ            reduce using rule 27 (expression -> NUMBER .)
    AND             reduce using rule 27 (expression -> NUMBER .)
    OR              reduce using rule 27 (expression -> NUMBER .)
    PLUS            reduce using rule 27 (expression -> NUMBER .)
    MINUS           reduce using rule 27 (expression -> NUMBER .)
    TIMES           reduce using rule 27 (expression -> NUMBER .)
    DIVIDE          reduce using rule 27 (expression -> NUMBER .)
    MOD             reduce using rule 27 (expression -> NUMBER .)
    VAR             reduce using rule 27 (expression -> NUMBER .)
    VAL             reduce using rule 27 (expression -> NUMBER .)
    ID              reduce using rule 27 (expression -> NUMBER .)
    LPAREN          reduce using rule 27 (expression -> NUMBER .)
    NUMBER          reduce using rule 27 (expression -> NUMBER .)
    FLOAT           reduce using rule 27 (expression -> NUMBER .)
    DOUBLE          reduce using rule 27 (expression -> NUMBER .)
    BOOLEAN         reduce using rule 27 (expression -> NUMBER .)
    STRING          reduce using rule 27 (expression -> NUMBER .)
    PRINTLN         reduce using rule 27 (expression -> NUMBER .)
    PRINT           reduce using rule 27 (expression -> NUMBER .)
    READLINE        reduce using rule 27 (expression -> NUMBER .)
    REPEAT          reduce using rule 27 (expression -> NUMBER .)
    IF              reduce using rule 27 (expression -> NUMBER .)
    WHEN            reduce using rule 27 (expression -> NUMBER .)
    WHILE           reduce using rule 27 (expression -> NUMBER .)
    FOR             reduce using rule 27 (expression -> NUMBER .)
    LISTOF          reduce using rule 27 (expression -> NUMBER .)
    MAPOF           reduce using rule 27 (expression -> NUMBER .)
    SETOF           reduce using rule 27 (expression -> NUMBER .)
    $end            reduce using rule 27 (expression -> NUMBER .)
    RPAREN          reduce using rule 27 (expression -> NUMBER .)
    RBRACE          reduce using rule 27 (expression -> NUMBER .)
    ELSE            reduce using rule 27 (expression -> NUMBER .)
    COMMA           reduce using rule 27 (expression -> NUMBER .)
    TO              reduce using rule 27 (expression -> NUMBER .)
    ARROW           reduce using rule 27 (expression -> NUMBER .)
    RANGE           shift and go to state 50


state 15

    (28) expression -> FLOAT .

    NOTEQ           reduce using rule 28 (expression -> FLOAT .)
    LT              reduce using rule 28 (expression -> FLOAT .)
    LTEQ            reduce using rule 28 (expression -> FLOAT .)
    GT              reduce using rule 28 (expression -> FLOAT .)
    GTEQ            reduce using rule 28 (expression -> FLOAT .)
    AND             reduce using rule 28 (expression -> FLOAT .)
    OR              reduce using rule 28 (expression -> FLOAT .)
    PLUS            reduce using rule 28 (expression -> FLOAT .)
    MINUS           reduce using rule 28 (expression -> FLOAT .)
    TIMES           reduce using rule 28 (expression -> FLOAT .)
    DIVIDE          reduce using rule 28 (expression -> FLOAT .)
    MOD             reduce using rule 28 (expression -> FLOAT .)
    VAR             reduce using rule 28 (expression -> FLOAT .)
    VAL             reduce using rule 28 (expression -> FLOAT .)
    ID              reduce using rule 28 (expression -> FLOAT .)
    LPAREN          reduce using rule 28 (expression -> FLOAT .)
    NUMBER          reduce using rule 28 (expression -> FLOAT .)
    FLOAT           reduce using rule 28 (expression -> FLOAT .)
    DOUBLE          reduce using rule 28 (expression -> FLOAT .)
    BOOLEAN         reduce using rule 28 (expression -> FLOAT .)
    STRING          reduce using rule 28 (expression -> FLOAT .)
    PRINTLN         reduce using rule 28 (expression -> FLOAT .)
    PRINT           reduce using rule 28 (expression -> FLOAT .)
    READLINE        reduce using rule 28 (expression -> FLOAT .)
    REPEAT          reduce using rule 28 (expression -> FLOAT .)
    IF              reduce using rule 28 (expression -> FLOAT .)
    WHEN            reduce using rule 28 (expression -> FLOAT .)
    WHILE           reduce using rule 28 (expression -> FLOAT .)
    FOR             reduce using rule 28 (expression -> FLOAT .)
    LISTOF          reduce using rule 28 (expression -> FLOAT .)
    MAPOF           reduce using rule 28 (expression -> FLOAT .)
    SETOF           reduce using rule 28 (expression -> FLOAT .)
    $end            reduce using rule 28 (expression -> FLOAT .)
    RPAREN          reduce using rule 28 (expression -> FLOAT .)
    RBRACE          reduce using rule 28 (expression -> FLOAT .)
    ELSE            reduce using rule 28 (expression -> FLOAT .)
    COMMA           reduce using rule 28 (expression -> FLOAT .)
    TO              reduce using rule 28 (expression -> FLOAT .)
    ARROW           reduce using rule 28 (expression -> FLOAT .)


state 16

    (29) expression -> DOUBLE .

    NOTEQ           reduce using rule 29 (expression -> DOUBLE .)
    LT              reduce using rule 29 (expression -> DOUBLE .)
    LTEQ            reduce using rule 29 (expression -> DOUBLE .)
    GT              reduce using rule 29 (expression -> DOUBLE .)
    GTEQ            reduce using rule 29 (expression -> DOUBLE .)
    AND             reduce using rule 29 (expression -> DOUBLE .)
    OR              reduce using rule 29 (expression -> DOUBLE .)
    PLUS            reduce using rule 29 (expression -> DOUBLE .)
    MINUS           reduce using rule 29 (expression -> DOUBLE .)
    TIMES           reduce using rule 29 (expression -> DOUBLE .)
    DIVIDE          reduce using rule 29 (expression -> DOUBLE .)
    MOD             reduce using rule 29 (expression -> DOUBLE .)
    VAR             reduce using rule 29 (expression -> DOUBLE .)
    VAL             reduce using rule 29 (expression -> DOUBLE .)
    ID              reduce using rule 29 (expression -> DOUBLE .)
    LPAREN          reduce using rule 29 (expression -> DOUBLE .)
    NUMBER          reduce using rule 29 (expression -> DOUBLE .)
    FLOAT           reduce using rule 29 (expression -> DOUBLE .)
    DOUBLE          reduce using rule 29 (expression -> DOUBLE .)
    BOOLEAN         reduce using rule 29 (expression -> DOUBLE .)
    STRING          reduce using rule 29 (expression -> DOUBLE .)
    PRINTLN         reduce using rule 29 (expression -> DOUBLE .)
    PRINT           reduce using rule 29 (expression -> DOUBLE .)
    READLINE        reduce using rule 29 (expression -> DOUBLE .)
    REPEAT          reduce using rule 29 (expression -> DOUBLE .)
    IF              reduce using rule 29 (expression -> DOUBLE .)
    WHEN            reduce using rule 29 (expression -> DOUBLE .)
    WHILE           reduce using rule 29 (expression -> DOUBLE .)
    FOR             reduce using rule 29 (expression -> DOUBLE .)
    LISTOF          reduce using rule 29 (expression -> DOUBLE .)
    MAPOF           reduce using rule 29 (expression -> DOUBLE .)
    SETOF           reduce using rule 29 (expression -> DOUBLE .)
    $end            reduce using rule 29 (expression -> DOUBLE .)
    RPAREN          reduce using rule 29 (expression -> DOUBLE .)
    RBRACE          reduce using rule 29 (expression -> DOUBLE .)
    ELSE            reduce using rule 29 (expression -> DOUBLE .)
    COMMA           reduce using rule 29 (expression -> DOUBLE .)
    TO              reduce using rule 29 (expression -> DOUBLE .)
    ARROW           reduce using rule 29 (expression -> DOUBLE .)


state 17

    (30) expression -> BOOLEAN .

    NOTEQ           reduce using rule 30 (expression -> BOOLEAN .)
    LT              reduce using rule 30 (expression -> BOOLEAN .)
    LTEQ            reduce using rule 30 (expression -> BOOLEAN .)
    GT              reduce using rule 30 (expression -> BOOLEAN .)
    GTEQ            reduce using rule 30 (expression -> BOOLEAN .)
    AND             reduce using rule 30 (expression -> BOOLEAN .)
    OR              reduce using rule 30 (expression -> BOOLEAN .)
    PLUS            reduce using rule 30 (expression -> BOOLEAN .)
    MINUS           reduce using rule 30 (expression -> BOOLEAN .)
    TIMES           reduce using rule 30 (expression -> BOOLEAN .)
    DIVIDE          reduce using rule 30 (expression -> BOOLEAN .)
    MOD             reduce using rule 30 (expression -> BOOLEAN .)
    VAR             reduce using rule 30 (expression -> BOOLEAN .)
    VAL             reduce using rule 30 (expression -> BOOLEAN .)
    ID              reduce using rule 30 (expression -> BOOLEAN .)
    LPAREN          reduce using rule 30 (expression -> BOOLEAN .)
    NUMBER          reduce using rule 30 (expression -> BOOLEAN .)
    FLOAT           reduce using rule 30 (expression -> BOOLEAN .)
    DOUBLE          reduce using rule 30 (expression -> BOOLEAN .)
    BOOLEAN         reduce using rule 30 (expression -> BOOLEAN .)
    STRING          reduce using rule 30 (expression -> BOOLEAN .)
    PRINTLN         reduce using rule 30 (expression -> BOOLEAN .)
    PRINT           reduce using rule 30 (expression -> BOOLEAN .)
    READLINE        reduce using rule 30 (expression -> BOOLEAN .)
    REPEAT          reduce using rule 30 (expression -> BOOLEAN .)
    IF              reduce using rule 30 (expression -> BOOLEAN .)
    WHEN            reduce using rule 30 (expression -> BOOLEAN .)
    WHILE           reduce using rule 30 (expression -> BOOLEAN .)
    FOR             reduce using rule 30 (expression -> BOOLEAN .)
    LISTOF          reduce using rule 30 (expression -> BOOLEAN .)
    MAPOF           reduce using rule 30 (expression -> BOOLEAN .)
    SETOF           reduce using rule 30 (expression -> BOOLEAN .)
    $end            reduce using rule 30 (expression -> BOOLEAN .)
    RPAREN          reduce using rule 30 (expression -> BOOLEAN .)
    RBRACE          reduce using rule 30 (expression -> BOOLEAN .)
    ELSE            reduce using rule 30 (expression -> BOOLEAN .)
    COMMA           reduce using rule 30 (expression -> BOOLEAN .)
    TO              reduce using rule 30 (expression -> BOOLEAN .)
    ARROW           reduce using rule 30 (expression -> BOOLEAN .)


state 18

    (31) expression -> STRING .

    NOTEQ           reduce using rule 31 (expression -> STRING .)
    LT              reduce using rule 31 (expression -> STRING .)
    LTEQ            reduce using rule 31 (expression -> STRING .)
    GT              reduce using rule 31 (expression -> STRING .)
    GTEQ            reduce using rule 31 (expression -> STRING .)
    AND             reduce using rule 31 (expression -> STRING .)
    OR              reduce using rule 31 (expression -> STRING .)
    PLUS            reduce using rule 31 (expression -> STRING .)
    MINUS           reduce using rule 31 (expression -> STRING .)
    TIMES           reduce using rule 31 (expression -> STRING .)
    DIVIDE          reduce using rule 31 (expression -> STRING .)
    MOD             reduce using rule 31 (expression -> STRING .)
    VAR             reduce using rule 31 (expression -> STRING .)
    VAL             reduce using rule 31 (expression -> STRING .)
    ID              reduce using rule 31 (expression -> STRING .)
    LPAREN          reduce using rule 31 (expression -> STRING .)
    NUMBER          reduce using rule 31 (expression -> STRING .)
    FLOAT           reduce using rule 31 (expression -> STRING .)
    DOUBLE          reduce using rule 31 (expression -> STRING .)
    BOOLEAN         reduce using rule 31 (expression -> STRING .)
    STRING          reduce using rule 31 (expression -> STRING .)
    PRINTLN         reduce using rule 31 (expression -> STRING .)
    PRINT           reduce using rule 31 (expression -> STRING .)
    READLINE        reduce using rule 31 (expression -> STRING .)
    REPEAT          reduce using rule 31 (expression -> STRING .)
    IF              reduce using rule 31 (expression -> STRING .)
    WHEN            reduce using rule 31 (expression -> STRING .)
    WHILE           reduce using rule 31 (expression -> STRING .)
    FOR             reduce using rule 31 (expression -> STRING .)
    LISTOF          reduce using rule 31 (expression -> STRING .)
    MAPOF           reduce using rule 31 (expression -> STRING .)
    SETOF           reduce using rule 31 (expression -> STRING .)
    $end            reduce using rule 31 (expression -> STRING .)
    RPAREN          reduce using rule 31 (expression -> STRING .)
    RBRACE          reduce using rule 31 (expression -> STRING .)
    ELSE            reduce using rule 31 (expression -> STRING .)
    COMMA           reduce using rule 31 (expression -> STRING .)
    TO              reduce using rule 31 (expression -> STRING .)
    ARROW           reduce using rule 31 (expression -> STRING .)


state 19

    (34) expression -> range .

    NOTEQ           reduce using rule 34 (expression -> range .)
    LT              reduce using rule 34 (expression -> range .)
    LTEQ            reduce using rule 34 (expression -> range .)
    GT              reduce using rule 34 (expression -> range .)
    GTEQ            reduce using rule 34 (expression -> range .)
    AND             reduce using rule 34 (expression -> range .)
    OR              reduce using rule 34 (expression -> range .)
    PLUS            reduce using rule 34 (expression -> range .)
    MINUS           reduce using rule 34 (expression -> range .)
    TIMES           reduce using rule 34 (expression -> range .)
    DIVIDE          reduce using rule 34 (expression -> range .)
    MOD             reduce using rule 34 (expression -> range .)
    VAR             reduce using rule 34 (expression -> range .)
    VAL             reduce using rule 34 (expression -> range .)
    ID              reduce using rule 34 (expression -> range .)
    LPAREN          reduce using rule 34 (expression -> range .)
    NUMBER          reduce using rule 34 (expression -> range .)
    FLOAT           reduce using rule 34 (expression -> range .)
    DOUBLE          reduce using rule 34 (expression -> range .)
    BOOLEAN         reduce using rule 34 (expression -> range .)
    STRING          reduce using rule 34 (expression -> range .)
    PRINTLN         reduce using rule 34 (expression -> range .)
    PRINT           reduce using rule 34 (expression -> range .)
    READLINE        reduce using rule 34 (expression -> range .)
    REPEAT          reduce using rule 34 (expression -> range .)
    IF              reduce using rule 34 (expression -> range .)
    WHEN            reduce using rule 34 (expression -> range .)
    WHILE           reduce using rule 34 (expression -> range .)
    FOR             reduce using rule 34 (expression -> range .)
    LISTOF          reduce using rule 34 (expression -> range .)
    MAPOF           reduce using rule 34 (expression -> range .)
    SETOF           reduce using rule 34 (expression -> range .)
    $end            reduce using rule 34 (expression -> range .)
    RPAREN          reduce using rule 34 (expression -> range .)
    RBRACE          reduce using rule 34 (expression -> range .)
    ELSE            reduce using rule 34 (expression -> range .)
    COMMA           reduce using rule 34 (expression -> range .)
    TO              reduce using rule 34 (expression -> range .)
    ARROW           reduce using rule 34 (expression -> range .)


state 20

    (58) expression -> data_structure .

    NOTEQ           reduce using rule 58 (expression -> data_structure .)
    LT              reduce using rule 58 (expression -> data_structure .)
    LTEQ            reduce using rule 58 (expression -> data_structure .)
    GT              reduce using rule 58 (expression -> data_structure .)
    GTEQ            reduce using rule 58 (expression -> data_structure .)
    AND             reduce using rule 58 (expression -> data_structure .)
    OR              reduce using rule 58 (expression -> data_structure .)
    PLUS            reduce using rule 58 (expression -> data_structure .)
    MINUS           reduce using rule 58 (expression -> data_structure .)
    TIMES           reduce using rule 58 (expression -> data_structure .)
    DIVIDE          reduce using rule 58 (expression -> data_structure .)
    MOD             reduce using rule 58 (expression -> data_structure .)
    VAR             reduce using rule 58 (expression -> data_structure .)
    VAL             reduce using rule 58 (expression -> data_structure .)
    ID              reduce using rule 58 (expression -> data_structure .)
    LPAREN          reduce using rule 58 (expression -> data_structure .)
    NUMBER          reduce using rule 58 (expression -> data_structure .)
    FLOAT           reduce using rule 58 (expression -> data_structure .)
    DOUBLE          reduce using rule 58 (expression -> data_structure .)
    BOOLEAN         reduce using rule 58 (expression -> data_structure .)
    STRING          reduce using rule 58 (expression -> data_structure .)
    PRINTLN         reduce using rule 58 (expression -> data_structure .)
    PRINT           reduce using rule 58 (expression -> data_structure .)
    READLINE        reduce using rule 58 (expression -> data_structure .)
    REPEAT          reduce using rule 58 (expression -> data_structure .)
    IF              reduce using rule 58 (expression -> data_structure .)
    WHEN            reduce using rule 58 (expression -> data_structure .)
    WHILE           reduce using rule 58 (expression -> data_structure .)
    FOR             reduce using rule 58 (expression -> data_structure .)
    LISTOF          reduce using rule 58 (expression -> data_structure .)
    MAPOF           reduce using rule 58 (expression -> data_structure .)
    SETOF           reduce using rule 58 (expression -> data_structure .)
    $end            reduce using rule 58 (expression -> data_structure .)
    RPAREN          reduce using rule 58 (expression -> data_structure .)
    RBRACE          reduce using rule 58 (expression -> data_structure .)
    ELSE            reduce using rule 58 (expression -> data_structure .)
    COMMA           reduce using rule 58 (expression -> data_structure .)
    TO              reduce using rule 58 (expression -> data_structure .)
    ARROW           reduce using rule 58 (expression -> data_structure .)


state 21

    (35) print -> PRINTLN . LPAREN argument_list RPAREN

    LPAREN          shift and go to state 51


state 22

    (36) print -> PRINT . LPAREN argument_list RPAREN

    LPAREN          shift and go to state 52


state 23

    (41) input -> READLINE . LPAREN RPAREN

    LPAREN          shift and go to state 53


state 24

    (42) repeat -> REPEAT . LPAREN NUMBER RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 54


state 25

    (43) condition -> IF . LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (44) condition -> IF . LPAREN expression RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 55


state 26

    (48) condition -> WHEN . LPAREN expression RPAREN LBRACE when_cases RBRACE

    LPAREN          shift and go to state 56


state 27

    (45) loop -> WHILE . LPAREN expression RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 57


state 28

    (46) loop -> FOR . LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE
    (47) loop -> FOR . LPAREN ID IN range RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 58


state 29

    (55) data_structure -> LISTOF . LPAREN argument_list RPAREN

    LPAREN          shift and go to state 59


state 30

    (56) data_structure -> MAPOF . LPAREN map_argument_list RPAREN

    LPAREN          shift and go to state 60


state 31

    (57) data_structure -> SETOF . LPAREN argument_list RPAREN

    LPAREN          shift and go to state 61


state 32

    (2) statement_list -> statement_list statement .

    VAR             reduce using rule 2 (statement_list -> statement_list statement .)
    VAL             reduce using rule 2 (statement_list -> statement_list statement .)
    ID              reduce using rule 2 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 2 (statement_list -> statement_list statement .)
    NUMBER          reduce using rule 2 (statement_list -> statement_list statement .)
    FLOAT           reduce using rule 2 (statement_list -> statement_list statement .)
    DOUBLE          reduce using rule 2 (statement_list -> statement_list statement .)
    BOOLEAN         reduce using rule 2 (statement_list -> statement_list statement .)
    STRING          reduce using rule 2 (statement_list -> statement_list statement .)
    PRINTLN         reduce using rule 2 (statement_list -> statement_list statement .)
    PRINT           reduce using rule 2 (statement_list -> statement_list statement .)
    READLINE        reduce using rule 2 (statement_list -> statement_list statement .)
    REPEAT          reduce using rule 2 (statement_list -> statement_list statement .)
    IF              reduce using rule 2 (statement_list -> statement_list statement .)
    WHEN            reduce using rule 2 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 2 (statement_list -> statement_list statement .)
    FOR             reduce using rule 2 (statement_list -> statement_list statement .)
    LISTOF          reduce using rule 2 (statement_list -> statement_list statement .)
    MAPOF           reduce using rule 2 (statement_list -> statement_list statement .)
    SETOF           reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 2 (statement_list -> statement_list statement .)
    ELSE            reduce using rule 2 (statement_list -> statement_list statement .)


state 33

    (14) expression -> expression NOTEQ . expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 49
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    expression                     shift and go to state 62
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 34

    (15) expression -> expression LT . expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 49
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    expression                     shift and go to state 63
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 35

    (16) expression -> expression LTEQ . expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 49
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    expression                     shift and go to state 64
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 36

    (17) expression -> expression GT . expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 49
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    expression                     shift and go to state 65
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 37

    (18) expression -> expression GTEQ . expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 49
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    expression                     shift and go to state 66
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 38

    (19) expression -> expression AND . expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 49
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    expression                     shift and go to state 67
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 39

    (20) expression -> expression OR . expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 49
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    expression                     shift and go to state 68
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 40

    (21) expression -> expression PLUS . expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 49
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    expression                     shift and go to state 69
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 41

    (22) expression -> expression MINUS . expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 49
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    expression                     shift and go to state 70
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 42

    (23) expression -> expression TIMES . expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 49
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    expression                     shift and go to state 71
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 43

    (24) expression -> expression DIVIDE . expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 49
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    expression                     shift and go to state 72
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 44

    (25) expression -> expression MOD . expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 49
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    expression                     shift and go to state 73
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 45

    (11) assignment -> VAR ID . ASSIGN expression

    ASSIGN          shift and go to state 74


state 46

    (13) assignment -> ID ASSIGN . expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 49
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    expression                     shift and go to state 75
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 47

    (12) assignment -> VAL ID . ASSIGN expression

    ASSIGN          shift and go to state 76


state 48

    (26) expression -> LPAREN expression . RPAREN
    (14) expression -> expression . NOTEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . LTEQ expression
    (17) expression -> expression . GT expression
    (18) expression -> expression . GTEQ expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression

    RPAREN          shift and go to state 77
    NOTEQ           shift and go to state 33
    LT              shift and go to state 34
    LTEQ            shift and go to state 35
    GT              shift and go to state 36
    GTEQ            shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44


state 49

    (32) expression -> ID .

    RPAREN          reduce using rule 32 (expression -> ID .)
    NOTEQ           reduce using rule 32 (expression -> ID .)
    LT              reduce using rule 32 (expression -> ID .)
    LTEQ            reduce using rule 32 (expression -> ID .)
    GT              reduce using rule 32 (expression -> ID .)
    GTEQ            reduce using rule 32 (expression -> ID .)
    AND             reduce using rule 32 (expression -> ID .)
    OR              reduce using rule 32 (expression -> ID .)
    PLUS            reduce using rule 32 (expression -> ID .)
    MINUS           reduce using rule 32 (expression -> ID .)
    TIMES           reduce using rule 32 (expression -> ID .)
    DIVIDE          reduce using rule 32 (expression -> ID .)
    MOD             reduce using rule 32 (expression -> ID .)
    VAR             reduce using rule 32 (expression -> ID .)
    VAL             reduce using rule 32 (expression -> ID .)
    ID              reduce using rule 32 (expression -> ID .)
    LPAREN          reduce using rule 32 (expression -> ID .)
    NUMBER          reduce using rule 32 (expression -> ID .)
    FLOAT           reduce using rule 32 (expression -> ID .)
    DOUBLE          reduce using rule 32 (expression -> ID .)
    BOOLEAN         reduce using rule 32 (expression -> ID .)
    STRING          reduce using rule 32 (expression -> ID .)
    PRINTLN         reduce using rule 32 (expression -> ID .)
    PRINT           reduce using rule 32 (expression -> ID .)
    READLINE        reduce using rule 32 (expression -> ID .)
    REPEAT          reduce using rule 32 (expression -> ID .)
    IF              reduce using rule 32 (expression -> ID .)
    WHEN            reduce using rule 32 (expression -> ID .)
    WHILE           reduce using rule 32 (expression -> ID .)
    FOR             reduce using rule 32 (expression -> ID .)
    LISTOF          reduce using rule 32 (expression -> ID .)
    MAPOF           reduce using rule 32 (expression -> ID .)
    SETOF           reduce using rule 32 (expression -> ID .)
    $end            reduce using rule 32 (expression -> ID .)
    RBRACE          reduce using rule 32 (expression -> ID .)
    ELSE            reduce using rule 32 (expression -> ID .)
    COMMA           reduce using rule 32 (expression -> ID .)
    TO              reduce using rule 32 (expression -> ID .)
    ARROW           reduce using rule 32 (expression -> ID .)


state 50

    (33) range -> NUMBER RANGE . NUMBER

    NUMBER          shift and go to state 78


state 51

    (35) print -> PRINTLN LPAREN . argument_list RPAREN
    (37) argument_list -> . expression
    (38) argument_list -> . expression COMMA expression
    (39) argument_list -> . argument_list COMMA expression
    (40) argument_list -> . empty
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (63) empty -> .
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 49
    RPAREN          reduce using rule 63 (empty -> .)
    COMMA           reduce using rule 63 (empty -> .)
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    argument_list                  shift and go to state 79
    expression                     shift and go to state 80
    empty                          shift and go to state 81
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 52

    (36) print -> PRINT LPAREN . argument_list RPAREN
    (37) argument_list -> . expression
    (38) argument_list -> . expression COMMA expression
    (39) argument_list -> . argument_list COMMA expression
    (40) argument_list -> . empty
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (63) empty -> .
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 49
    RPAREN          reduce using rule 63 (empty -> .)
    COMMA           reduce using rule 63 (empty -> .)
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    argument_list                  shift and go to state 82
    expression                     shift and go to state 80
    empty                          shift and go to state 81
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 53

    (41) input -> READLINE LPAREN . RPAREN

    RPAREN          shift and go to state 83


state 54

    (42) repeat -> REPEAT LPAREN . NUMBER RPAREN LBRACE statement_list RBRACE

    NUMBER          shift and go to state 84


state 55

    (43) condition -> IF LPAREN . expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (44) condition -> IF LPAREN . expression RPAREN LBRACE statement_list RBRACE
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 49
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    expression                     shift and go to state 85
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 56

    (48) condition -> WHEN LPAREN . expression RPAREN LBRACE when_cases RBRACE
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 49
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    expression                     shift and go to state 86
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 57

    (45) loop -> WHILE LPAREN . expression RPAREN LBRACE statement_list RBRACE
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 49
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    expression                     shift and go to state 87
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 58

    (46) loop -> FOR LPAREN . ID IN expression RPAREN LBRACE statement_list RBRACE
    (47) loop -> FOR LPAREN . ID IN range RPAREN LBRACE statement_list RBRACE

    ID              shift and go to state 88


state 59

    (55) data_structure -> LISTOF LPAREN . argument_list RPAREN
    (37) argument_list -> . expression
    (38) argument_list -> . expression COMMA expression
    (39) argument_list -> . argument_list COMMA expression
    (40) argument_list -> . empty
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (63) empty -> .
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 49
    RPAREN          reduce using rule 63 (empty -> .)
    COMMA           reduce using rule 63 (empty -> .)
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    argument_list                  shift and go to state 89
    expression                     shift and go to state 80
    empty                          shift and go to state 81
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 60

    (56) data_structure -> MAPOF LPAREN . map_argument_list RPAREN
    (59) map_argument_list -> . map_element
    (60) map_argument_list -> . map_argument_list COMMA map_element
    (61) map_element -> . expression TO expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 49
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    map_argument_list              shift and go to state 90
    map_element                    shift and go to state 91
    expression                     shift and go to state 92
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 61

    (57) data_structure -> SETOF LPAREN . argument_list RPAREN
    (37) argument_list -> . expression
    (38) argument_list -> . expression COMMA expression
    (39) argument_list -> . argument_list COMMA expression
    (40) argument_list -> . empty
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (63) empty -> .
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 49
    RPAREN          reduce using rule 63 (empty -> .)
    COMMA           reduce using rule 63 (empty -> .)
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    argument_list                  shift and go to state 93
    expression                     shift and go to state 80
    empty                          shift and go to state 81
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 62

    (14) expression -> expression NOTEQ expression .
    (14) expression -> expression . NOTEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . LTEQ expression
    (17) expression -> expression . GT expression
    (18) expression -> expression . GTEQ expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression

    NOTEQ           reduce using rule 14 (expression -> expression NOTEQ expression .)
    LT              reduce using rule 14 (expression -> expression NOTEQ expression .)
    LTEQ            reduce using rule 14 (expression -> expression NOTEQ expression .)
    GT              reduce using rule 14 (expression -> expression NOTEQ expression .)
    GTEQ            reduce using rule 14 (expression -> expression NOTEQ expression .)
    AND             reduce using rule 14 (expression -> expression NOTEQ expression .)
    OR              reduce using rule 14 (expression -> expression NOTEQ expression .)
    VAR             reduce using rule 14 (expression -> expression NOTEQ expression .)
    VAL             reduce using rule 14 (expression -> expression NOTEQ expression .)
    ID              reduce using rule 14 (expression -> expression NOTEQ expression .)
    LPAREN          reduce using rule 14 (expression -> expression NOTEQ expression .)
    NUMBER          reduce using rule 14 (expression -> expression NOTEQ expression .)
    FLOAT           reduce using rule 14 (expression -> expression NOTEQ expression .)
    DOUBLE          reduce using rule 14 (expression -> expression NOTEQ expression .)
    BOOLEAN         reduce using rule 14 (expression -> expression NOTEQ expression .)
    STRING          reduce using rule 14 (expression -> expression NOTEQ expression .)
    PRINTLN         reduce using rule 14 (expression -> expression NOTEQ expression .)
    PRINT           reduce using rule 14 (expression -> expression NOTEQ expression .)
    READLINE        reduce using rule 14 (expression -> expression NOTEQ expression .)
    REPEAT          reduce using rule 14 (expression -> expression NOTEQ expression .)
    IF              reduce using rule 14 (expression -> expression NOTEQ expression .)
    WHEN            reduce using rule 14 (expression -> expression NOTEQ expression .)
    WHILE           reduce using rule 14 (expression -> expression NOTEQ expression .)
    FOR             reduce using rule 14 (expression -> expression NOTEQ expression .)
    LISTOF          reduce using rule 14 (expression -> expression NOTEQ expression .)
    MAPOF           reduce using rule 14 (expression -> expression NOTEQ expression .)
    SETOF           reduce using rule 14 (expression -> expression NOTEQ expression .)
    $end            reduce using rule 14 (expression -> expression NOTEQ expression .)
    RPAREN          reduce using rule 14 (expression -> expression NOTEQ expression .)
    RBRACE          reduce using rule 14 (expression -> expression NOTEQ expression .)
    ELSE            reduce using rule 14 (expression -> expression NOTEQ expression .)
    COMMA           reduce using rule 14 (expression -> expression NOTEQ expression .)
    TO              reduce using rule 14 (expression -> expression NOTEQ expression .)
    ARROW           reduce using rule 14 (expression -> expression NOTEQ expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44

  ! PLUS            [ reduce using rule 14 (expression -> expression NOTEQ expression .) ]
  ! MINUS           [ reduce using rule 14 (expression -> expression NOTEQ expression .) ]
  ! TIMES           [ reduce using rule 14 (expression -> expression NOTEQ expression .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> expression NOTEQ expression .) ]
  ! MOD             [ reduce using rule 14 (expression -> expression NOTEQ expression .) ]
  ! NOTEQ           [ shift and go to state 33 ]
  ! LT              [ shift and go to state 34 ]
  ! LTEQ            [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! GTEQ            [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]


state 63

    (15) expression -> expression LT expression .
    (14) expression -> expression . NOTEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . LTEQ expression
    (17) expression -> expression . GT expression
    (18) expression -> expression . GTEQ expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression

    NOTEQ           reduce using rule 15 (expression -> expression LT expression .)
    LT              reduce using rule 15 (expression -> expression LT expression .)
    LTEQ            reduce using rule 15 (expression -> expression LT expression .)
    GT              reduce using rule 15 (expression -> expression LT expression .)
    GTEQ            reduce using rule 15 (expression -> expression LT expression .)
    AND             reduce using rule 15 (expression -> expression LT expression .)
    OR              reduce using rule 15 (expression -> expression LT expression .)
    VAR             reduce using rule 15 (expression -> expression LT expression .)
    VAL             reduce using rule 15 (expression -> expression LT expression .)
    ID              reduce using rule 15 (expression -> expression LT expression .)
    LPAREN          reduce using rule 15 (expression -> expression LT expression .)
    NUMBER          reduce using rule 15 (expression -> expression LT expression .)
    FLOAT           reduce using rule 15 (expression -> expression LT expression .)
    DOUBLE          reduce using rule 15 (expression -> expression LT expression .)
    BOOLEAN         reduce using rule 15 (expression -> expression LT expression .)
    STRING          reduce using rule 15 (expression -> expression LT expression .)
    PRINTLN         reduce using rule 15 (expression -> expression LT expression .)
    PRINT           reduce using rule 15 (expression -> expression LT expression .)
    READLINE        reduce using rule 15 (expression -> expression LT expression .)
    REPEAT          reduce using rule 15 (expression -> expression LT expression .)
    IF              reduce using rule 15 (expression -> expression LT expression .)
    WHEN            reduce using rule 15 (expression -> expression LT expression .)
    WHILE           reduce using rule 15 (expression -> expression LT expression .)
    FOR             reduce using rule 15 (expression -> expression LT expression .)
    LISTOF          reduce using rule 15 (expression -> expression LT expression .)
    MAPOF           reduce using rule 15 (expression -> expression LT expression .)
    SETOF           reduce using rule 15 (expression -> expression LT expression .)
    $end            reduce using rule 15 (expression -> expression LT expression .)
    RPAREN          reduce using rule 15 (expression -> expression LT expression .)
    RBRACE          reduce using rule 15 (expression -> expression LT expression .)
    ELSE            reduce using rule 15 (expression -> expression LT expression .)
    COMMA           reduce using rule 15 (expression -> expression LT expression .)
    TO              reduce using rule 15 (expression -> expression LT expression .)
    ARROW           reduce using rule 15 (expression -> expression LT expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44

  ! PLUS            [ reduce using rule 15 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 15 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 15 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> expression LT expression .) ]
  ! MOD             [ reduce using rule 15 (expression -> expression LT expression .) ]
  ! NOTEQ           [ shift and go to state 33 ]
  ! LT              [ shift and go to state 34 ]
  ! LTEQ            [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! GTEQ            [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]


state 64

    (16) expression -> expression LTEQ expression .
    (14) expression -> expression . NOTEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . LTEQ expression
    (17) expression -> expression . GT expression
    (18) expression -> expression . GTEQ expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression

    NOTEQ           reduce using rule 16 (expression -> expression LTEQ expression .)
    LT              reduce using rule 16 (expression -> expression LTEQ expression .)
    LTEQ            reduce using rule 16 (expression -> expression LTEQ expression .)
    GT              reduce using rule 16 (expression -> expression LTEQ expression .)
    GTEQ            reduce using rule 16 (expression -> expression LTEQ expression .)
    AND             reduce using rule 16 (expression -> expression LTEQ expression .)
    OR              reduce using rule 16 (expression -> expression LTEQ expression .)
    VAR             reduce using rule 16 (expression -> expression LTEQ expression .)
    VAL             reduce using rule 16 (expression -> expression LTEQ expression .)
    ID              reduce using rule 16 (expression -> expression LTEQ expression .)
    LPAREN          reduce using rule 16 (expression -> expression LTEQ expression .)
    NUMBER          reduce using rule 16 (expression -> expression LTEQ expression .)
    FLOAT           reduce using rule 16 (expression -> expression LTEQ expression .)
    DOUBLE          reduce using rule 16 (expression -> expression LTEQ expression .)
    BOOLEAN         reduce using rule 16 (expression -> expression LTEQ expression .)
    STRING          reduce using rule 16 (expression -> expression LTEQ expression .)
    PRINTLN         reduce using rule 16 (expression -> expression LTEQ expression .)
    PRINT           reduce using rule 16 (expression -> expression LTEQ expression .)
    READLINE        reduce using rule 16 (expression -> expression LTEQ expression .)
    REPEAT          reduce using rule 16 (expression -> expression LTEQ expression .)
    IF              reduce using rule 16 (expression -> expression LTEQ expression .)
    WHEN            reduce using rule 16 (expression -> expression LTEQ expression .)
    WHILE           reduce using rule 16 (expression -> expression LTEQ expression .)
    FOR             reduce using rule 16 (expression -> expression LTEQ expression .)
    LISTOF          reduce using rule 16 (expression -> expression LTEQ expression .)
    MAPOF           reduce using rule 16 (expression -> expression LTEQ expression .)
    SETOF           reduce using rule 16 (expression -> expression LTEQ expression .)
    $end            reduce using rule 16 (expression -> expression LTEQ expression .)
    RPAREN          reduce using rule 16 (expression -> expression LTEQ expression .)
    RBRACE          reduce using rule 16 (expression -> expression LTEQ expression .)
    ELSE            reduce using rule 16 (expression -> expression LTEQ expression .)
    COMMA           reduce using rule 16 (expression -> expression LTEQ expression .)
    TO              reduce using rule 16 (expression -> expression LTEQ expression .)
    ARROW           reduce using rule 16 (expression -> expression LTEQ expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44

  ! PLUS            [ reduce using rule 16 (expression -> expression LTEQ expression .) ]
  ! MINUS           [ reduce using rule 16 (expression -> expression LTEQ expression .) ]
  ! TIMES           [ reduce using rule 16 (expression -> expression LTEQ expression .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> expression LTEQ expression .) ]
  ! MOD             [ reduce using rule 16 (expression -> expression LTEQ expression .) ]
  ! NOTEQ           [ shift and go to state 33 ]
  ! LT              [ shift and go to state 34 ]
  ! LTEQ            [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! GTEQ            [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]


state 65

    (17) expression -> expression GT expression .
    (14) expression -> expression . NOTEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . LTEQ expression
    (17) expression -> expression . GT expression
    (18) expression -> expression . GTEQ expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression

    NOTEQ           reduce using rule 17 (expression -> expression GT expression .)
    LT              reduce using rule 17 (expression -> expression GT expression .)
    LTEQ            reduce using rule 17 (expression -> expression GT expression .)
    GT              reduce using rule 17 (expression -> expression GT expression .)
    GTEQ            reduce using rule 17 (expression -> expression GT expression .)
    AND             reduce using rule 17 (expression -> expression GT expression .)
    OR              reduce using rule 17 (expression -> expression GT expression .)
    VAR             reduce using rule 17 (expression -> expression GT expression .)
    VAL             reduce using rule 17 (expression -> expression GT expression .)
    ID              reduce using rule 17 (expression -> expression GT expression .)
    LPAREN          reduce using rule 17 (expression -> expression GT expression .)
    NUMBER          reduce using rule 17 (expression -> expression GT expression .)
    FLOAT           reduce using rule 17 (expression -> expression GT expression .)
    DOUBLE          reduce using rule 17 (expression -> expression GT expression .)
    BOOLEAN         reduce using rule 17 (expression -> expression GT expression .)
    STRING          reduce using rule 17 (expression -> expression GT expression .)
    PRINTLN         reduce using rule 17 (expression -> expression GT expression .)
    PRINT           reduce using rule 17 (expression -> expression GT expression .)
    READLINE        reduce using rule 17 (expression -> expression GT expression .)
    REPEAT          reduce using rule 17 (expression -> expression GT expression .)
    IF              reduce using rule 17 (expression -> expression GT expression .)
    WHEN            reduce using rule 17 (expression -> expression GT expression .)
    WHILE           reduce using rule 17 (expression -> expression GT expression .)
    FOR             reduce using rule 17 (expression -> expression GT expression .)
    LISTOF          reduce using rule 17 (expression -> expression GT expression .)
    MAPOF           reduce using rule 17 (expression -> expression GT expression .)
    SETOF           reduce using rule 17 (expression -> expression GT expression .)
    $end            reduce using rule 17 (expression -> expression GT expression .)
    RPAREN          reduce using rule 17 (expression -> expression GT expression .)
    RBRACE          reduce using rule 17 (expression -> expression GT expression .)
    ELSE            reduce using rule 17 (expression -> expression GT expression .)
    COMMA           reduce using rule 17 (expression -> expression GT expression .)
    TO              reduce using rule 17 (expression -> expression GT expression .)
    ARROW           reduce using rule 17 (expression -> expression GT expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44

  ! PLUS            [ reduce using rule 17 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 17 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 17 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression GT expression .) ]
  ! MOD             [ reduce using rule 17 (expression -> expression GT expression .) ]
  ! NOTEQ           [ shift and go to state 33 ]
  ! LT              [ shift and go to state 34 ]
  ! LTEQ            [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! GTEQ            [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]


state 66

    (18) expression -> expression GTEQ expression .
    (14) expression -> expression . NOTEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . LTEQ expression
    (17) expression -> expression . GT expression
    (18) expression -> expression . GTEQ expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression

    NOTEQ           reduce using rule 18 (expression -> expression GTEQ expression .)
    LT              reduce using rule 18 (expression -> expression GTEQ expression .)
    LTEQ            reduce using rule 18 (expression -> expression GTEQ expression .)
    GT              reduce using rule 18 (expression -> expression GTEQ expression .)
    GTEQ            reduce using rule 18 (expression -> expression GTEQ expression .)
    AND             reduce using rule 18 (expression -> expression GTEQ expression .)
    OR              reduce using rule 18 (expression -> expression GTEQ expression .)
    VAR             reduce using rule 18 (expression -> expression GTEQ expression .)
    VAL             reduce using rule 18 (expression -> expression GTEQ expression .)
    ID              reduce using rule 18 (expression -> expression GTEQ expression .)
    LPAREN          reduce using rule 18 (expression -> expression GTEQ expression .)
    NUMBER          reduce using rule 18 (expression -> expression GTEQ expression .)
    FLOAT           reduce using rule 18 (expression -> expression GTEQ expression .)
    DOUBLE          reduce using rule 18 (expression -> expression GTEQ expression .)
    BOOLEAN         reduce using rule 18 (expression -> expression GTEQ expression .)
    STRING          reduce using rule 18 (expression -> expression GTEQ expression .)
    PRINTLN         reduce using rule 18 (expression -> expression GTEQ expression .)
    PRINT           reduce using rule 18 (expression -> expression GTEQ expression .)
    READLINE        reduce using rule 18 (expression -> expression GTEQ expression .)
    REPEAT          reduce using rule 18 (expression -> expression GTEQ expression .)
    IF              reduce using rule 18 (expression -> expression GTEQ expression .)
    WHEN            reduce using rule 18 (expression -> expression GTEQ expression .)
    WHILE           reduce using rule 18 (expression -> expression GTEQ expression .)
    FOR             reduce using rule 18 (expression -> expression GTEQ expression .)
    LISTOF          reduce using rule 18 (expression -> expression GTEQ expression .)
    MAPOF           reduce using rule 18 (expression -> expression GTEQ expression .)
    SETOF           reduce using rule 18 (expression -> expression GTEQ expression .)
    $end            reduce using rule 18 (expression -> expression GTEQ expression .)
    RPAREN          reduce using rule 18 (expression -> expression GTEQ expression .)
    RBRACE          reduce using rule 18 (expression -> expression GTEQ expression .)
    ELSE            reduce using rule 18 (expression -> expression GTEQ expression .)
    COMMA           reduce using rule 18 (expression -> expression GTEQ expression .)
    TO              reduce using rule 18 (expression -> expression GTEQ expression .)
    ARROW           reduce using rule 18 (expression -> expression GTEQ expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44

  ! PLUS            [ reduce using rule 18 (expression -> expression GTEQ expression .) ]
  ! MINUS           [ reduce using rule 18 (expression -> expression GTEQ expression .) ]
  ! TIMES           [ reduce using rule 18 (expression -> expression GTEQ expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression GTEQ expression .) ]
  ! MOD             [ reduce using rule 18 (expression -> expression GTEQ expression .) ]
  ! NOTEQ           [ shift and go to state 33 ]
  ! LT              [ shift and go to state 34 ]
  ! LTEQ            [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! GTEQ            [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]


state 67

    (19) expression -> expression AND expression .
    (14) expression -> expression . NOTEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . LTEQ expression
    (17) expression -> expression . GT expression
    (18) expression -> expression . GTEQ expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression

    AND             reduce using rule 19 (expression -> expression AND expression .)
    OR              reduce using rule 19 (expression -> expression AND expression .)
    VAR             reduce using rule 19 (expression -> expression AND expression .)
    VAL             reduce using rule 19 (expression -> expression AND expression .)
    ID              reduce using rule 19 (expression -> expression AND expression .)
    LPAREN          reduce using rule 19 (expression -> expression AND expression .)
    NUMBER          reduce using rule 19 (expression -> expression AND expression .)
    FLOAT           reduce using rule 19 (expression -> expression AND expression .)
    DOUBLE          reduce using rule 19 (expression -> expression AND expression .)
    BOOLEAN         reduce using rule 19 (expression -> expression AND expression .)
    STRING          reduce using rule 19 (expression -> expression AND expression .)
    PRINTLN         reduce using rule 19 (expression -> expression AND expression .)
    PRINT           reduce using rule 19 (expression -> expression AND expression .)
    READLINE        reduce using rule 19 (expression -> expression AND expression .)
    REPEAT          reduce using rule 19 (expression -> expression AND expression .)
    IF              reduce using rule 19 (expression -> expression AND expression .)
    WHEN            reduce using rule 19 (expression -> expression AND expression .)
    WHILE           reduce using rule 19 (expression -> expression AND expression .)
    FOR             reduce using rule 19 (expression -> expression AND expression .)
    LISTOF          reduce using rule 19 (expression -> expression AND expression .)
    MAPOF           reduce using rule 19 (expression -> expression AND expression .)
    SETOF           reduce using rule 19 (expression -> expression AND expression .)
    $end            reduce using rule 19 (expression -> expression AND expression .)
    RPAREN          reduce using rule 19 (expression -> expression AND expression .)
    RBRACE          reduce using rule 19 (expression -> expression AND expression .)
    ELSE            reduce using rule 19 (expression -> expression AND expression .)
    COMMA           reduce using rule 19 (expression -> expression AND expression .)
    TO              reduce using rule 19 (expression -> expression AND expression .)
    ARROW           reduce using rule 19 (expression -> expression AND expression .)
    NOTEQ           shift and go to state 33
    LT              shift and go to state 34
    LTEQ            shift and go to state 35
    GT              shift and go to state 36
    GTEQ            shift and go to state 37
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44

  ! NOTEQ           [ reduce using rule 19 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 19 (expression -> expression AND expression .) ]
  ! LTEQ            [ reduce using rule 19 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 19 (expression -> expression AND expression .) ]
  ! GTEQ            [ reduce using rule 19 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 19 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 19 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 19 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression -> expression AND expression .) ]
  ! MOD             [ reduce using rule 19 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]


state 68

    (20) expression -> expression OR expression .
    (14) expression -> expression . NOTEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . LTEQ expression
    (17) expression -> expression . GT expression
    (18) expression -> expression . GTEQ expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression

    OR              reduce using rule 20 (expression -> expression OR expression .)
    VAR             reduce using rule 20 (expression -> expression OR expression .)
    VAL             reduce using rule 20 (expression -> expression OR expression .)
    ID              reduce using rule 20 (expression -> expression OR expression .)
    LPAREN          reduce using rule 20 (expression -> expression OR expression .)
    NUMBER          reduce using rule 20 (expression -> expression OR expression .)
    FLOAT           reduce using rule 20 (expression -> expression OR expression .)
    DOUBLE          reduce using rule 20 (expression -> expression OR expression .)
    BOOLEAN         reduce using rule 20 (expression -> expression OR expression .)
    STRING          reduce using rule 20 (expression -> expression OR expression .)
    PRINTLN         reduce using rule 20 (expression -> expression OR expression .)
    PRINT           reduce using rule 20 (expression -> expression OR expression .)
    READLINE        reduce using rule 20 (expression -> expression OR expression .)
    REPEAT          reduce using rule 20 (expression -> expression OR expression .)
    IF              reduce using rule 20 (expression -> expression OR expression .)
    WHEN            reduce using rule 20 (expression -> expression OR expression .)
    WHILE           reduce using rule 20 (expression -> expression OR expression .)
    FOR             reduce using rule 20 (expression -> expression OR expression .)
    LISTOF          reduce using rule 20 (expression -> expression OR expression .)
    MAPOF           reduce using rule 20 (expression -> expression OR expression .)
    SETOF           reduce using rule 20 (expression -> expression OR expression .)
    $end            reduce using rule 20 (expression -> expression OR expression .)
    RPAREN          reduce using rule 20 (expression -> expression OR expression .)
    RBRACE          reduce using rule 20 (expression -> expression OR expression .)
    ELSE            reduce using rule 20 (expression -> expression OR expression .)
    COMMA           reduce using rule 20 (expression -> expression OR expression .)
    TO              reduce using rule 20 (expression -> expression OR expression .)
    ARROW           reduce using rule 20 (expression -> expression OR expression .)
    NOTEQ           shift and go to state 33
    LT              shift and go to state 34
    LTEQ            shift and go to state 35
    GT              shift and go to state 36
    GTEQ            shift and go to state 37
    AND             shift and go to state 38
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44

  ! NOTEQ           [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! LTEQ            [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! GTEQ            [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! MOD             [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 39 ]


state 69

    (21) expression -> expression PLUS expression .
    (14) expression -> expression . NOTEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . LTEQ expression
    (17) expression -> expression . GT expression
    (18) expression -> expression . GTEQ expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression

    NOTEQ           reduce using rule 21 (expression -> expression PLUS expression .)
    LT              reduce using rule 21 (expression -> expression PLUS expression .)
    LTEQ            reduce using rule 21 (expression -> expression PLUS expression .)
    GT              reduce using rule 21 (expression -> expression PLUS expression .)
    GTEQ            reduce using rule 21 (expression -> expression PLUS expression .)
    AND             reduce using rule 21 (expression -> expression PLUS expression .)
    OR              reduce using rule 21 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 21 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 21 (expression -> expression PLUS expression .)
    VAR             reduce using rule 21 (expression -> expression PLUS expression .)
    VAL             reduce using rule 21 (expression -> expression PLUS expression .)
    ID              reduce using rule 21 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 21 (expression -> expression PLUS expression .)
    NUMBER          reduce using rule 21 (expression -> expression PLUS expression .)
    FLOAT           reduce using rule 21 (expression -> expression PLUS expression .)
    DOUBLE          reduce using rule 21 (expression -> expression PLUS expression .)
    BOOLEAN         reduce using rule 21 (expression -> expression PLUS expression .)
    STRING          reduce using rule 21 (expression -> expression PLUS expression .)
    PRINTLN         reduce using rule 21 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 21 (expression -> expression PLUS expression .)
    READLINE        reduce using rule 21 (expression -> expression PLUS expression .)
    REPEAT          reduce using rule 21 (expression -> expression PLUS expression .)
    IF              reduce using rule 21 (expression -> expression PLUS expression .)
    WHEN            reduce using rule 21 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 21 (expression -> expression PLUS expression .)
    FOR             reduce using rule 21 (expression -> expression PLUS expression .)
    LISTOF          reduce using rule 21 (expression -> expression PLUS expression .)
    MAPOF           reduce using rule 21 (expression -> expression PLUS expression .)
    SETOF           reduce using rule 21 (expression -> expression PLUS expression .)
    $end            reduce using rule 21 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 21 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 21 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 21 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 21 (expression -> expression PLUS expression .)
    TO              reduce using rule 21 (expression -> expression PLUS expression .)
    ARROW           reduce using rule 21 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44

  ! TIMES           [ reduce using rule 21 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 21 (expression -> expression PLUS expression .) ]
  ! NOTEQ           [ shift and go to state 33 ]
  ! LT              [ shift and go to state 34 ]
  ! LTEQ            [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! GTEQ            [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 41 ]


state 70

    (22) expression -> expression MINUS expression .
    (14) expression -> expression . NOTEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . LTEQ expression
    (17) expression -> expression . GT expression
    (18) expression -> expression . GTEQ expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression

    NOTEQ           reduce using rule 22 (expression -> expression MINUS expression .)
    LT              reduce using rule 22 (expression -> expression MINUS expression .)
    LTEQ            reduce using rule 22 (expression -> expression MINUS expression .)
    GT              reduce using rule 22 (expression -> expression MINUS expression .)
    GTEQ            reduce using rule 22 (expression -> expression MINUS expression .)
    AND             reduce using rule 22 (expression -> expression MINUS expression .)
    OR              reduce using rule 22 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 22 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 22 (expression -> expression MINUS expression .)
    VAR             reduce using rule 22 (expression -> expression MINUS expression .)
    VAL             reduce using rule 22 (expression -> expression MINUS expression .)
    ID              reduce using rule 22 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 22 (expression -> expression MINUS expression .)
    NUMBER          reduce using rule 22 (expression -> expression MINUS expression .)
    FLOAT           reduce using rule 22 (expression -> expression MINUS expression .)
    DOUBLE          reduce using rule 22 (expression -> expression MINUS expression .)
    BOOLEAN         reduce using rule 22 (expression -> expression MINUS expression .)
    STRING          reduce using rule 22 (expression -> expression MINUS expression .)
    PRINTLN         reduce using rule 22 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 22 (expression -> expression MINUS expression .)
    READLINE        reduce using rule 22 (expression -> expression MINUS expression .)
    REPEAT          reduce using rule 22 (expression -> expression MINUS expression .)
    IF              reduce using rule 22 (expression -> expression MINUS expression .)
    WHEN            reduce using rule 22 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 22 (expression -> expression MINUS expression .)
    FOR             reduce using rule 22 (expression -> expression MINUS expression .)
    LISTOF          reduce using rule 22 (expression -> expression MINUS expression .)
    MAPOF           reduce using rule 22 (expression -> expression MINUS expression .)
    SETOF           reduce using rule 22 (expression -> expression MINUS expression .)
    $end            reduce using rule 22 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 22 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 22 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 22 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 22 (expression -> expression MINUS expression .)
    TO              reduce using rule 22 (expression -> expression MINUS expression .)
    ARROW           reduce using rule 22 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44

  ! TIMES           [ reduce using rule 22 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 22 (expression -> expression MINUS expression .) ]
  ! NOTEQ           [ shift and go to state 33 ]
  ! LT              [ shift and go to state 34 ]
  ! LTEQ            [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! GTEQ            [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 41 ]


state 71

    (23) expression -> expression TIMES expression .
    (14) expression -> expression . NOTEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . LTEQ expression
    (17) expression -> expression . GT expression
    (18) expression -> expression . GTEQ expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression

    NOTEQ           reduce using rule 23 (expression -> expression TIMES expression .)
    LT              reduce using rule 23 (expression -> expression TIMES expression .)
    LTEQ            reduce using rule 23 (expression -> expression TIMES expression .)
    GT              reduce using rule 23 (expression -> expression TIMES expression .)
    GTEQ            reduce using rule 23 (expression -> expression TIMES expression .)
    AND             reduce using rule 23 (expression -> expression TIMES expression .)
    OR              reduce using rule 23 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 23 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 23 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 23 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 23 (expression -> expression TIMES expression .)
    MOD             reduce using rule 23 (expression -> expression TIMES expression .)
    VAR             reduce using rule 23 (expression -> expression TIMES expression .)
    VAL             reduce using rule 23 (expression -> expression TIMES expression .)
    ID              reduce using rule 23 (expression -> expression TIMES expression .)
    LPAREN          reduce using rule 23 (expression -> expression TIMES expression .)
    NUMBER          reduce using rule 23 (expression -> expression TIMES expression .)
    FLOAT           reduce using rule 23 (expression -> expression TIMES expression .)
    DOUBLE          reduce using rule 23 (expression -> expression TIMES expression .)
    BOOLEAN         reduce using rule 23 (expression -> expression TIMES expression .)
    STRING          reduce using rule 23 (expression -> expression TIMES expression .)
    PRINTLN         reduce using rule 23 (expression -> expression TIMES expression .)
    PRINT           reduce using rule 23 (expression -> expression TIMES expression .)
    READLINE        reduce using rule 23 (expression -> expression TIMES expression .)
    REPEAT          reduce using rule 23 (expression -> expression TIMES expression .)
    IF              reduce using rule 23 (expression -> expression TIMES expression .)
    WHEN            reduce using rule 23 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 23 (expression -> expression TIMES expression .)
    FOR             reduce using rule 23 (expression -> expression TIMES expression .)
    LISTOF          reduce using rule 23 (expression -> expression TIMES expression .)
    MAPOF           reduce using rule 23 (expression -> expression TIMES expression .)
    SETOF           reduce using rule 23 (expression -> expression TIMES expression .)
    $end            reduce using rule 23 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 23 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 23 (expression -> expression TIMES expression .)
    ELSE            reduce using rule 23 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 23 (expression -> expression TIMES expression .)
    TO              reduce using rule 23 (expression -> expression TIMES expression .)
    ARROW           reduce using rule 23 (expression -> expression TIMES expression .)

  ! NOTEQ           [ shift and go to state 33 ]
  ! LT              [ shift and go to state 34 ]
  ! LTEQ            [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! GTEQ            [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 41 ]
  ! TIMES           [ shift and go to state 42 ]
  ! DIVIDE          [ shift and go to state 43 ]
  ! MOD             [ shift and go to state 44 ]


state 72

    (24) expression -> expression DIVIDE expression .
    (14) expression -> expression . NOTEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . LTEQ expression
    (17) expression -> expression . GT expression
    (18) expression -> expression . GTEQ expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression

    NOTEQ           reduce using rule 24 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 24 (expression -> expression DIVIDE expression .)
    LTEQ            reduce using rule 24 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 24 (expression -> expression DIVIDE expression .)
    GTEQ            reduce using rule 24 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 24 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 24 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 24 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 24 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 24 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 24 (expression -> expression DIVIDE expression .)
    MOD             reduce using rule 24 (expression -> expression DIVIDE expression .)
    VAR             reduce using rule 24 (expression -> expression DIVIDE expression .)
    VAL             reduce using rule 24 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 24 (expression -> expression DIVIDE expression .)
    LPAREN          reduce using rule 24 (expression -> expression DIVIDE expression .)
    NUMBER          reduce using rule 24 (expression -> expression DIVIDE expression .)
    FLOAT           reduce using rule 24 (expression -> expression DIVIDE expression .)
    DOUBLE          reduce using rule 24 (expression -> expression DIVIDE expression .)
    BOOLEAN         reduce using rule 24 (expression -> expression DIVIDE expression .)
    STRING          reduce using rule 24 (expression -> expression DIVIDE expression .)
    PRINTLN         reduce using rule 24 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 24 (expression -> expression DIVIDE expression .)
    READLINE        reduce using rule 24 (expression -> expression DIVIDE expression .)
    REPEAT          reduce using rule 24 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 24 (expression -> expression DIVIDE expression .)
    WHEN            reduce using rule 24 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 24 (expression -> expression DIVIDE expression .)
    FOR             reduce using rule 24 (expression -> expression DIVIDE expression .)
    LISTOF          reduce using rule 24 (expression -> expression DIVIDE expression .)
    MAPOF           reduce using rule 24 (expression -> expression DIVIDE expression .)
    SETOF           reduce using rule 24 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 24 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 24 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 24 (expression -> expression DIVIDE expression .)
    ELSE            reduce using rule 24 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 24 (expression -> expression DIVIDE expression .)
    TO              reduce using rule 24 (expression -> expression DIVIDE expression .)
    ARROW           reduce using rule 24 (expression -> expression DIVIDE expression .)

  ! NOTEQ           [ shift and go to state 33 ]
  ! LT              [ shift and go to state 34 ]
  ! LTEQ            [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! GTEQ            [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 41 ]
  ! TIMES           [ shift and go to state 42 ]
  ! DIVIDE          [ shift and go to state 43 ]
  ! MOD             [ shift and go to state 44 ]


state 73

    (25) expression -> expression MOD expression .
    (14) expression -> expression . NOTEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . LTEQ expression
    (17) expression -> expression . GT expression
    (18) expression -> expression . GTEQ expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression

    NOTEQ           reduce using rule 25 (expression -> expression MOD expression .)
    LT              reduce using rule 25 (expression -> expression MOD expression .)
    LTEQ            reduce using rule 25 (expression -> expression MOD expression .)
    GT              reduce using rule 25 (expression -> expression MOD expression .)
    GTEQ            reduce using rule 25 (expression -> expression MOD expression .)
    AND             reduce using rule 25 (expression -> expression MOD expression .)
    OR              reduce using rule 25 (expression -> expression MOD expression .)
    PLUS            reduce using rule 25 (expression -> expression MOD expression .)
    MINUS           reduce using rule 25 (expression -> expression MOD expression .)
    TIMES           reduce using rule 25 (expression -> expression MOD expression .)
    DIVIDE          reduce using rule 25 (expression -> expression MOD expression .)
    MOD             reduce using rule 25 (expression -> expression MOD expression .)
    VAR             reduce using rule 25 (expression -> expression MOD expression .)
    VAL             reduce using rule 25 (expression -> expression MOD expression .)
    ID              reduce using rule 25 (expression -> expression MOD expression .)
    LPAREN          reduce using rule 25 (expression -> expression MOD expression .)
    NUMBER          reduce using rule 25 (expression -> expression MOD expression .)
    FLOAT           reduce using rule 25 (expression -> expression MOD expression .)
    DOUBLE          reduce using rule 25 (expression -> expression MOD expression .)
    BOOLEAN         reduce using rule 25 (expression -> expression MOD expression .)
    STRING          reduce using rule 25 (expression -> expression MOD expression .)
    PRINTLN         reduce using rule 25 (expression -> expression MOD expression .)
    PRINT           reduce using rule 25 (expression -> expression MOD expression .)
    READLINE        reduce using rule 25 (expression -> expression MOD expression .)
    REPEAT          reduce using rule 25 (expression -> expression MOD expression .)
    IF              reduce using rule 25 (expression -> expression MOD expression .)
    WHEN            reduce using rule 25 (expression -> expression MOD expression .)
    WHILE           reduce using rule 25 (expression -> expression MOD expression .)
    FOR             reduce using rule 25 (expression -> expression MOD expression .)
    LISTOF          reduce using rule 25 (expression -> expression MOD expression .)
    MAPOF           reduce using rule 25 (expression -> expression MOD expression .)
    SETOF           reduce using rule 25 (expression -> expression MOD expression .)
    $end            reduce using rule 25 (expression -> expression MOD expression .)
    RPAREN          reduce using rule 25 (expression -> expression MOD expression .)
    RBRACE          reduce using rule 25 (expression -> expression MOD expression .)
    ELSE            reduce using rule 25 (expression -> expression MOD expression .)
    COMMA           reduce using rule 25 (expression -> expression MOD expression .)
    TO              reduce using rule 25 (expression -> expression MOD expression .)
    ARROW           reduce using rule 25 (expression -> expression MOD expression .)

  ! NOTEQ           [ shift and go to state 33 ]
  ! LT              [ shift and go to state 34 ]
  ! LTEQ            [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! GTEQ            [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 41 ]
  ! TIMES           [ shift and go to state 42 ]
  ! DIVIDE          [ shift and go to state 43 ]
  ! MOD             [ shift and go to state 44 ]


state 74

    (11) assignment -> VAR ID ASSIGN . expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 49
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    expression                     shift and go to state 94
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 75

    (13) assignment -> ID ASSIGN expression .
    (14) expression -> expression . NOTEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . LTEQ expression
    (17) expression -> expression . GT expression
    (18) expression -> expression . GTEQ expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression

    VAR             reduce using rule 13 (assignment -> ID ASSIGN expression .)
    VAL             reduce using rule 13 (assignment -> ID ASSIGN expression .)
    ID              reduce using rule 13 (assignment -> ID ASSIGN expression .)
    LPAREN          reduce using rule 13 (assignment -> ID ASSIGN expression .)
    NUMBER          reduce using rule 13 (assignment -> ID ASSIGN expression .)
    FLOAT           reduce using rule 13 (assignment -> ID ASSIGN expression .)
    DOUBLE          reduce using rule 13 (assignment -> ID ASSIGN expression .)
    BOOLEAN         reduce using rule 13 (assignment -> ID ASSIGN expression .)
    STRING          reduce using rule 13 (assignment -> ID ASSIGN expression .)
    PRINTLN         reduce using rule 13 (assignment -> ID ASSIGN expression .)
    PRINT           reduce using rule 13 (assignment -> ID ASSIGN expression .)
    READLINE        reduce using rule 13 (assignment -> ID ASSIGN expression .)
    REPEAT          reduce using rule 13 (assignment -> ID ASSIGN expression .)
    IF              reduce using rule 13 (assignment -> ID ASSIGN expression .)
    WHEN            reduce using rule 13 (assignment -> ID ASSIGN expression .)
    WHILE           reduce using rule 13 (assignment -> ID ASSIGN expression .)
    FOR             reduce using rule 13 (assignment -> ID ASSIGN expression .)
    LISTOF          reduce using rule 13 (assignment -> ID ASSIGN expression .)
    MAPOF           reduce using rule 13 (assignment -> ID ASSIGN expression .)
    SETOF           reduce using rule 13 (assignment -> ID ASSIGN expression .)
    $end            reduce using rule 13 (assignment -> ID ASSIGN expression .)
    RBRACE          reduce using rule 13 (assignment -> ID ASSIGN expression .)
    ELSE            reduce using rule 13 (assignment -> ID ASSIGN expression .)
    NOTEQ           shift and go to state 33
    LT              shift and go to state 34
    LTEQ            shift and go to state 35
    GT              shift and go to state 36
    GTEQ            shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44


state 76

    (12) assignment -> VAL ID ASSIGN . expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 49
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    expression                     shift and go to state 95
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 77

    (26) expression -> LPAREN expression RPAREN .

    NOTEQ           reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    LTEQ            reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    GTEQ            reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    VAR             reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    VAL             reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    ID              reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    FLOAT           reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    DOUBLE          reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    BOOLEAN         reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    STRING          reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    PRINTLN         reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    READLINE        reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    REPEAT          reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    WHEN            reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    FOR             reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    LISTOF          reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    MAPOF           reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    SETOF           reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    TO              reduce using rule 26 (expression -> LPAREN expression RPAREN .)
    ARROW           reduce using rule 26 (expression -> LPAREN expression RPAREN .)


state 78

    (33) range -> NUMBER RANGE NUMBER .

    NOTEQ           reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    LT              reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    LTEQ            reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    GT              reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    GTEQ            reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    AND             reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    OR              reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    PLUS            reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    MINUS           reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    TIMES           reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    DIVIDE          reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    MOD             reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    VAR             reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    VAL             reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    ID              reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    LPAREN          reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    NUMBER          reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    FLOAT           reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    DOUBLE          reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    BOOLEAN         reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    STRING          reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    PRINTLN         reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    PRINT           reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    READLINE        reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    REPEAT          reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    IF              reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    WHEN            reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    WHILE           reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    FOR             reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    LISTOF          reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    MAPOF           reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    SETOF           reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    $end            reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    RPAREN          reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    RBRACE          reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    ELSE            reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    COMMA           reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    TO              reduce using rule 33 (range -> NUMBER RANGE NUMBER .)
    ARROW           reduce using rule 33 (range -> NUMBER RANGE NUMBER .)


state 79

    (35) print -> PRINTLN LPAREN argument_list . RPAREN
    (39) argument_list -> argument_list . COMMA expression

    RPAREN          shift and go to state 96
    COMMA           shift and go to state 97


state 80

    (37) argument_list -> expression .
    (38) argument_list -> expression . COMMA expression
    (14) expression -> expression . NOTEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . LTEQ expression
    (17) expression -> expression . GT expression
    (18) expression -> expression . GTEQ expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression

  ! shift/reduce conflict for COMMA resolved as shift
    RPAREN          reduce using rule 37 (argument_list -> expression .)
    COMMA           shift and go to state 98
    NOTEQ           shift and go to state 33
    LT              shift and go to state 34
    LTEQ            shift and go to state 35
    GT              shift and go to state 36
    GTEQ            shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44

  ! COMMA           [ reduce using rule 37 (argument_list -> expression .) ]


state 81

    (40) argument_list -> empty .

    RPAREN          reduce using rule 40 (argument_list -> empty .)
    COMMA           reduce using rule 40 (argument_list -> empty .)


state 82

    (36) print -> PRINT LPAREN argument_list . RPAREN
    (39) argument_list -> argument_list . COMMA expression

    RPAREN          shift and go to state 99
    COMMA           shift and go to state 97


state 83

    (41) input -> READLINE LPAREN RPAREN .

    VAR             reduce using rule 41 (input -> READLINE LPAREN RPAREN .)
    VAL             reduce using rule 41 (input -> READLINE LPAREN RPAREN .)
    ID              reduce using rule 41 (input -> READLINE LPAREN RPAREN .)
    LPAREN          reduce using rule 41 (input -> READLINE LPAREN RPAREN .)
    NUMBER          reduce using rule 41 (input -> READLINE LPAREN RPAREN .)
    FLOAT           reduce using rule 41 (input -> READLINE LPAREN RPAREN .)
    DOUBLE          reduce using rule 41 (input -> READLINE LPAREN RPAREN .)
    BOOLEAN         reduce using rule 41 (input -> READLINE LPAREN RPAREN .)
    STRING          reduce using rule 41 (input -> READLINE LPAREN RPAREN .)
    PRINTLN         reduce using rule 41 (input -> READLINE LPAREN RPAREN .)
    PRINT           reduce using rule 41 (input -> READLINE LPAREN RPAREN .)
    READLINE        reduce using rule 41 (input -> READLINE LPAREN RPAREN .)
    REPEAT          reduce using rule 41 (input -> READLINE LPAREN RPAREN .)
    IF              reduce using rule 41 (input -> READLINE LPAREN RPAREN .)
    WHEN            reduce using rule 41 (input -> READLINE LPAREN RPAREN .)
    WHILE           reduce using rule 41 (input -> READLINE LPAREN RPAREN .)
    FOR             reduce using rule 41 (input -> READLINE LPAREN RPAREN .)
    LISTOF          reduce using rule 41 (input -> READLINE LPAREN RPAREN .)
    MAPOF           reduce using rule 41 (input -> READLINE LPAREN RPAREN .)
    SETOF           reduce using rule 41 (input -> READLINE LPAREN RPAREN .)
    $end            reduce using rule 41 (input -> READLINE LPAREN RPAREN .)
    RBRACE          reduce using rule 41 (input -> READLINE LPAREN RPAREN .)
    ELSE            reduce using rule 41 (input -> READLINE LPAREN RPAREN .)


state 84

    (42) repeat -> REPEAT LPAREN NUMBER . RPAREN LBRACE statement_list RBRACE

    RPAREN          shift and go to state 100


state 85

    (43) condition -> IF LPAREN expression . RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (44) condition -> IF LPAREN expression . RPAREN LBRACE statement_list RBRACE
    (14) expression -> expression . NOTEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . LTEQ expression
    (17) expression -> expression . GT expression
    (18) expression -> expression . GTEQ expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression

    RPAREN          shift and go to state 101
    NOTEQ           shift and go to state 33
    LT              shift and go to state 34
    LTEQ            shift and go to state 35
    GT              shift and go to state 36
    GTEQ            shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44


state 86

    (48) condition -> WHEN LPAREN expression . RPAREN LBRACE when_cases RBRACE
    (14) expression -> expression . NOTEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . LTEQ expression
    (17) expression -> expression . GT expression
    (18) expression -> expression . GTEQ expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression

    RPAREN          shift and go to state 102
    NOTEQ           shift and go to state 33
    LT              shift and go to state 34
    LTEQ            shift and go to state 35
    GT              shift and go to state 36
    GTEQ            shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44


state 87

    (45) loop -> WHILE LPAREN expression . RPAREN LBRACE statement_list RBRACE
    (14) expression -> expression . NOTEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . LTEQ expression
    (17) expression -> expression . GT expression
    (18) expression -> expression . GTEQ expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression

    RPAREN          shift and go to state 103
    NOTEQ           shift and go to state 33
    LT              shift and go to state 34
    LTEQ            shift and go to state 35
    GT              shift and go to state 36
    GTEQ            shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44


state 88

    (46) loop -> FOR LPAREN ID . IN expression RPAREN LBRACE statement_list RBRACE
    (47) loop -> FOR LPAREN ID . IN range RPAREN LBRACE statement_list RBRACE

    IN              shift and go to state 104


state 89

    (55) data_structure -> LISTOF LPAREN argument_list . RPAREN
    (39) argument_list -> argument_list . COMMA expression

    RPAREN          shift and go to state 105
    COMMA           shift and go to state 97


state 90

    (56) data_structure -> MAPOF LPAREN map_argument_list . RPAREN
    (60) map_argument_list -> map_argument_list . COMMA map_element

    RPAREN          shift and go to state 106
    COMMA           shift and go to state 107


state 91

    (59) map_argument_list -> map_element .

    RPAREN          reduce using rule 59 (map_argument_list -> map_element .)
    COMMA           reduce using rule 59 (map_argument_list -> map_element .)


state 92

    (61) map_element -> expression . TO expression
    (14) expression -> expression . NOTEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . LTEQ expression
    (17) expression -> expression . GT expression
    (18) expression -> expression . GTEQ expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression

    TO              shift and go to state 108
    NOTEQ           shift and go to state 33
    LT              shift and go to state 34
    LTEQ            shift and go to state 35
    GT              shift and go to state 36
    GTEQ            shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44


state 93

    (57) data_structure -> SETOF LPAREN argument_list . RPAREN
    (39) argument_list -> argument_list . COMMA expression

    RPAREN          shift and go to state 109
    COMMA           shift and go to state 97


state 94

    (11) assignment -> VAR ID ASSIGN expression .
    (14) expression -> expression . NOTEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . LTEQ expression
    (17) expression -> expression . GT expression
    (18) expression -> expression . GTEQ expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression

    VAR             reduce using rule 11 (assignment -> VAR ID ASSIGN expression .)
    VAL             reduce using rule 11 (assignment -> VAR ID ASSIGN expression .)
    ID              reduce using rule 11 (assignment -> VAR ID ASSIGN expression .)
    LPAREN          reduce using rule 11 (assignment -> VAR ID ASSIGN expression .)
    NUMBER          reduce using rule 11 (assignment -> VAR ID ASSIGN expression .)
    FLOAT           reduce using rule 11 (assignment -> VAR ID ASSIGN expression .)
    DOUBLE          reduce using rule 11 (assignment -> VAR ID ASSIGN expression .)
    BOOLEAN         reduce using rule 11 (assignment -> VAR ID ASSIGN expression .)
    STRING          reduce using rule 11 (assignment -> VAR ID ASSIGN expression .)
    PRINTLN         reduce using rule 11 (assignment -> VAR ID ASSIGN expression .)
    PRINT           reduce using rule 11 (assignment -> VAR ID ASSIGN expression .)
    READLINE        reduce using rule 11 (assignment -> VAR ID ASSIGN expression .)
    REPEAT          reduce using rule 11 (assignment -> VAR ID ASSIGN expression .)
    IF              reduce using rule 11 (assignment -> VAR ID ASSIGN expression .)
    WHEN            reduce using rule 11 (assignment -> VAR ID ASSIGN expression .)
    WHILE           reduce using rule 11 (assignment -> VAR ID ASSIGN expression .)
    FOR             reduce using rule 11 (assignment -> VAR ID ASSIGN expression .)
    LISTOF          reduce using rule 11 (assignment -> VAR ID ASSIGN expression .)
    MAPOF           reduce using rule 11 (assignment -> VAR ID ASSIGN expression .)
    SETOF           reduce using rule 11 (assignment -> VAR ID ASSIGN expression .)
    $end            reduce using rule 11 (assignment -> VAR ID ASSIGN expression .)
    RBRACE          reduce using rule 11 (assignment -> VAR ID ASSIGN expression .)
    ELSE            reduce using rule 11 (assignment -> VAR ID ASSIGN expression .)
    NOTEQ           shift and go to state 33
    LT              shift and go to state 34
    LTEQ            shift and go to state 35
    GT              shift and go to state 36
    GTEQ            shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44


state 95

    (12) assignment -> VAL ID ASSIGN expression .
    (14) expression -> expression . NOTEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . LTEQ expression
    (17) expression -> expression . GT expression
    (18) expression -> expression . GTEQ expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression

    VAR             reduce using rule 12 (assignment -> VAL ID ASSIGN expression .)
    VAL             reduce using rule 12 (assignment -> VAL ID ASSIGN expression .)
    ID              reduce using rule 12 (assignment -> VAL ID ASSIGN expression .)
    LPAREN          reduce using rule 12 (assignment -> VAL ID ASSIGN expression .)
    NUMBER          reduce using rule 12 (assignment -> VAL ID ASSIGN expression .)
    FLOAT           reduce using rule 12 (assignment -> VAL ID ASSIGN expression .)
    DOUBLE          reduce using rule 12 (assignment -> VAL ID ASSIGN expression .)
    BOOLEAN         reduce using rule 12 (assignment -> VAL ID ASSIGN expression .)
    STRING          reduce using rule 12 (assignment -> VAL ID ASSIGN expression .)
    PRINTLN         reduce using rule 12 (assignment -> VAL ID ASSIGN expression .)
    PRINT           reduce using rule 12 (assignment -> VAL ID ASSIGN expression .)
    READLINE        reduce using rule 12 (assignment -> VAL ID ASSIGN expression .)
    REPEAT          reduce using rule 12 (assignment -> VAL ID ASSIGN expression .)
    IF              reduce using rule 12 (assignment -> VAL ID ASSIGN expression .)
    WHEN            reduce using rule 12 (assignment -> VAL ID ASSIGN expression .)
    WHILE           reduce using rule 12 (assignment -> VAL ID ASSIGN expression .)
    FOR             reduce using rule 12 (assignment -> VAL ID ASSIGN expression .)
    LISTOF          reduce using rule 12 (assignment -> VAL ID ASSIGN expression .)
    MAPOF           reduce using rule 12 (assignment -> VAL ID ASSIGN expression .)
    SETOF           reduce using rule 12 (assignment -> VAL ID ASSIGN expression .)
    $end            reduce using rule 12 (assignment -> VAL ID ASSIGN expression .)
    RBRACE          reduce using rule 12 (assignment -> VAL ID ASSIGN expression .)
    ELSE            reduce using rule 12 (assignment -> VAL ID ASSIGN expression .)
    NOTEQ           shift and go to state 33
    LT              shift and go to state 34
    LTEQ            shift and go to state 35
    GT              shift and go to state 36
    GTEQ            shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44


state 96

    (35) print -> PRINTLN LPAREN argument_list RPAREN .

    VAR             reduce using rule 35 (print -> PRINTLN LPAREN argument_list RPAREN .)
    VAL             reduce using rule 35 (print -> PRINTLN LPAREN argument_list RPAREN .)
    ID              reduce using rule 35 (print -> PRINTLN LPAREN argument_list RPAREN .)
    LPAREN          reduce using rule 35 (print -> PRINTLN LPAREN argument_list RPAREN .)
    NUMBER          reduce using rule 35 (print -> PRINTLN LPAREN argument_list RPAREN .)
    FLOAT           reduce using rule 35 (print -> PRINTLN LPAREN argument_list RPAREN .)
    DOUBLE          reduce using rule 35 (print -> PRINTLN LPAREN argument_list RPAREN .)
    BOOLEAN         reduce using rule 35 (print -> PRINTLN LPAREN argument_list RPAREN .)
    STRING          reduce using rule 35 (print -> PRINTLN LPAREN argument_list RPAREN .)
    PRINTLN         reduce using rule 35 (print -> PRINTLN LPAREN argument_list RPAREN .)
    PRINT           reduce using rule 35 (print -> PRINTLN LPAREN argument_list RPAREN .)
    READLINE        reduce using rule 35 (print -> PRINTLN LPAREN argument_list RPAREN .)
    REPEAT          reduce using rule 35 (print -> PRINTLN LPAREN argument_list RPAREN .)
    IF              reduce using rule 35 (print -> PRINTLN LPAREN argument_list RPAREN .)
    WHEN            reduce using rule 35 (print -> PRINTLN LPAREN argument_list RPAREN .)
    WHILE           reduce using rule 35 (print -> PRINTLN LPAREN argument_list RPAREN .)
    FOR             reduce using rule 35 (print -> PRINTLN LPAREN argument_list RPAREN .)
    LISTOF          reduce using rule 35 (print -> PRINTLN LPAREN argument_list RPAREN .)
    MAPOF           reduce using rule 35 (print -> PRINTLN LPAREN argument_list RPAREN .)
    SETOF           reduce using rule 35 (print -> PRINTLN LPAREN argument_list RPAREN .)
    $end            reduce using rule 35 (print -> PRINTLN LPAREN argument_list RPAREN .)
    RBRACE          reduce using rule 35 (print -> PRINTLN LPAREN argument_list RPAREN .)
    ELSE            reduce using rule 35 (print -> PRINTLN LPAREN argument_list RPAREN .)


state 97

    (39) argument_list -> argument_list COMMA . expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 49
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    expression                     shift and go to state 110
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 98

    (38) argument_list -> expression COMMA . expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 49
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    expression                     shift and go to state 111
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 99

    (36) print -> PRINT LPAREN argument_list RPAREN .

    VAR             reduce using rule 36 (print -> PRINT LPAREN argument_list RPAREN .)
    VAL             reduce using rule 36 (print -> PRINT LPAREN argument_list RPAREN .)
    ID              reduce using rule 36 (print -> PRINT LPAREN argument_list RPAREN .)
    LPAREN          reduce using rule 36 (print -> PRINT LPAREN argument_list RPAREN .)
    NUMBER          reduce using rule 36 (print -> PRINT LPAREN argument_list RPAREN .)
    FLOAT           reduce using rule 36 (print -> PRINT LPAREN argument_list RPAREN .)
    DOUBLE          reduce using rule 36 (print -> PRINT LPAREN argument_list RPAREN .)
    BOOLEAN         reduce using rule 36 (print -> PRINT LPAREN argument_list RPAREN .)
    STRING          reduce using rule 36 (print -> PRINT LPAREN argument_list RPAREN .)
    PRINTLN         reduce using rule 36 (print -> PRINT LPAREN argument_list RPAREN .)
    PRINT           reduce using rule 36 (print -> PRINT LPAREN argument_list RPAREN .)
    READLINE        reduce using rule 36 (print -> PRINT LPAREN argument_list RPAREN .)
    REPEAT          reduce using rule 36 (print -> PRINT LPAREN argument_list RPAREN .)
    IF              reduce using rule 36 (print -> PRINT LPAREN argument_list RPAREN .)
    WHEN            reduce using rule 36 (print -> PRINT LPAREN argument_list RPAREN .)
    WHILE           reduce using rule 36 (print -> PRINT LPAREN argument_list RPAREN .)
    FOR             reduce using rule 36 (print -> PRINT LPAREN argument_list RPAREN .)
    LISTOF          reduce using rule 36 (print -> PRINT LPAREN argument_list RPAREN .)
    MAPOF           reduce using rule 36 (print -> PRINT LPAREN argument_list RPAREN .)
    SETOF           reduce using rule 36 (print -> PRINT LPAREN argument_list RPAREN .)
    $end            reduce using rule 36 (print -> PRINT LPAREN argument_list RPAREN .)
    RBRACE          reduce using rule 36 (print -> PRINT LPAREN argument_list RPAREN .)
    ELSE            reduce using rule 36 (print -> PRINT LPAREN argument_list RPAREN .)


state 100

    (42) repeat -> REPEAT LPAREN NUMBER RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 112


state 101

    (43) condition -> IF LPAREN expression RPAREN . LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (44) condition -> IF LPAREN expression RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 113


state 102

    (48) condition -> WHEN LPAREN expression RPAREN . LBRACE when_cases RBRACE

    LBRACE          shift and go to state 114


state 103

    (45) loop -> WHILE LPAREN expression RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 115


state 104

    (46) loop -> FOR LPAREN ID IN . expression RPAREN LBRACE statement_list RBRACE
    (47) loop -> FOR LPAREN ID IN . range RPAREN LBRACE statement_list RBRACE
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 49
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    expression                     shift and go to state 116
    range                          shift and go to state 117
    data_structure                 shift and go to state 20

state 105

    (55) data_structure -> LISTOF LPAREN argument_list RPAREN .

    NOTEQ           reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    LT              reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    LTEQ            reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    GT              reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    GTEQ            reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    AND             reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    OR              reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    PLUS            reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    MINUS           reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    TIMES           reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    DIVIDE          reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    MOD             reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    VAR             reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    VAL             reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    ID              reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    LPAREN          reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    NUMBER          reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    FLOAT           reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    DOUBLE          reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    BOOLEAN         reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    STRING          reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    PRINTLN         reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    PRINT           reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    READLINE        reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    REPEAT          reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    IF              reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    WHEN            reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    WHILE           reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    FOR             reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    LISTOF          reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    MAPOF           reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    SETOF           reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    $end            reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    RPAREN          reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    RBRACE          reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    ELSE            reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    COMMA           reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    TO              reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    ARROW           reduce using rule 55 (data_structure -> LISTOF LPAREN argument_list RPAREN .)


state 106

    (56) data_structure -> MAPOF LPAREN map_argument_list RPAREN .

    NOTEQ           reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    LT              reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    LTEQ            reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    GT              reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    GTEQ            reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    AND             reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    OR              reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    PLUS            reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    MINUS           reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    TIMES           reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    DIVIDE          reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    MOD             reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    VAR             reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    VAL             reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    ID              reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    LPAREN          reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    NUMBER          reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    FLOAT           reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    DOUBLE          reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    BOOLEAN         reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    STRING          reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    PRINTLN         reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    PRINT           reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    READLINE        reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    REPEAT          reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    IF              reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    WHEN            reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    WHILE           reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    FOR             reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    LISTOF          reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    MAPOF           reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    SETOF           reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    $end            reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    RPAREN          reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    RBRACE          reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    ELSE            reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    COMMA           reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    TO              reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    ARROW           reduce using rule 56 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)


state 107

    (60) map_argument_list -> map_argument_list COMMA . map_element
    (61) map_element -> . expression TO expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 49
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    map_element                    shift and go to state 118
    expression                     shift and go to state 92
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 108

    (61) map_element -> expression TO . expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 49
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    expression                     shift and go to state 119
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 109

    (57) data_structure -> SETOF LPAREN argument_list RPAREN .

    NOTEQ           reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    LT              reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    LTEQ            reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    GT              reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    GTEQ            reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    AND             reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    OR              reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    PLUS            reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    MINUS           reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    TIMES           reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    DIVIDE          reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    MOD             reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    VAR             reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    VAL             reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    ID              reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    LPAREN          reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    NUMBER          reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    FLOAT           reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    DOUBLE          reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    BOOLEAN         reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    STRING          reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    PRINTLN         reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    PRINT           reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    READLINE        reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    REPEAT          reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    IF              reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    WHEN            reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    WHILE           reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    FOR             reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    LISTOF          reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    MAPOF           reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    SETOF           reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    $end            reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    RPAREN          reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    RBRACE          reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    ELSE            reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    COMMA           reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    TO              reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    ARROW           reduce using rule 57 (data_structure -> SETOF LPAREN argument_list RPAREN .)


state 110

    (39) argument_list -> argument_list COMMA expression .
    (14) expression -> expression . NOTEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . LTEQ expression
    (17) expression -> expression . GT expression
    (18) expression -> expression . GTEQ expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression

    RPAREN          reduce using rule 39 (argument_list -> argument_list COMMA expression .)
    COMMA           reduce using rule 39 (argument_list -> argument_list COMMA expression .)
    NOTEQ           shift and go to state 33
    LT              shift and go to state 34
    LTEQ            shift and go to state 35
    GT              shift and go to state 36
    GTEQ            shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44


state 111

    (38) argument_list -> expression COMMA expression .
    (14) expression -> expression . NOTEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . LTEQ expression
    (17) expression -> expression . GT expression
    (18) expression -> expression . GTEQ expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression

    RPAREN          reduce using rule 38 (argument_list -> expression COMMA expression .)
    COMMA           reduce using rule 38 (argument_list -> expression COMMA expression .)
    NOTEQ           shift and go to state 33
    LT              shift and go to state 34
    LTEQ            shift and go to state 35
    GT              shift and go to state 36
    GTEQ            shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44


state 112

    (42) repeat -> REPEAT LPAREN NUMBER RPAREN LBRACE . statement_list RBRACE
    (1) statement_list -> . statement
    (2) statement_list -> . statement_list statement
    (4) statement -> . assignment
    (5) statement -> . expression
    (6) statement -> . print
    (7) statement -> . input
    (8) statement -> . repeat
    (9) statement -> . condition
    (10) statement -> . loop
    (11) assignment -> . VAR ID ASSIGN expression
    (12) assignment -> . VAL ID ASSIGN expression
    (13) assignment -> . ID ASSIGN expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (35) print -> . PRINTLN LPAREN argument_list RPAREN
    (36) print -> . PRINT LPAREN argument_list RPAREN
    (41) input -> . READLINE LPAREN RPAREN
    (42) repeat -> . REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE
    (43) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (44) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (48) condition -> . WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE
    (45) loop -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (46) loop -> . FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE
    (47) loop -> . FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    VAR             shift and go to state 10
    VAL             shift and go to state 12
    ID              shift and go to state 11
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    PRINTLN         shift and go to state 21
    PRINT           shift and go to state 22
    READLINE        shift and go to state 23
    REPEAT          shift and go to state 24
    IF              shift and go to state 25
    WHEN            shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    statement_list                 shift and go to state 120
    statement                      shift and go to state 2
    assignment                     shift and go to state 3
    expression                     shift and go to state 4
    print                          shift and go to state 5
    input                          shift and go to state 6
    repeat                         shift and go to state 7
    condition                      shift and go to state 8
    loop                           shift and go to state 9
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 113

    (43) condition -> IF LPAREN expression RPAREN LBRACE . statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (44) condition -> IF LPAREN expression RPAREN LBRACE . statement_list RBRACE
    (1) statement_list -> . statement
    (2) statement_list -> . statement_list statement
    (4) statement -> . assignment
    (5) statement -> . expression
    (6) statement -> . print
    (7) statement -> . input
    (8) statement -> . repeat
    (9) statement -> . condition
    (10) statement -> . loop
    (11) assignment -> . VAR ID ASSIGN expression
    (12) assignment -> . VAL ID ASSIGN expression
    (13) assignment -> . ID ASSIGN expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (35) print -> . PRINTLN LPAREN argument_list RPAREN
    (36) print -> . PRINT LPAREN argument_list RPAREN
    (41) input -> . READLINE LPAREN RPAREN
    (42) repeat -> . REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE
    (43) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (44) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (48) condition -> . WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE
    (45) loop -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (46) loop -> . FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE
    (47) loop -> . FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    VAR             shift and go to state 10
    VAL             shift and go to state 12
    ID              shift and go to state 11
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    PRINTLN         shift and go to state 21
    PRINT           shift and go to state 22
    READLINE        shift and go to state 23
    REPEAT          shift and go to state 24
    IF              shift and go to state 25
    WHEN            shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    expression                     shift and go to state 4
    statement_list                 shift and go to state 121
    statement                      shift and go to state 2
    assignment                     shift and go to state 3
    print                          shift and go to state 5
    input                          shift and go to state 6
    repeat                         shift and go to state 7
    condition                      shift and go to state 8
    loop                           shift and go to state 9
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 114

    (48) condition -> WHEN LPAREN expression RPAREN LBRACE . when_cases RBRACE
    (49) when_cases -> . when_case
    (50) when_cases -> . when_cases when_case
    (51) when_case -> . expression_list ARROW statement_list
    (52) when_case -> . ELSE ARROW statement_list
    (53) expression_list -> . expression
    (54) expression_list -> . expression_list COMMA expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    ELSE            shift and go to state 126
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 49
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    expression                     shift and go to state 122
    when_cases                     shift and go to state 123
    when_case                      shift and go to state 124
    expression_list                shift and go to state 125
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 115

    (45) loop -> WHILE LPAREN expression RPAREN LBRACE . statement_list RBRACE
    (1) statement_list -> . statement
    (2) statement_list -> . statement_list statement
    (4) statement -> . assignment
    (5) statement -> . expression
    (6) statement -> . print
    (7) statement -> . input
    (8) statement -> . repeat
    (9) statement -> . condition
    (10) statement -> . loop
    (11) assignment -> . VAR ID ASSIGN expression
    (12) assignment -> . VAL ID ASSIGN expression
    (13) assignment -> . ID ASSIGN expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (35) print -> . PRINTLN LPAREN argument_list RPAREN
    (36) print -> . PRINT LPAREN argument_list RPAREN
    (41) input -> . READLINE LPAREN RPAREN
    (42) repeat -> . REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE
    (43) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (44) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (48) condition -> . WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE
    (45) loop -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (46) loop -> . FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE
    (47) loop -> . FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    VAR             shift and go to state 10
    VAL             shift and go to state 12
    ID              shift and go to state 11
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    PRINTLN         shift and go to state 21
    PRINT           shift and go to state 22
    READLINE        shift and go to state 23
    REPEAT          shift and go to state 24
    IF              shift and go to state 25
    WHEN            shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    expression                     shift and go to state 4
    statement_list                 shift and go to state 127
    statement                      shift and go to state 2
    assignment                     shift and go to state 3
    print                          shift and go to state 5
    input                          shift and go to state 6
    repeat                         shift and go to state 7
    condition                      shift and go to state 8
    loop                           shift and go to state 9
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 116

    (46) loop -> FOR LPAREN ID IN expression . RPAREN LBRACE statement_list RBRACE
    (14) expression -> expression . NOTEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . LTEQ expression
    (17) expression -> expression . GT expression
    (18) expression -> expression . GTEQ expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression

    RPAREN          shift and go to state 128
    NOTEQ           shift and go to state 33
    LT              shift and go to state 34
    LTEQ            shift and go to state 35
    GT              shift and go to state 36
    GTEQ            shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44


state 117

    (47) loop -> FOR LPAREN ID IN range . RPAREN LBRACE statement_list RBRACE
    (34) expression -> range .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 129
    NOTEQ           reduce using rule 34 (expression -> range .)
    LT              reduce using rule 34 (expression -> range .)
    LTEQ            reduce using rule 34 (expression -> range .)
    GT              reduce using rule 34 (expression -> range .)
    GTEQ            reduce using rule 34 (expression -> range .)
    AND             reduce using rule 34 (expression -> range .)
    OR              reduce using rule 34 (expression -> range .)
    PLUS            reduce using rule 34 (expression -> range .)
    MINUS           reduce using rule 34 (expression -> range .)
    TIMES           reduce using rule 34 (expression -> range .)
    DIVIDE          reduce using rule 34 (expression -> range .)
    MOD             reduce using rule 34 (expression -> range .)

  ! RPAREN          [ reduce using rule 34 (expression -> range .) ]


state 118

    (60) map_argument_list -> map_argument_list COMMA map_element .

    RPAREN          reduce using rule 60 (map_argument_list -> map_argument_list COMMA map_element .)
    COMMA           reduce using rule 60 (map_argument_list -> map_argument_list COMMA map_element .)


state 119

    (61) map_element -> expression TO expression .
    (14) expression -> expression . NOTEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . LTEQ expression
    (17) expression -> expression . GT expression
    (18) expression -> expression . GTEQ expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression

    RPAREN          reduce using rule 61 (map_element -> expression TO expression .)
    COMMA           reduce using rule 61 (map_element -> expression TO expression .)
    NOTEQ           shift and go to state 33
    LT              shift and go to state 34
    LTEQ            shift and go to state 35
    GT              shift and go to state 36
    GTEQ            shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44


state 120

    (42) repeat -> REPEAT LPAREN NUMBER RPAREN LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (4) statement -> . assignment
    (5) statement -> . expression
    (6) statement -> . print
    (7) statement -> . input
    (8) statement -> . repeat
    (9) statement -> . condition
    (10) statement -> . loop
    (11) assignment -> . VAR ID ASSIGN expression
    (12) assignment -> . VAL ID ASSIGN expression
    (13) assignment -> . ID ASSIGN expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (35) print -> . PRINTLN LPAREN argument_list RPAREN
    (36) print -> . PRINT LPAREN argument_list RPAREN
    (41) input -> . READLINE LPAREN RPAREN
    (42) repeat -> . REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE
    (43) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (44) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (48) condition -> . WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE
    (45) loop -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (46) loop -> . FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE
    (47) loop -> . FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    RBRACE          shift and go to state 130
    VAR             shift and go to state 10
    VAL             shift and go to state 12
    ID              shift and go to state 11
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    PRINTLN         shift and go to state 21
    PRINT           shift and go to state 22
    READLINE        shift and go to state 23
    REPEAT          shift and go to state 24
    IF              shift and go to state 25
    WHEN            shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    statement                      shift and go to state 32
    assignment                     shift and go to state 3
    expression                     shift and go to state 4
    print                          shift and go to state 5
    input                          shift and go to state 6
    repeat                         shift and go to state 7
    condition                      shift and go to state 8
    loop                           shift and go to state 9
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 121

    (43) condition -> IF LPAREN expression RPAREN LBRACE statement_list . RBRACE ELSE LBRACE statement_list RBRACE
    (44) condition -> IF LPAREN expression RPAREN LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (4) statement -> . assignment
    (5) statement -> . expression
    (6) statement -> . print
    (7) statement -> . input
    (8) statement -> . repeat
    (9) statement -> . condition
    (10) statement -> . loop
    (11) assignment -> . VAR ID ASSIGN expression
    (12) assignment -> . VAL ID ASSIGN expression
    (13) assignment -> . ID ASSIGN expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (35) print -> . PRINTLN LPAREN argument_list RPAREN
    (36) print -> . PRINT LPAREN argument_list RPAREN
    (41) input -> . READLINE LPAREN RPAREN
    (42) repeat -> . REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE
    (43) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (44) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (48) condition -> . WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE
    (45) loop -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (46) loop -> . FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE
    (47) loop -> . FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    RBRACE          shift and go to state 131
    VAR             shift and go to state 10
    VAL             shift and go to state 12
    ID              shift and go to state 11
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    PRINTLN         shift and go to state 21
    PRINT           shift and go to state 22
    READLINE        shift and go to state 23
    REPEAT          shift and go to state 24
    IF              shift and go to state 25
    WHEN            shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    expression                     shift and go to state 4
    statement                      shift and go to state 32
    assignment                     shift and go to state 3
    print                          shift and go to state 5
    input                          shift and go to state 6
    repeat                         shift and go to state 7
    condition                      shift and go to state 8
    loop                           shift and go to state 9
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 122

    (53) expression_list -> expression .
    (14) expression -> expression . NOTEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . LTEQ expression
    (17) expression -> expression . GT expression
    (18) expression -> expression . GTEQ expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression

    ARROW           reduce using rule 53 (expression_list -> expression .)
    COMMA           reduce using rule 53 (expression_list -> expression .)
    NOTEQ           shift and go to state 33
    LT              shift and go to state 34
    LTEQ            shift and go to state 35
    GT              shift and go to state 36
    GTEQ            shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44


state 123

    (48) condition -> WHEN LPAREN expression RPAREN LBRACE when_cases . RBRACE
    (50) when_cases -> when_cases . when_case
    (51) when_case -> . expression_list ARROW statement_list
    (52) when_case -> . ELSE ARROW statement_list
    (53) expression_list -> . expression
    (54) expression_list -> . expression_list COMMA expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    RBRACE          shift and go to state 132
    ELSE            shift and go to state 126
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 49
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    expression                     shift and go to state 122
    when_case                      shift and go to state 133
    expression_list                shift and go to state 125
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 124

    (49) when_cases -> when_case .

    RBRACE          reduce using rule 49 (when_cases -> when_case .)
    ELSE            reduce using rule 49 (when_cases -> when_case .)
    LPAREN          reduce using rule 49 (when_cases -> when_case .)
    NUMBER          reduce using rule 49 (when_cases -> when_case .)
    FLOAT           reduce using rule 49 (when_cases -> when_case .)
    DOUBLE          reduce using rule 49 (when_cases -> when_case .)
    BOOLEAN         reduce using rule 49 (when_cases -> when_case .)
    STRING          reduce using rule 49 (when_cases -> when_case .)
    ID              reduce using rule 49 (when_cases -> when_case .)
    LISTOF          reduce using rule 49 (when_cases -> when_case .)
    MAPOF           reduce using rule 49 (when_cases -> when_case .)
    SETOF           reduce using rule 49 (when_cases -> when_case .)


state 125

    (51) when_case -> expression_list . ARROW statement_list
    (54) expression_list -> expression_list . COMMA expression

    ARROW           shift and go to state 134
    COMMA           shift and go to state 135


state 126

    (52) when_case -> ELSE . ARROW statement_list

    ARROW           shift and go to state 136


state 127

    (45) loop -> WHILE LPAREN expression RPAREN LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (4) statement -> . assignment
    (5) statement -> . expression
    (6) statement -> . print
    (7) statement -> . input
    (8) statement -> . repeat
    (9) statement -> . condition
    (10) statement -> . loop
    (11) assignment -> . VAR ID ASSIGN expression
    (12) assignment -> . VAL ID ASSIGN expression
    (13) assignment -> . ID ASSIGN expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (35) print -> . PRINTLN LPAREN argument_list RPAREN
    (36) print -> . PRINT LPAREN argument_list RPAREN
    (41) input -> . READLINE LPAREN RPAREN
    (42) repeat -> . REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE
    (43) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (44) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (48) condition -> . WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE
    (45) loop -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (46) loop -> . FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE
    (47) loop -> . FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    RBRACE          shift and go to state 137
    VAR             shift and go to state 10
    VAL             shift and go to state 12
    ID              shift and go to state 11
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    PRINTLN         shift and go to state 21
    PRINT           shift and go to state 22
    READLINE        shift and go to state 23
    REPEAT          shift and go to state 24
    IF              shift and go to state 25
    WHEN            shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    expression                     shift and go to state 4
    statement                      shift and go to state 32
    assignment                     shift and go to state 3
    print                          shift and go to state 5
    input                          shift and go to state 6
    repeat                         shift and go to state 7
    condition                      shift and go to state 8
    loop                           shift and go to state 9
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 128

    (46) loop -> FOR LPAREN ID IN expression RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 138


state 129

    (47) loop -> FOR LPAREN ID IN range RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 139


state 130

    (42) repeat -> REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE .

    VAR             reduce using rule 42 (repeat -> REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE .)
    VAL             reduce using rule 42 (repeat -> REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE .)
    ID              reduce using rule 42 (repeat -> REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 42 (repeat -> REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE .)
    NUMBER          reduce using rule 42 (repeat -> REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 42 (repeat -> REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE .)
    DOUBLE          reduce using rule 42 (repeat -> REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE .)
    BOOLEAN         reduce using rule 42 (repeat -> REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE .)
    STRING          reduce using rule 42 (repeat -> REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE .)
    PRINTLN         reduce using rule 42 (repeat -> REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 42 (repeat -> REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE .)
    READLINE        reduce using rule 42 (repeat -> REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE .)
    REPEAT          reduce using rule 42 (repeat -> REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 42 (repeat -> REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE .)
    WHEN            reduce using rule 42 (repeat -> REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 42 (repeat -> REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 42 (repeat -> REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE .)
    LISTOF          reduce using rule 42 (repeat -> REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE .)
    MAPOF           reduce using rule 42 (repeat -> REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE .)
    SETOF           reduce using rule 42 (repeat -> REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 42 (repeat -> REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 42 (repeat -> REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE .)
    ELSE            reduce using rule 42 (repeat -> REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE .)


state 131

    (43) condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE . ELSE LBRACE statement_list RBRACE
    (44) condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 140
    VAR             reduce using rule 44 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    VAL             reduce using rule 44 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    ID              reduce using rule 44 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 44 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    NUMBER          reduce using rule 44 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 44 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    DOUBLE          reduce using rule 44 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    BOOLEAN         reduce using rule 44 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    STRING          reduce using rule 44 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    PRINTLN         reduce using rule 44 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 44 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    READLINE        reduce using rule 44 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    REPEAT          reduce using rule 44 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 44 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    WHEN            reduce using rule 44 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 44 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 44 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    LISTOF          reduce using rule 44 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    MAPOF           reduce using rule 44 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    SETOF           reduce using rule 44 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 44 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 44 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)

  ! ELSE            [ reduce using rule 44 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .) ]


state 132

    (48) condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .

    VAR             reduce using rule 48 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    VAL             reduce using rule 48 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    ID              reduce using rule 48 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    LPAREN          reduce using rule 48 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    NUMBER          reduce using rule 48 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    FLOAT           reduce using rule 48 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    DOUBLE          reduce using rule 48 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    BOOLEAN         reduce using rule 48 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    STRING          reduce using rule 48 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    PRINTLN         reduce using rule 48 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    PRINT           reduce using rule 48 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    READLINE        reduce using rule 48 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    REPEAT          reduce using rule 48 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    IF              reduce using rule 48 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    WHEN            reduce using rule 48 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    WHILE           reduce using rule 48 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    FOR             reduce using rule 48 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    LISTOF          reduce using rule 48 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    MAPOF           reduce using rule 48 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    SETOF           reduce using rule 48 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    $end            reduce using rule 48 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    RBRACE          reduce using rule 48 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    ELSE            reduce using rule 48 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)


state 133

    (50) when_cases -> when_cases when_case .

    RBRACE          reduce using rule 50 (when_cases -> when_cases when_case .)
    ELSE            reduce using rule 50 (when_cases -> when_cases when_case .)
    LPAREN          reduce using rule 50 (when_cases -> when_cases when_case .)
    NUMBER          reduce using rule 50 (when_cases -> when_cases when_case .)
    FLOAT           reduce using rule 50 (when_cases -> when_cases when_case .)
    DOUBLE          reduce using rule 50 (when_cases -> when_cases when_case .)
    BOOLEAN         reduce using rule 50 (when_cases -> when_cases when_case .)
    STRING          reduce using rule 50 (when_cases -> when_cases when_case .)
    ID              reduce using rule 50 (when_cases -> when_cases when_case .)
    LISTOF          reduce using rule 50 (when_cases -> when_cases when_case .)
    MAPOF           reduce using rule 50 (when_cases -> when_cases when_case .)
    SETOF           reduce using rule 50 (when_cases -> when_cases when_case .)


state 134

    (51) when_case -> expression_list ARROW . statement_list
    (1) statement_list -> . statement
    (2) statement_list -> . statement_list statement
    (4) statement -> . assignment
    (5) statement -> . expression
    (6) statement -> . print
    (7) statement -> . input
    (8) statement -> . repeat
    (9) statement -> . condition
    (10) statement -> . loop
    (11) assignment -> . VAR ID ASSIGN expression
    (12) assignment -> . VAL ID ASSIGN expression
    (13) assignment -> . ID ASSIGN expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (35) print -> . PRINTLN LPAREN argument_list RPAREN
    (36) print -> . PRINT LPAREN argument_list RPAREN
    (41) input -> . READLINE LPAREN RPAREN
    (42) repeat -> . REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE
    (43) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (44) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (48) condition -> . WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE
    (45) loop -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (46) loop -> . FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE
    (47) loop -> . FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    VAR             shift and go to state 10
    VAL             shift and go to state 12
    ID              shift and go to state 11
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    PRINTLN         shift and go to state 21
    PRINT           shift and go to state 22
    READLINE        shift and go to state 23
    REPEAT          shift and go to state 24
    IF              shift and go to state 25
    WHEN            shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    statement_list                 shift and go to state 141
    statement                      shift and go to state 2
    assignment                     shift and go to state 3
    expression                     shift and go to state 4
    print                          shift and go to state 5
    input                          shift and go to state 6
    repeat                         shift and go to state 7
    condition                      shift and go to state 8
    loop                           shift and go to state 9
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 135

    (54) expression_list -> expression_list COMMA . expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 49
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    expression                     shift and go to state 142
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 136

    (52) when_case -> ELSE ARROW . statement_list
    (1) statement_list -> . statement
    (2) statement_list -> . statement_list statement
    (4) statement -> . assignment
    (5) statement -> . expression
    (6) statement -> . print
    (7) statement -> . input
    (8) statement -> . repeat
    (9) statement -> . condition
    (10) statement -> . loop
    (11) assignment -> . VAR ID ASSIGN expression
    (12) assignment -> . VAL ID ASSIGN expression
    (13) assignment -> . ID ASSIGN expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (35) print -> . PRINTLN LPAREN argument_list RPAREN
    (36) print -> . PRINT LPAREN argument_list RPAREN
    (41) input -> . READLINE LPAREN RPAREN
    (42) repeat -> . REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE
    (43) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (44) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (48) condition -> . WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE
    (45) loop -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (46) loop -> . FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE
    (47) loop -> . FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    VAR             shift and go to state 10
    VAL             shift and go to state 12
    ID              shift and go to state 11
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    PRINTLN         shift and go to state 21
    PRINT           shift and go to state 22
    READLINE        shift and go to state 23
    REPEAT          shift and go to state 24
    IF              shift and go to state 25
    WHEN            shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    statement_list                 shift and go to state 143
    statement                      shift and go to state 2
    assignment                     shift and go to state 3
    expression                     shift and go to state 4
    print                          shift and go to state 5
    input                          shift and go to state 6
    repeat                         shift and go to state 7
    condition                      shift and go to state 8
    loop                           shift and go to state 9
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 137

    (45) loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .

    VAR             reduce using rule 45 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    VAL             reduce using rule 45 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    ID              reduce using rule 45 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 45 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    NUMBER          reduce using rule 45 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 45 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    DOUBLE          reduce using rule 45 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    BOOLEAN         reduce using rule 45 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    STRING          reduce using rule 45 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    PRINTLN         reduce using rule 45 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 45 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    READLINE        reduce using rule 45 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    REPEAT          reduce using rule 45 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 45 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    WHEN            reduce using rule 45 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 45 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 45 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    LISTOF          reduce using rule 45 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    MAPOF           reduce using rule 45 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    SETOF           reduce using rule 45 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 45 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 45 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    ELSE            reduce using rule 45 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)


state 138

    (46) loop -> FOR LPAREN ID IN expression RPAREN LBRACE . statement_list RBRACE
    (1) statement_list -> . statement
    (2) statement_list -> . statement_list statement
    (4) statement -> . assignment
    (5) statement -> . expression
    (6) statement -> . print
    (7) statement -> . input
    (8) statement -> . repeat
    (9) statement -> . condition
    (10) statement -> . loop
    (11) assignment -> . VAR ID ASSIGN expression
    (12) assignment -> . VAL ID ASSIGN expression
    (13) assignment -> . ID ASSIGN expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (35) print -> . PRINTLN LPAREN argument_list RPAREN
    (36) print -> . PRINT LPAREN argument_list RPAREN
    (41) input -> . READLINE LPAREN RPAREN
    (42) repeat -> . REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE
    (43) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (44) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (48) condition -> . WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE
    (45) loop -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (46) loop -> . FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE
    (47) loop -> . FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    VAR             shift and go to state 10
    VAL             shift and go to state 12
    ID              shift and go to state 11
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    PRINTLN         shift and go to state 21
    PRINT           shift and go to state 22
    READLINE        shift and go to state 23
    REPEAT          shift and go to state 24
    IF              shift and go to state 25
    WHEN            shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    expression                     shift and go to state 4
    statement_list                 shift and go to state 144
    statement                      shift and go to state 2
    assignment                     shift and go to state 3
    print                          shift and go to state 5
    input                          shift and go to state 6
    repeat                         shift and go to state 7
    condition                      shift and go to state 8
    loop                           shift and go to state 9
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 139

    (47) loop -> FOR LPAREN ID IN range RPAREN LBRACE . statement_list RBRACE
    (1) statement_list -> . statement
    (2) statement_list -> . statement_list statement
    (4) statement -> . assignment
    (5) statement -> . expression
    (6) statement -> . print
    (7) statement -> . input
    (8) statement -> . repeat
    (9) statement -> . condition
    (10) statement -> . loop
    (11) assignment -> . VAR ID ASSIGN expression
    (12) assignment -> . VAL ID ASSIGN expression
    (13) assignment -> . ID ASSIGN expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (35) print -> . PRINTLN LPAREN argument_list RPAREN
    (36) print -> . PRINT LPAREN argument_list RPAREN
    (41) input -> . READLINE LPAREN RPAREN
    (42) repeat -> . REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE
    (43) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (44) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (48) condition -> . WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE
    (45) loop -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (46) loop -> . FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE
    (47) loop -> . FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    VAR             shift and go to state 10
    VAL             shift and go to state 12
    ID              shift and go to state 11
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    PRINTLN         shift and go to state 21
    PRINT           shift and go to state 22
    READLINE        shift and go to state 23
    REPEAT          shift and go to state 24
    IF              shift and go to state 25
    WHEN            shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    range                          shift and go to state 19
    statement_list                 shift and go to state 145
    statement                      shift and go to state 2
    assignment                     shift and go to state 3
    expression                     shift and go to state 4
    print                          shift and go to state 5
    input                          shift and go to state 6
    repeat                         shift and go to state 7
    condition                      shift and go to state 8
    loop                           shift and go to state 9
    data_structure                 shift and go to state 20

state 140

    (43) condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 146


state 141

    (51) when_case -> expression_list ARROW statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . assignment
    (5) statement -> . expression
    (6) statement -> . print
    (7) statement -> . input
    (8) statement -> . repeat
    (9) statement -> . condition
    (10) statement -> . loop
    (11) assignment -> . VAR ID ASSIGN expression
    (12) assignment -> . VAL ID ASSIGN expression
    (13) assignment -> . ID ASSIGN expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (35) print -> . PRINTLN LPAREN argument_list RPAREN
    (36) print -> . PRINT LPAREN argument_list RPAREN
    (41) input -> . READLINE LPAREN RPAREN
    (42) repeat -> . REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE
    (43) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (44) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (48) condition -> . WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE
    (45) loop -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (46) loop -> . FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE
    (47) loop -> . FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
    RBRACE          reduce using rule 51 (when_case -> expression_list ARROW statement_list .)
    ELSE            reduce using rule 51 (when_case -> expression_list ARROW statement_list .)
    VAR             shift and go to state 10
    VAL             shift and go to state 12
    ID              shift and go to state 11
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    PRINTLN         shift and go to state 21
    PRINT           shift and go to state 22
    READLINE        shift and go to state 23
    REPEAT          shift and go to state 24
    IF              shift and go to state 25
    WHEN            shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

  ! LPAREN          [ reduce using rule 51 (when_case -> expression_list ARROW statement_list .) ]
  ! NUMBER          [ reduce using rule 51 (when_case -> expression_list ARROW statement_list .) ]
  ! FLOAT           [ reduce using rule 51 (when_case -> expression_list ARROW statement_list .) ]
  ! DOUBLE          [ reduce using rule 51 (when_case -> expression_list ARROW statement_list .) ]
  ! BOOLEAN         [ reduce using rule 51 (when_case -> expression_list ARROW statement_list .) ]
  ! STRING          [ reduce using rule 51 (when_case -> expression_list ARROW statement_list .) ]
  ! ID              [ reduce using rule 51 (when_case -> expression_list ARROW statement_list .) ]
  ! LISTOF          [ reduce using rule 51 (when_case -> expression_list ARROW statement_list .) ]
  ! MAPOF           [ reduce using rule 51 (when_case -> expression_list ARROW statement_list .) ]
  ! SETOF           [ reduce using rule 51 (when_case -> expression_list ARROW statement_list .) ]

    statement                      shift and go to state 32
    assignment                     shift and go to state 3
    expression                     shift and go to state 4
    print                          shift and go to state 5
    input                          shift and go to state 6
    repeat                         shift and go to state 7
    condition                      shift and go to state 8
    loop                           shift and go to state 9
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 142

    (54) expression_list -> expression_list COMMA expression .
    (14) expression -> expression . NOTEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . LTEQ expression
    (17) expression -> expression . GT expression
    (18) expression -> expression . GTEQ expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression

    ARROW           reduce using rule 54 (expression_list -> expression_list COMMA expression .)
    COMMA           reduce using rule 54 (expression_list -> expression_list COMMA expression .)
    NOTEQ           shift and go to state 33
    LT              shift and go to state 34
    LTEQ            shift and go to state 35
    GT              shift and go to state 36
    GTEQ            shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44


state 143

    (52) when_case -> ELSE ARROW statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . assignment
    (5) statement -> . expression
    (6) statement -> . print
    (7) statement -> . input
    (8) statement -> . repeat
    (9) statement -> . condition
    (10) statement -> . loop
    (11) assignment -> . VAR ID ASSIGN expression
    (12) assignment -> . VAL ID ASSIGN expression
    (13) assignment -> . ID ASSIGN expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (35) print -> . PRINTLN LPAREN argument_list RPAREN
    (36) print -> . PRINT LPAREN argument_list RPAREN
    (41) input -> . READLINE LPAREN RPAREN
    (42) repeat -> . REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE
    (43) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (44) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (48) condition -> . WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE
    (45) loop -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (46) loop -> . FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE
    (47) loop -> . FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
    RBRACE          reduce using rule 52 (when_case -> ELSE ARROW statement_list .)
    ELSE            reduce using rule 52 (when_case -> ELSE ARROW statement_list .)
    VAR             shift and go to state 10
    VAL             shift and go to state 12
    ID              shift and go to state 11
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    PRINTLN         shift and go to state 21
    PRINT           shift and go to state 22
    READLINE        shift and go to state 23
    REPEAT          shift and go to state 24
    IF              shift and go to state 25
    WHEN            shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

  ! LPAREN          [ reduce using rule 52 (when_case -> ELSE ARROW statement_list .) ]
  ! NUMBER          [ reduce using rule 52 (when_case -> ELSE ARROW statement_list .) ]
  ! FLOAT           [ reduce using rule 52 (when_case -> ELSE ARROW statement_list .) ]
  ! DOUBLE          [ reduce using rule 52 (when_case -> ELSE ARROW statement_list .) ]
  ! BOOLEAN         [ reduce using rule 52 (when_case -> ELSE ARROW statement_list .) ]
  ! STRING          [ reduce using rule 52 (when_case -> ELSE ARROW statement_list .) ]
  ! ID              [ reduce using rule 52 (when_case -> ELSE ARROW statement_list .) ]
  ! LISTOF          [ reduce using rule 52 (when_case -> ELSE ARROW statement_list .) ]
  ! MAPOF           [ reduce using rule 52 (when_case -> ELSE ARROW statement_list .) ]
  ! SETOF           [ reduce using rule 52 (when_case -> ELSE ARROW statement_list .) ]

    statement                      shift and go to state 32
    assignment                     shift and go to state 3
    expression                     shift and go to state 4
    print                          shift and go to state 5
    input                          shift and go to state 6
    repeat                         shift and go to state 7
    condition                      shift and go to state 8
    loop                           shift and go to state 9
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 144

    (46) loop -> FOR LPAREN ID IN expression RPAREN LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (4) statement -> . assignment
    (5) statement -> . expression
    (6) statement -> . print
    (7) statement -> . input
    (8) statement -> . repeat
    (9) statement -> . condition
    (10) statement -> . loop
    (11) assignment -> . VAR ID ASSIGN expression
    (12) assignment -> . VAL ID ASSIGN expression
    (13) assignment -> . ID ASSIGN expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (35) print -> . PRINTLN LPAREN argument_list RPAREN
    (36) print -> . PRINT LPAREN argument_list RPAREN
    (41) input -> . READLINE LPAREN RPAREN
    (42) repeat -> . REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE
    (43) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (44) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (48) condition -> . WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE
    (45) loop -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (46) loop -> . FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE
    (47) loop -> . FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    RBRACE          shift and go to state 147
    VAR             shift and go to state 10
    VAL             shift and go to state 12
    ID              shift and go to state 11
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    PRINTLN         shift and go to state 21
    PRINT           shift and go to state 22
    READLINE        shift and go to state 23
    REPEAT          shift and go to state 24
    IF              shift and go to state 25
    WHEN            shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    expression                     shift and go to state 4
    statement                      shift and go to state 32
    assignment                     shift and go to state 3
    print                          shift and go to state 5
    input                          shift and go to state 6
    repeat                         shift and go to state 7
    condition                      shift and go to state 8
    loop                           shift and go to state 9
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 145

    (47) loop -> FOR LPAREN ID IN range RPAREN LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (4) statement -> . assignment
    (5) statement -> . expression
    (6) statement -> . print
    (7) statement -> . input
    (8) statement -> . repeat
    (9) statement -> . condition
    (10) statement -> . loop
    (11) assignment -> . VAR ID ASSIGN expression
    (12) assignment -> . VAL ID ASSIGN expression
    (13) assignment -> . ID ASSIGN expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (35) print -> . PRINTLN LPAREN argument_list RPAREN
    (36) print -> . PRINT LPAREN argument_list RPAREN
    (41) input -> . READLINE LPAREN RPAREN
    (42) repeat -> . REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE
    (43) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (44) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (48) condition -> . WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE
    (45) loop -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (46) loop -> . FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE
    (47) loop -> . FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    RBRACE          shift and go to state 148
    VAR             shift and go to state 10
    VAL             shift and go to state 12
    ID              shift and go to state 11
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    PRINTLN         shift and go to state 21
    PRINT           shift and go to state 22
    READLINE        shift and go to state 23
    REPEAT          shift and go to state 24
    IF              shift and go to state 25
    WHEN            shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    range                          shift and go to state 19
    statement                      shift and go to state 32
    assignment                     shift and go to state 3
    expression                     shift and go to state 4
    print                          shift and go to state 5
    input                          shift and go to state 6
    repeat                         shift and go to state 7
    condition                      shift and go to state 8
    loop                           shift and go to state 9
    data_structure                 shift and go to state 20

state 146

    (43) condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE . statement_list RBRACE
    (1) statement_list -> . statement
    (2) statement_list -> . statement_list statement
    (4) statement -> . assignment
    (5) statement -> . expression
    (6) statement -> . print
    (7) statement -> . input
    (8) statement -> . repeat
    (9) statement -> . condition
    (10) statement -> . loop
    (11) assignment -> . VAR ID ASSIGN expression
    (12) assignment -> . VAL ID ASSIGN expression
    (13) assignment -> . ID ASSIGN expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (35) print -> . PRINTLN LPAREN argument_list RPAREN
    (36) print -> . PRINT LPAREN argument_list RPAREN
    (41) input -> . READLINE LPAREN RPAREN
    (42) repeat -> . REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE
    (43) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (44) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (48) condition -> . WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE
    (45) loop -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (46) loop -> . FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE
    (47) loop -> . FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    VAR             shift and go to state 10
    VAL             shift and go to state 12
    ID              shift and go to state 11
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    PRINTLN         shift and go to state 21
    PRINT           shift and go to state 22
    READLINE        shift and go to state 23
    REPEAT          shift and go to state 24
    IF              shift and go to state 25
    WHEN            shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    expression                     shift and go to state 4
    statement_list                 shift and go to state 149
    statement                      shift and go to state 2
    assignment                     shift and go to state 3
    print                          shift and go to state 5
    input                          shift and go to state 6
    repeat                         shift and go to state 7
    condition                      shift and go to state 8
    loop                           shift and go to state 9
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 147

    (46) loop -> FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE .

    VAR             reduce using rule 46 (loop -> FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE .)
    VAL             reduce using rule 46 (loop -> FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE .)
    ID              reduce using rule 46 (loop -> FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 46 (loop -> FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE .)
    NUMBER          reduce using rule 46 (loop -> FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 46 (loop -> FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE .)
    DOUBLE          reduce using rule 46 (loop -> FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE .)
    BOOLEAN         reduce using rule 46 (loop -> FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE .)
    STRING          reduce using rule 46 (loop -> FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE .)
    PRINTLN         reduce using rule 46 (loop -> FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 46 (loop -> FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE .)
    READLINE        reduce using rule 46 (loop -> FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE .)
    REPEAT          reduce using rule 46 (loop -> FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 46 (loop -> FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE .)
    WHEN            reduce using rule 46 (loop -> FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 46 (loop -> FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 46 (loop -> FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE .)
    LISTOF          reduce using rule 46 (loop -> FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE .)
    MAPOF           reduce using rule 46 (loop -> FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE .)
    SETOF           reduce using rule 46 (loop -> FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 46 (loop -> FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 46 (loop -> FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE .)
    ELSE            reduce using rule 46 (loop -> FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE .)


state 148

    (47) loop -> FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE .

    VAR             reduce using rule 47 (loop -> FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE .)
    VAL             reduce using rule 47 (loop -> FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE .)
    ID              reduce using rule 47 (loop -> FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 47 (loop -> FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE .)
    NUMBER          reduce using rule 47 (loop -> FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 47 (loop -> FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE .)
    DOUBLE          reduce using rule 47 (loop -> FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE .)
    BOOLEAN         reduce using rule 47 (loop -> FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE .)
    STRING          reduce using rule 47 (loop -> FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE .)
    PRINTLN         reduce using rule 47 (loop -> FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 47 (loop -> FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE .)
    READLINE        reduce using rule 47 (loop -> FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE .)
    REPEAT          reduce using rule 47 (loop -> FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 47 (loop -> FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE .)
    WHEN            reduce using rule 47 (loop -> FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 47 (loop -> FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 47 (loop -> FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE .)
    LISTOF          reduce using rule 47 (loop -> FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE .)
    MAPOF           reduce using rule 47 (loop -> FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE .)
    SETOF           reduce using rule 47 (loop -> FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 47 (loop -> FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 47 (loop -> FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE .)
    ELSE            reduce using rule 47 (loop -> FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE .)


state 149

    (43) condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (4) statement -> . assignment
    (5) statement -> . expression
    (6) statement -> . print
    (7) statement -> . input
    (8) statement -> . repeat
    (9) statement -> . condition
    (10) statement -> . loop
    (11) assignment -> . VAR ID ASSIGN expression
    (12) assignment -> . VAL ID ASSIGN expression
    (13) assignment -> . ID ASSIGN expression
    (14) expression -> . expression NOTEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression LTEQ expression
    (17) expression -> . expression GT expression
    (18) expression -> . expression GTEQ expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . LPAREN expression RPAREN
    (27) expression -> . NUMBER
    (28) expression -> . FLOAT
    (29) expression -> . DOUBLE
    (30) expression -> . BOOLEAN
    (31) expression -> . STRING
    (32) expression -> . ID
    (34) expression -> . range
    (58) expression -> . data_structure
    (35) print -> . PRINTLN LPAREN argument_list RPAREN
    (36) print -> . PRINT LPAREN argument_list RPAREN
    (41) input -> . READLINE LPAREN RPAREN
    (42) repeat -> . REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE
    (43) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (44) condition -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (48) condition -> . WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE
    (45) loop -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (46) loop -> . FOR LPAREN ID IN expression RPAREN LBRACE statement_list RBRACE
    (47) loop -> . FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE
    (33) range -> . NUMBER RANGE NUMBER
    (55) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (56) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (57) data_structure -> . SETOF LPAREN argument_list RPAREN

    RBRACE          shift and go to state 150
    VAR             shift and go to state 10
    VAL             shift and go to state 12
    ID              shift and go to state 11
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    PRINTLN         shift and go to state 21
    PRINT           shift and go to state 22
    READLINE        shift and go to state 23
    REPEAT          shift and go to state 24
    IF              shift and go to state 25
    WHEN            shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    LISTOF          shift and go to state 29
    MAPOF           shift and go to state 30
    SETOF           shift and go to state 31

    expression                     shift and go to state 4
    statement                      shift and go to state 32
    assignment                     shift and go to state 3
    print                          shift and go to state 5
    input                          shift and go to state 6
    repeat                         shift and go to state 7
    condition                      shift and go to state 8
    loop                           shift and go to state 9
    range                          shift and go to state 19
    data_structure                 shift and go to state 20

state 150

    (43) condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .

    VAR             reduce using rule 43 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    VAL             reduce using rule 43 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    ID              reduce using rule 43 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 43 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    NUMBER          reduce using rule 43 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 43 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    DOUBLE          reduce using rule 43 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    BOOLEAN         reduce using rule 43 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    STRING          reduce using rule 43 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    PRINTLN         reduce using rule 43 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 43 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    READLINE        reduce using rule 43 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    REPEAT          reduce using rule 43 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    IF              reduce using rule 43 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    WHEN            reduce using rule 43 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 43 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    FOR             reduce using rule 43 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    LISTOF          reduce using rule 43 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    MAPOF           reduce using rule 43 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    SETOF           reduce using rule 43 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    $end            reduce using rule 43 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 43 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    ELSE            reduce using rule 43 (condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 80 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 117 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 131 resolved as shift
WARNING: shift/reduce conflict for ID in state 141 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 141 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 141 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 141 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 141 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 141 resolved as shift
WARNING: shift/reduce conflict for STRING in state 141 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 141 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 141 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 141 resolved as shift
WARNING: shift/reduce conflict for ID in state 143 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 143 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 143 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 143 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 143 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 143 resolved as shift
WARNING: shift/reduce conflict for STRING in state 143 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 143 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 143 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 143 resolved as shift
