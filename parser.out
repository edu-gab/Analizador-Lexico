Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ACTUAL
    ADDEQ
    ANNOTATION
    AS
    BREAK
    BY
    CATCH
    CHAR
    CLASS
    COLON
    COMPANION
    CONST
    CONSTRUCTOR
    CONTINUE
    CROSSINLINE
    DATA
    DECREMENT
    DELIMITED_COMMENT
    DIVEQ
    DO
    DOT
    DOUBLECOLON
    DYNAMIC
    EACH
    ENUM
    EXPECT
    EXTERNAL
    FINAL
    FINALLY
    FUN
    IMPORT
    INCREMENT
    INFIX
    INIT
    INLINE
    INNER
    INTERFACE
    INTERNAL
    IS
    LATEINIT
    LBRACK
    LINE_COMMENT
    LIST
    MAP
    MODEQ
    MODULE
    MULTEQ
    NOINLINE
    NOT
    NOT_IN
    NOT_IS
    NULL
    OBJECT
    OF
    OPEN
    OPERATOR
    OUT
    OVERRIDE
    PACKAGE
    PRIVATE
    PROTECTED
    PUBLIC
    RANGE
    RBRACK
    REIFIED
    RETURN
    SEALED
    SEMICOLON
    SHEBANG
    SUBEQ
    SUPER
    SUSPEND
    TAILREC
    THEN
    THIS
    THROW
    TRY
    TYPEDATA
    TYPEOF
    TYPE_ALIAS
    UNIT
    VARARG
    WHERE
    WS

Grammar

Rule 0     S' -> statement_list
Rule 1     statement_list -> statement
Rule 2     statement_list -> statement_list statement
Rule 3     statement -> assignment
Rule 4     statement -> expression
Rule 5     statement -> print
Rule 6     statement -> input
Rule 7     statement -> condition
Rule 8     statement -> loop
Rule 9     statement -> data_structure
Rule 10    assignment -> VAR ID ASSIGN expression
Rule 11    assignment -> VAL ID ASSIGN expression
Rule 12    expression -> expression PLUS expression
Rule 13    expression -> expression MINUS expression
Rule 14    expression -> expression TIMES expression
Rule 15    expression -> expression DIVIDE expression
Rule 16    expression -> expression MOD expression
Rule 17    expression -> expression EQEQ expression
Rule 18    expression -> expression NOTEQ expression
Rule 19    expression -> expression LT expression
Rule 20    expression -> expression LTEQ expression
Rule 21    expression -> expression GT expression
Rule 22    expression -> expression GTEQ expression
Rule 23    expression -> expression AND expression
Rule 24    expression -> expression OR expression
Rule 25    expression -> LPAREN expression RPAREN
Rule 26    expression -> NUMBER
Rule 27    expression -> FLOAT
Rule 28    expression -> DOUBLE
Rule 29    expression -> BOOLEAN
Rule 30    expression -> STRING
Rule 31    expression -> ID
Rule 32    print -> PRINTLN LPAREN argument_list RPAREN
Rule 33    print -> PRINT LPAREN argument_list RPAREN
Rule 34    argument_list -> expression
Rule 35    argument_list -> expression COMMA expression
Rule 36    argument_list -> argument_list COMMA expression
Rule 37    argument_list -> empty
Rule 38    input -> READLINE LPAREN RPAREN
Rule 39    condition -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
Rule 40    condition -> IF expression LBRACE statement_list RBRACE
Rule 41    loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
Rule 42    loop -> FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE
Rule 43    condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE
Rule 44    when_cases -> when_case
Rule 45    when_cases -> when_cases when_case
Rule 46    when_case -> expression_list ARROW statement_list
Rule 47    when_case -> ELSE ARROW statement_list
Rule 48    expression_list -> expression
Rule 49    expression_list -> expression_list COMMA expression
Rule 50    data_structure -> LISTOF LPAREN argument_list RPAREN
Rule 51    data_structure -> MAPOF LPAREN map_argument_list RPAREN
Rule 52    data_structure -> SETOF LPAREN argument_list RPAREN
Rule 53    map_argument_list -> map_element
Rule 54    map_argument_list -> map_argument_list COMMA map_element
Rule 55    map_element -> expression TO expression
Rule 56    type -> ID
Rule 57    empty -> <empty>

Terminals, with rules where they appear

ABSTRACT             : 
ACTUAL               : 
ADDEQ                : 
AND                  : 23
ANNOTATION           : 
ARROW                : 46 47
AS                   : 
ASSIGN               : 10 11
BOOLEAN              : 29
BREAK                : 
BY                   : 
CATCH                : 
CHAR                 : 
CLASS                : 
COLON                : 
COMMA                : 35 36 49 54
COMPANION            : 
CONST                : 
CONSTRUCTOR          : 
CONTINUE             : 
CROSSINLINE          : 
DATA                 : 
DECREMENT            : 
DELIMITED_COMMENT    : 
DIVEQ                : 
DIVIDE               : 15
DO                   : 
DOT                  : 
DOUBLE               : 28
DOUBLECOLON          : 
DYNAMIC              : 
EACH                 : 
ELSE                 : 39 47
ENUM                 : 
EQEQ                 : 17
EXPECT               : 
EXTERNAL             : 
FINAL                : 
FINALLY              : 
FLOAT                : 27
FOR                  : 42
FUN                  : 
GT                   : 21
GTEQ                 : 22
ID                   : 10 11 31 42 56
IF                   : 39 40
IMPORT               : 
IN                   : 42
INCREMENT            : 
INFIX                : 
INIT                 : 
INLINE               : 
INNER                : 
INTERFACE            : 
INTERNAL             : 
IS                   : 
LATEINIT             : 
LBRACE               : 39 39 40 41 42 43
LBRACK               : 
LINE_COMMENT         : 
LIST                 : 
LISTOF               : 50
LPAREN               : 25 32 33 38 41 42 43 50 51 52
LT                   : 19
LTEQ                 : 20
MAP                  : 
MAPOF                : 51
MINUS                : 13
MOD                  : 16
MODEQ                : 
MODULE               : 
MULTEQ               : 
NOINLINE             : 
NOT                  : 
NOTEQ                : 18
NOT_IN               : 
NOT_IS               : 
NULL                 : 
NUMBER               : 26
OBJECT               : 
OF                   : 
OPEN                 : 
OPERATOR             : 
OR                   : 24
OUT                  : 
OVERRIDE             : 
PACKAGE              : 
PLUS                 : 12
PRINT                : 33
PRINTLN              : 32
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
RANGE                : 
RBRACE               : 39 39 40 41 42 43
RBRACK               : 
READLINE             : 38
REIFIED              : 
RETURN               : 
RPAREN               : 25 32 33 38 41 42 43 50 51 52
SEALED               : 
SEMICOLON            : 
SETOF                : 52
SHEBANG              : 
STRING               : 30
SUBEQ                : 
SUPER                : 
SUSPEND              : 
TAILREC              : 
THEN                 : 
THIS                 : 
THROW                : 
TIMES                : 14
TO                   : 55
TRY                  : 
TYPEDATA             : 
TYPEOF               : 
TYPE_ALIAS           : 
UNIT                 : 
VAL                  : 11
VAR                  : 10
VARARG               : 
WHEN                 : 43
WHERE                : 
WHILE                : 41
WS                   : 
error                : 

Nonterminals, with rules where they appear

argument_list        : 32 33 36 50 52
assignment           : 3
condition            : 7
data_structure       : 9 42
empty                : 37
expression           : 4 10 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 34 35 35 36 39 40 41 43 48 49 55 55
expression_list      : 46 49
input                : 6
loop                 : 8
map_argument_list    : 51 54
map_element          : 53 54
print                : 5
statement            : 1 2
statement_list       : 2 39 39 40 41 42 46 47 0
type                 : 
when_case            : 44 45
when_cases           : 43 45

Parsing method: LALR

state 0

    (0) S' -> . statement_list
    (1) statement_list -> . statement
    (2) statement_list -> . statement_list statement
    (3) statement -> . assignment
    (4) statement -> . expression
    (5) statement -> . print
    (6) statement -> . input
    (7) statement -> . condition
    (8) statement -> . loop
    (9) statement -> . data_structure
    (10) assignment -> . VAR ID ASSIGN expression
    (11) assignment -> . VAL ID ASSIGN expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID
    (32) print -> . PRINTLN LPAREN argument_list RPAREN
    (33) print -> . PRINT LPAREN argument_list RPAREN
    (38) input -> . READLINE LPAREN RPAREN
    (39) condition -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (40) condition -> . IF expression LBRACE statement_list RBRACE
    (43) condition -> . WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE
    (41) loop -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (42) loop -> . FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE
    (50) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (51) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (52) data_structure -> . SETOF LPAREN argument_list RPAREN

    VAR             shift and go to state 10
    VAL             shift and go to state 12
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11
    PRINTLN         shift and go to state 19
    PRINT           shift and go to state 20
    READLINE        shift and go to state 21
    IF              shift and go to state 22
    WHEN            shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    LISTOF          shift and go to state 26
    MAPOF           shift and go to state 27
    SETOF           shift and go to state 28

    statement_list                 shift and go to state 1
    statement                      shift and go to state 2
    assignment                     shift and go to state 3
    expression                     shift and go to state 4
    print                          shift and go to state 5
    input                          shift and go to state 6
    condition                      shift and go to state 7
    loop                           shift and go to state 8
    data_structure                 shift and go to state 9

state 1

    (0) S' -> statement_list .
    (2) statement_list -> statement_list . statement
    (3) statement -> . assignment
    (4) statement -> . expression
    (5) statement -> . print
    (6) statement -> . input
    (7) statement -> . condition
    (8) statement -> . loop
    (9) statement -> . data_structure
    (10) assignment -> . VAR ID ASSIGN expression
    (11) assignment -> . VAL ID ASSIGN expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID
    (32) print -> . PRINTLN LPAREN argument_list RPAREN
    (33) print -> . PRINT LPAREN argument_list RPAREN
    (38) input -> . READLINE LPAREN RPAREN
    (39) condition -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (40) condition -> . IF expression LBRACE statement_list RBRACE
    (43) condition -> . WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE
    (41) loop -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (42) loop -> . FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE
    (50) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (51) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (52) data_structure -> . SETOF LPAREN argument_list RPAREN

    VAR             shift and go to state 10
    VAL             shift and go to state 12
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11
    PRINTLN         shift and go to state 19
    PRINT           shift and go to state 20
    READLINE        shift and go to state 21
    IF              shift and go to state 22
    WHEN            shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    LISTOF          shift and go to state 26
    MAPOF           shift and go to state 27
    SETOF           shift and go to state 28

    statement                      shift and go to state 29
    assignment                     shift and go to state 3
    expression                     shift and go to state 4
    print                          shift and go to state 5
    input                          shift and go to state 6
    condition                      shift and go to state 7
    loop                           shift and go to state 8
    data_structure                 shift and go to state 9

state 2

    (1) statement_list -> statement .

    VAR             reduce using rule 1 (statement_list -> statement .)
    VAL             reduce using rule 1 (statement_list -> statement .)
    LPAREN          reduce using rule 1 (statement_list -> statement .)
    NUMBER          reduce using rule 1 (statement_list -> statement .)
    FLOAT           reduce using rule 1 (statement_list -> statement .)
    DOUBLE          reduce using rule 1 (statement_list -> statement .)
    BOOLEAN         reduce using rule 1 (statement_list -> statement .)
    STRING          reduce using rule 1 (statement_list -> statement .)
    ID              reduce using rule 1 (statement_list -> statement .)
    PRINTLN         reduce using rule 1 (statement_list -> statement .)
    PRINT           reduce using rule 1 (statement_list -> statement .)
    READLINE        reduce using rule 1 (statement_list -> statement .)
    IF              reduce using rule 1 (statement_list -> statement .)
    WHEN            reduce using rule 1 (statement_list -> statement .)
    WHILE           reduce using rule 1 (statement_list -> statement .)
    FOR             reduce using rule 1 (statement_list -> statement .)
    LISTOF          reduce using rule 1 (statement_list -> statement .)
    MAPOF           reduce using rule 1 (statement_list -> statement .)
    SETOF           reduce using rule 1 (statement_list -> statement .)
    $end            reduce using rule 1 (statement_list -> statement .)
    RBRACE          reduce using rule 1 (statement_list -> statement .)
    ELSE            reduce using rule 1 (statement_list -> statement .)


state 3

    (3) statement -> assignment .

    VAR             reduce using rule 3 (statement -> assignment .)
    VAL             reduce using rule 3 (statement -> assignment .)
    LPAREN          reduce using rule 3 (statement -> assignment .)
    NUMBER          reduce using rule 3 (statement -> assignment .)
    FLOAT           reduce using rule 3 (statement -> assignment .)
    DOUBLE          reduce using rule 3 (statement -> assignment .)
    BOOLEAN         reduce using rule 3 (statement -> assignment .)
    STRING          reduce using rule 3 (statement -> assignment .)
    ID              reduce using rule 3 (statement -> assignment .)
    PRINTLN         reduce using rule 3 (statement -> assignment .)
    PRINT           reduce using rule 3 (statement -> assignment .)
    READLINE        reduce using rule 3 (statement -> assignment .)
    IF              reduce using rule 3 (statement -> assignment .)
    WHEN            reduce using rule 3 (statement -> assignment .)
    WHILE           reduce using rule 3 (statement -> assignment .)
    FOR             reduce using rule 3 (statement -> assignment .)
    LISTOF          reduce using rule 3 (statement -> assignment .)
    MAPOF           reduce using rule 3 (statement -> assignment .)
    SETOF           reduce using rule 3 (statement -> assignment .)
    $end            reduce using rule 3 (statement -> assignment .)
    RBRACE          reduce using rule 3 (statement -> assignment .)
    ELSE            reduce using rule 3 (statement -> assignment .)


state 4

    (4) statement -> expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . MOD expression
    (17) expression -> expression . EQEQ expression
    (18) expression -> expression . NOTEQ expression
    (19) expression -> expression . LT expression
    (20) expression -> expression . LTEQ expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GTEQ expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression

    VAR             reduce using rule 4 (statement -> expression .)
    VAL             reduce using rule 4 (statement -> expression .)
    LPAREN          reduce using rule 4 (statement -> expression .)
    NUMBER          reduce using rule 4 (statement -> expression .)
    FLOAT           reduce using rule 4 (statement -> expression .)
    DOUBLE          reduce using rule 4 (statement -> expression .)
    BOOLEAN         reduce using rule 4 (statement -> expression .)
    STRING          reduce using rule 4 (statement -> expression .)
    ID              reduce using rule 4 (statement -> expression .)
    PRINTLN         reduce using rule 4 (statement -> expression .)
    PRINT           reduce using rule 4 (statement -> expression .)
    READLINE        reduce using rule 4 (statement -> expression .)
    IF              reduce using rule 4 (statement -> expression .)
    WHEN            reduce using rule 4 (statement -> expression .)
    WHILE           reduce using rule 4 (statement -> expression .)
    FOR             reduce using rule 4 (statement -> expression .)
    LISTOF          reduce using rule 4 (statement -> expression .)
    MAPOF           reduce using rule 4 (statement -> expression .)
    SETOF           reduce using rule 4 (statement -> expression .)
    $end            reduce using rule 4 (statement -> expression .)
    RBRACE          reduce using rule 4 (statement -> expression .)
    ELSE            reduce using rule 4 (statement -> expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MOD             shift and go to state 34
    EQEQ            shift and go to state 35
    NOTEQ           shift and go to state 36
    LT              shift and go to state 37
    LTEQ            shift and go to state 38
    GT              shift and go to state 39
    GTEQ            shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42


state 5

    (5) statement -> print .

    VAR             reduce using rule 5 (statement -> print .)
    VAL             reduce using rule 5 (statement -> print .)
    LPAREN          reduce using rule 5 (statement -> print .)
    NUMBER          reduce using rule 5 (statement -> print .)
    FLOAT           reduce using rule 5 (statement -> print .)
    DOUBLE          reduce using rule 5 (statement -> print .)
    BOOLEAN         reduce using rule 5 (statement -> print .)
    STRING          reduce using rule 5 (statement -> print .)
    ID              reduce using rule 5 (statement -> print .)
    PRINTLN         reduce using rule 5 (statement -> print .)
    PRINT           reduce using rule 5 (statement -> print .)
    READLINE        reduce using rule 5 (statement -> print .)
    IF              reduce using rule 5 (statement -> print .)
    WHEN            reduce using rule 5 (statement -> print .)
    WHILE           reduce using rule 5 (statement -> print .)
    FOR             reduce using rule 5 (statement -> print .)
    LISTOF          reduce using rule 5 (statement -> print .)
    MAPOF           reduce using rule 5 (statement -> print .)
    SETOF           reduce using rule 5 (statement -> print .)
    $end            reduce using rule 5 (statement -> print .)
    RBRACE          reduce using rule 5 (statement -> print .)
    ELSE            reduce using rule 5 (statement -> print .)


state 6

    (6) statement -> input .

    VAR             reduce using rule 6 (statement -> input .)
    VAL             reduce using rule 6 (statement -> input .)
    LPAREN          reduce using rule 6 (statement -> input .)
    NUMBER          reduce using rule 6 (statement -> input .)
    FLOAT           reduce using rule 6 (statement -> input .)
    DOUBLE          reduce using rule 6 (statement -> input .)
    BOOLEAN         reduce using rule 6 (statement -> input .)
    STRING          reduce using rule 6 (statement -> input .)
    ID              reduce using rule 6 (statement -> input .)
    PRINTLN         reduce using rule 6 (statement -> input .)
    PRINT           reduce using rule 6 (statement -> input .)
    READLINE        reduce using rule 6 (statement -> input .)
    IF              reduce using rule 6 (statement -> input .)
    WHEN            reduce using rule 6 (statement -> input .)
    WHILE           reduce using rule 6 (statement -> input .)
    FOR             reduce using rule 6 (statement -> input .)
    LISTOF          reduce using rule 6 (statement -> input .)
    MAPOF           reduce using rule 6 (statement -> input .)
    SETOF           reduce using rule 6 (statement -> input .)
    $end            reduce using rule 6 (statement -> input .)
    RBRACE          reduce using rule 6 (statement -> input .)
    ELSE            reduce using rule 6 (statement -> input .)


state 7

    (7) statement -> condition .

    VAR             reduce using rule 7 (statement -> condition .)
    VAL             reduce using rule 7 (statement -> condition .)
    LPAREN          reduce using rule 7 (statement -> condition .)
    NUMBER          reduce using rule 7 (statement -> condition .)
    FLOAT           reduce using rule 7 (statement -> condition .)
    DOUBLE          reduce using rule 7 (statement -> condition .)
    BOOLEAN         reduce using rule 7 (statement -> condition .)
    STRING          reduce using rule 7 (statement -> condition .)
    ID              reduce using rule 7 (statement -> condition .)
    PRINTLN         reduce using rule 7 (statement -> condition .)
    PRINT           reduce using rule 7 (statement -> condition .)
    READLINE        reduce using rule 7 (statement -> condition .)
    IF              reduce using rule 7 (statement -> condition .)
    WHEN            reduce using rule 7 (statement -> condition .)
    WHILE           reduce using rule 7 (statement -> condition .)
    FOR             reduce using rule 7 (statement -> condition .)
    LISTOF          reduce using rule 7 (statement -> condition .)
    MAPOF           reduce using rule 7 (statement -> condition .)
    SETOF           reduce using rule 7 (statement -> condition .)
    $end            reduce using rule 7 (statement -> condition .)
    RBRACE          reduce using rule 7 (statement -> condition .)
    ELSE            reduce using rule 7 (statement -> condition .)


state 8

    (8) statement -> loop .

    VAR             reduce using rule 8 (statement -> loop .)
    VAL             reduce using rule 8 (statement -> loop .)
    LPAREN          reduce using rule 8 (statement -> loop .)
    NUMBER          reduce using rule 8 (statement -> loop .)
    FLOAT           reduce using rule 8 (statement -> loop .)
    DOUBLE          reduce using rule 8 (statement -> loop .)
    BOOLEAN         reduce using rule 8 (statement -> loop .)
    STRING          reduce using rule 8 (statement -> loop .)
    ID              reduce using rule 8 (statement -> loop .)
    PRINTLN         reduce using rule 8 (statement -> loop .)
    PRINT           reduce using rule 8 (statement -> loop .)
    READLINE        reduce using rule 8 (statement -> loop .)
    IF              reduce using rule 8 (statement -> loop .)
    WHEN            reduce using rule 8 (statement -> loop .)
    WHILE           reduce using rule 8 (statement -> loop .)
    FOR             reduce using rule 8 (statement -> loop .)
    LISTOF          reduce using rule 8 (statement -> loop .)
    MAPOF           reduce using rule 8 (statement -> loop .)
    SETOF           reduce using rule 8 (statement -> loop .)
    $end            reduce using rule 8 (statement -> loop .)
    RBRACE          reduce using rule 8 (statement -> loop .)
    ELSE            reduce using rule 8 (statement -> loop .)


state 9

    (9) statement -> data_structure .

    VAR             reduce using rule 9 (statement -> data_structure .)
    VAL             reduce using rule 9 (statement -> data_structure .)
    LPAREN          reduce using rule 9 (statement -> data_structure .)
    NUMBER          reduce using rule 9 (statement -> data_structure .)
    FLOAT           reduce using rule 9 (statement -> data_structure .)
    DOUBLE          reduce using rule 9 (statement -> data_structure .)
    BOOLEAN         reduce using rule 9 (statement -> data_structure .)
    STRING          reduce using rule 9 (statement -> data_structure .)
    ID              reduce using rule 9 (statement -> data_structure .)
    PRINTLN         reduce using rule 9 (statement -> data_structure .)
    PRINT           reduce using rule 9 (statement -> data_structure .)
    READLINE        reduce using rule 9 (statement -> data_structure .)
    IF              reduce using rule 9 (statement -> data_structure .)
    WHEN            reduce using rule 9 (statement -> data_structure .)
    WHILE           reduce using rule 9 (statement -> data_structure .)
    FOR             reduce using rule 9 (statement -> data_structure .)
    LISTOF          reduce using rule 9 (statement -> data_structure .)
    MAPOF           reduce using rule 9 (statement -> data_structure .)
    SETOF           reduce using rule 9 (statement -> data_structure .)
    $end            reduce using rule 9 (statement -> data_structure .)
    RBRACE          reduce using rule 9 (statement -> data_structure .)
    ELSE            reduce using rule 9 (statement -> data_structure .)


state 10

    (10) assignment -> VAR . ID ASSIGN expression

    ID              shift and go to state 43


state 11

    (31) expression -> ID .

    PLUS            reduce using rule 31 (expression -> ID .)
    MINUS           reduce using rule 31 (expression -> ID .)
    TIMES           reduce using rule 31 (expression -> ID .)
    DIVIDE          reduce using rule 31 (expression -> ID .)
    MOD             reduce using rule 31 (expression -> ID .)
    EQEQ            reduce using rule 31 (expression -> ID .)
    NOTEQ           reduce using rule 31 (expression -> ID .)
    LT              reduce using rule 31 (expression -> ID .)
    LTEQ            reduce using rule 31 (expression -> ID .)
    GT              reduce using rule 31 (expression -> ID .)
    GTEQ            reduce using rule 31 (expression -> ID .)
    AND             reduce using rule 31 (expression -> ID .)
    OR              reduce using rule 31 (expression -> ID .)
    VAR             reduce using rule 31 (expression -> ID .)
    VAL             reduce using rule 31 (expression -> ID .)
    LPAREN          reduce using rule 31 (expression -> ID .)
    NUMBER          reduce using rule 31 (expression -> ID .)
    FLOAT           reduce using rule 31 (expression -> ID .)
    DOUBLE          reduce using rule 31 (expression -> ID .)
    BOOLEAN         reduce using rule 31 (expression -> ID .)
    STRING          reduce using rule 31 (expression -> ID .)
    ID              reduce using rule 31 (expression -> ID .)
    PRINTLN         reduce using rule 31 (expression -> ID .)
    PRINT           reduce using rule 31 (expression -> ID .)
    READLINE        reduce using rule 31 (expression -> ID .)
    IF              reduce using rule 31 (expression -> ID .)
    WHEN            reduce using rule 31 (expression -> ID .)
    WHILE           reduce using rule 31 (expression -> ID .)
    FOR             reduce using rule 31 (expression -> ID .)
    LISTOF          reduce using rule 31 (expression -> ID .)
    MAPOF           reduce using rule 31 (expression -> ID .)
    SETOF           reduce using rule 31 (expression -> ID .)
    $end            reduce using rule 31 (expression -> ID .)
    RPAREN          reduce using rule 31 (expression -> ID .)
    LBRACE          reduce using rule 31 (expression -> ID .)
    COMMA           reduce using rule 31 (expression -> ID .)
    TO              reduce using rule 31 (expression -> ID .)
    RBRACE          reduce using rule 31 (expression -> ID .)
    ELSE            reduce using rule 31 (expression -> ID .)
    ARROW           reduce using rule 31 (expression -> ID .)


state 12

    (11) assignment -> VAL . ID ASSIGN expression

    ID              shift and go to state 44


state 13

    (25) expression -> LPAREN . expression RPAREN
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11

    expression                     shift and go to state 45

state 14

    (26) expression -> NUMBER .

    PLUS            reduce using rule 26 (expression -> NUMBER .)
    MINUS           reduce using rule 26 (expression -> NUMBER .)
    TIMES           reduce using rule 26 (expression -> NUMBER .)
    DIVIDE          reduce using rule 26 (expression -> NUMBER .)
    MOD             reduce using rule 26 (expression -> NUMBER .)
    EQEQ            reduce using rule 26 (expression -> NUMBER .)
    NOTEQ           reduce using rule 26 (expression -> NUMBER .)
    LT              reduce using rule 26 (expression -> NUMBER .)
    LTEQ            reduce using rule 26 (expression -> NUMBER .)
    GT              reduce using rule 26 (expression -> NUMBER .)
    GTEQ            reduce using rule 26 (expression -> NUMBER .)
    AND             reduce using rule 26 (expression -> NUMBER .)
    OR              reduce using rule 26 (expression -> NUMBER .)
    VAR             reduce using rule 26 (expression -> NUMBER .)
    VAL             reduce using rule 26 (expression -> NUMBER .)
    LPAREN          reduce using rule 26 (expression -> NUMBER .)
    NUMBER          reduce using rule 26 (expression -> NUMBER .)
    FLOAT           reduce using rule 26 (expression -> NUMBER .)
    DOUBLE          reduce using rule 26 (expression -> NUMBER .)
    BOOLEAN         reduce using rule 26 (expression -> NUMBER .)
    STRING          reduce using rule 26 (expression -> NUMBER .)
    ID              reduce using rule 26 (expression -> NUMBER .)
    PRINTLN         reduce using rule 26 (expression -> NUMBER .)
    PRINT           reduce using rule 26 (expression -> NUMBER .)
    READLINE        reduce using rule 26 (expression -> NUMBER .)
    IF              reduce using rule 26 (expression -> NUMBER .)
    WHEN            reduce using rule 26 (expression -> NUMBER .)
    WHILE           reduce using rule 26 (expression -> NUMBER .)
    FOR             reduce using rule 26 (expression -> NUMBER .)
    LISTOF          reduce using rule 26 (expression -> NUMBER .)
    MAPOF           reduce using rule 26 (expression -> NUMBER .)
    SETOF           reduce using rule 26 (expression -> NUMBER .)
    $end            reduce using rule 26 (expression -> NUMBER .)
    RPAREN          reduce using rule 26 (expression -> NUMBER .)
    LBRACE          reduce using rule 26 (expression -> NUMBER .)
    COMMA           reduce using rule 26 (expression -> NUMBER .)
    TO              reduce using rule 26 (expression -> NUMBER .)
    RBRACE          reduce using rule 26 (expression -> NUMBER .)
    ELSE            reduce using rule 26 (expression -> NUMBER .)
    ARROW           reduce using rule 26 (expression -> NUMBER .)


state 15

    (27) expression -> FLOAT .

    PLUS            reduce using rule 27 (expression -> FLOAT .)
    MINUS           reduce using rule 27 (expression -> FLOAT .)
    TIMES           reduce using rule 27 (expression -> FLOAT .)
    DIVIDE          reduce using rule 27 (expression -> FLOAT .)
    MOD             reduce using rule 27 (expression -> FLOAT .)
    EQEQ            reduce using rule 27 (expression -> FLOAT .)
    NOTEQ           reduce using rule 27 (expression -> FLOAT .)
    LT              reduce using rule 27 (expression -> FLOAT .)
    LTEQ            reduce using rule 27 (expression -> FLOAT .)
    GT              reduce using rule 27 (expression -> FLOAT .)
    GTEQ            reduce using rule 27 (expression -> FLOAT .)
    AND             reduce using rule 27 (expression -> FLOAT .)
    OR              reduce using rule 27 (expression -> FLOAT .)
    VAR             reduce using rule 27 (expression -> FLOAT .)
    VAL             reduce using rule 27 (expression -> FLOAT .)
    LPAREN          reduce using rule 27 (expression -> FLOAT .)
    NUMBER          reduce using rule 27 (expression -> FLOAT .)
    FLOAT           reduce using rule 27 (expression -> FLOAT .)
    DOUBLE          reduce using rule 27 (expression -> FLOAT .)
    BOOLEAN         reduce using rule 27 (expression -> FLOAT .)
    STRING          reduce using rule 27 (expression -> FLOAT .)
    ID              reduce using rule 27 (expression -> FLOAT .)
    PRINTLN         reduce using rule 27 (expression -> FLOAT .)
    PRINT           reduce using rule 27 (expression -> FLOAT .)
    READLINE        reduce using rule 27 (expression -> FLOAT .)
    IF              reduce using rule 27 (expression -> FLOAT .)
    WHEN            reduce using rule 27 (expression -> FLOAT .)
    WHILE           reduce using rule 27 (expression -> FLOAT .)
    FOR             reduce using rule 27 (expression -> FLOAT .)
    LISTOF          reduce using rule 27 (expression -> FLOAT .)
    MAPOF           reduce using rule 27 (expression -> FLOAT .)
    SETOF           reduce using rule 27 (expression -> FLOAT .)
    $end            reduce using rule 27 (expression -> FLOAT .)
    RPAREN          reduce using rule 27 (expression -> FLOAT .)
    LBRACE          reduce using rule 27 (expression -> FLOAT .)
    COMMA           reduce using rule 27 (expression -> FLOAT .)
    TO              reduce using rule 27 (expression -> FLOAT .)
    RBRACE          reduce using rule 27 (expression -> FLOAT .)
    ELSE            reduce using rule 27 (expression -> FLOAT .)
    ARROW           reduce using rule 27 (expression -> FLOAT .)


state 16

    (28) expression -> DOUBLE .

    PLUS            reduce using rule 28 (expression -> DOUBLE .)
    MINUS           reduce using rule 28 (expression -> DOUBLE .)
    TIMES           reduce using rule 28 (expression -> DOUBLE .)
    DIVIDE          reduce using rule 28 (expression -> DOUBLE .)
    MOD             reduce using rule 28 (expression -> DOUBLE .)
    EQEQ            reduce using rule 28 (expression -> DOUBLE .)
    NOTEQ           reduce using rule 28 (expression -> DOUBLE .)
    LT              reduce using rule 28 (expression -> DOUBLE .)
    LTEQ            reduce using rule 28 (expression -> DOUBLE .)
    GT              reduce using rule 28 (expression -> DOUBLE .)
    GTEQ            reduce using rule 28 (expression -> DOUBLE .)
    AND             reduce using rule 28 (expression -> DOUBLE .)
    OR              reduce using rule 28 (expression -> DOUBLE .)
    VAR             reduce using rule 28 (expression -> DOUBLE .)
    VAL             reduce using rule 28 (expression -> DOUBLE .)
    LPAREN          reduce using rule 28 (expression -> DOUBLE .)
    NUMBER          reduce using rule 28 (expression -> DOUBLE .)
    FLOAT           reduce using rule 28 (expression -> DOUBLE .)
    DOUBLE          reduce using rule 28 (expression -> DOUBLE .)
    BOOLEAN         reduce using rule 28 (expression -> DOUBLE .)
    STRING          reduce using rule 28 (expression -> DOUBLE .)
    ID              reduce using rule 28 (expression -> DOUBLE .)
    PRINTLN         reduce using rule 28 (expression -> DOUBLE .)
    PRINT           reduce using rule 28 (expression -> DOUBLE .)
    READLINE        reduce using rule 28 (expression -> DOUBLE .)
    IF              reduce using rule 28 (expression -> DOUBLE .)
    WHEN            reduce using rule 28 (expression -> DOUBLE .)
    WHILE           reduce using rule 28 (expression -> DOUBLE .)
    FOR             reduce using rule 28 (expression -> DOUBLE .)
    LISTOF          reduce using rule 28 (expression -> DOUBLE .)
    MAPOF           reduce using rule 28 (expression -> DOUBLE .)
    SETOF           reduce using rule 28 (expression -> DOUBLE .)
    $end            reduce using rule 28 (expression -> DOUBLE .)
    RPAREN          reduce using rule 28 (expression -> DOUBLE .)
    LBRACE          reduce using rule 28 (expression -> DOUBLE .)
    COMMA           reduce using rule 28 (expression -> DOUBLE .)
    TO              reduce using rule 28 (expression -> DOUBLE .)
    RBRACE          reduce using rule 28 (expression -> DOUBLE .)
    ELSE            reduce using rule 28 (expression -> DOUBLE .)
    ARROW           reduce using rule 28 (expression -> DOUBLE .)


state 17

    (29) expression -> BOOLEAN .

    PLUS            reduce using rule 29 (expression -> BOOLEAN .)
    MINUS           reduce using rule 29 (expression -> BOOLEAN .)
    TIMES           reduce using rule 29 (expression -> BOOLEAN .)
    DIVIDE          reduce using rule 29 (expression -> BOOLEAN .)
    MOD             reduce using rule 29 (expression -> BOOLEAN .)
    EQEQ            reduce using rule 29 (expression -> BOOLEAN .)
    NOTEQ           reduce using rule 29 (expression -> BOOLEAN .)
    LT              reduce using rule 29 (expression -> BOOLEAN .)
    LTEQ            reduce using rule 29 (expression -> BOOLEAN .)
    GT              reduce using rule 29 (expression -> BOOLEAN .)
    GTEQ            reduce using rule 29 (expression -> BOOLEAN .)
    AND             reduce using rule 29 (expression -> BOOLEAN .)
    OR              reduce using rule 29 (expression -> BOOLEAN .)
    VAR             reduce using rule 29 (expression -> BOOLEAN .)
    VAL             reduce using rule 29 (expression -> BOOLEAN .)
    LPAREN          reduce using rule 29 (expression -> BOOLEAN .)
    NUMBER          reduce using rule 29 (expression -> BOOLEAN .)
    FLOAT           reduce using rule 29 (expression -> BOOLEAN .)
    DOUBLE          reduce using rule 29 (expression -> BOOLEAN .)
    BOOLEAN         reduce using rule 29 (expression -> BOOLEAN .)
    STRING          reduce using rule 29 (expression -> BOOLEAN .)
    ID              reduce using rule 29 (expression -> BOOLEAN .)
    PRINTLN         reduce using rule 29 (expression -> BOOLEAN .)
    PRINT           reduce using rule 29 (expression -> BOOLEAN .)
    READLINE        reduce using rule 29 (expression -> BOOLEAN .)
    IF              reduce using rule 29 (expression -> BOOLEAN .)
    WHEN            reduce using rule 29 (expression -> BOOLEAN .)
    WHILE           reduce using rule 29 (expression -> BOOLEAN .)
    FOR             reduce using rule 29 (expression -> BOOLEAN .)
    LISTOF          reduce using rule 29 (expression -> BOOLEAN .)
    MAPOF           reduce using rule 29 (expression -> BOOLEAN .)
    SETOF           reduce using rule 29 (expression -> BOOLEAN .)
    $end            reduce using rule 29 (expression -> BOOLEAN .)
    RPAREN          reduce using rule 29 (expression -> BOOLEAN .)
    LBRACE          reduce using rule 29 (expression -> BOOLEAN .)
    COMMA           reduce using rule 29 (expression -> BOOLEAN .)
    TO              reduce using rule 29 (expression -> BOOLEAN .)
    RBRACE          reduce using rule 29 (expression -> BOOLEAN .)
    ELSE            reduce using rule 29 (expression -> BOOLEAN .)
    ARROW           reduce using rule 29 (expression -> BOOLEAN .)


state 18

    (30) expression -> STRING .

    PLUS            reduce using rule 30 (expression -> STRING .)
    MINUS           reduce using rule 30 (expression -> STRING .)
    TIMES           reduce using rule 30 (expression -> STRING .)
    DIVIDE          reduce using rule 30 (expression -> STRING .)
    MOD             reduce using rule 30 (expression -> STRING .)
    EQEQ            reduce using rule 30 (expression -> STRING .)
    NOTEQ           reduce using rule 30 (expression -> STRING .)
    LT              reduce using rule 30 (expression -> STRING .)
    LTEQ            reduce using rule 30 (expression -> STRING .)
    GT              reduce using rule 30 (expression -> STRING .)
    GTEQ            reduce using rule 30 (expression -> STRING .)
    AND             reduce using rule 30 (expression -> STRING .)
    OR              reduce using rule 30 (expression -> STRING .)
    VAR             reduce using rule 30 (expression -> STRING .)
    VAL             reduce using rule 30 (expression -> STRING .)
    LPAREN          reduce using rule 30 (expression -> STRING .)
    NUMBER          reduce using rule 30 (expression -> STRING .)
    FLOAT           reduce using rule 30 (expression -> STRING .)
    DOUBLE          reduce using rule 30 (expression -> STRING .)
    BOOLEAN         reduce using rule 30 (expression -> STRING .)
    STRING          reduce using rule 30 (expression -> STRING .)
    ID              reduce using rule 30 (expression -> STRING .)
    PRINTLN         reduce using rule 30 (expression -> STRING .)
    PRINT           reduce using rule 30 (expression -> STRING .)
    READLINE        reduce using rule 30 (expression -> STRING .)
    IF              reduce using rule 30 (expression -> STRING .)
    WHEN            reduce using rule 30 (expression -> STRING .)
    WHILE           reduce using rule 30 (expression -> STRING .)
    FOR             reduce using rule 30 (expression -> STRING .)
    LISTOF          reduce using rule 30 (expression -> STRING .)
    MAPOF           reduce using rule 30 (expression -> STRING .)
    SETOF           reduce using rule 30 (expression -> STRING .)
    $end            reduce using rule 30 (expression -> STRING .)
    RPAREN          reduce using rule 30 (expression -> STRING .)
    LBRACE          reduce using rule 30 (expression -> STRING .)
    COMMA           reduce using rule 30 (expression -> STRING .)
    TO              reduce using rule 30 (expression -> STRING .)
    RBRACE          reduce using rule 30 (expression -> STRING .)
    ELSE            reduce using rule 30 (expression -> STRING .)
    ARROW           reduce using rule 30 (expression -> STRING .)


state 19

    (32) print -> PRINTLN . LPAREN argument_list RPAREN

    LPAREN          shift and go to state 46


state 20

    (33) print -> PRINT . LPAREN argument_list RPAREN

    LPAREN          shift and go to state 47


state 21

    (38) input -> READLINE . LPAREN RPAREN

    LPAREN          shift and go to state 48


state 22

    (39) condition -> IF . expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (40) condition -> IF . expression LBRACE statement_list RBRACE
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11

    expression                     shift and go to state 49

state 23

    (43) condition -> WHEN . LPAREN expression RPAREN LBRACE when_cases RBRACE

    LPAREN          shift and go to state 50


state 24

    (41) loop -> WHILE . LPAREN expression RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 51


state 25

    (42) loop -> FOR . LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 52


state 26

    (50) data_structure -> LISTOF . LPAREN argument_list RPAREN

    LPAREN          shift and go to state 53


state 27

    (51) data_structure -> MAPOF . LPAREN map_argument_list RPAREN

    LPAREN          shift and go to state 54


state 28

    (52) data_structure -> SETOF . LPAREN argument_list RPAREN

    LPAREN          shift and go to state 55


state 29

    (2) statement_list -> statement_list statement .

    VAR             reduce using rule 2 (statement_list -> statement_list statement .)
    VAL             reduce using rule 2 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 2 (statement_list -> statement_list statement .)
    NUMBER          reduce using rule 2 (statement_list -> statement_list statement .)
    FLOAT           reduce using rule 2 (statement_list -> statement_list statement .)
    DOUBLE          reduce using rule 2 (statement_list -> statement_list statement .)
    BOOLEAN         reduce using rule 2 (statement_list -> statement_list statement .)
    STRING          reduce using rule 2 (statement_list -> statement_list statement .)
    ID              reduce using rule 2 (statement_list -> statement_list statement .)
    PRINTLN         reduce using rule 2 (statement_list -> statement_list statement .)
    PRINT           reduce using rule 2 (statement_list -> statement_list statement .)
    READLINE        reduce using rule 2 (statement_list -> statement_list statement .)
    IF              reduce using rule 2 (statement_list -> statement_list statement .)
    WHEN            reduce using rule 2 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 2 (statement_list -> statement_list statement .)
    FOR             reduce using rule 2 (statement_list -> statement_list statement .)
    LISTOF          reduce using rule 2 (statement_list -> statement_list statement .)
    MAPOF           reduce using rule 2 (statement_list -> statement_list statement .)
    SETOF           reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 2 (statement_list -> statement_list statement .)
    ELSE            reduce using rule 2 (statement_list -> statement_list statement .)


state 30

    (12) expression -> expression PLUS . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11

    expression                     shift and go to state 56

state 31

    (13) expression -> expression MINUS . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11

    expression                     shift and go to state 57

state 32

    (14) expression -> expression TIMES . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11

    expression                     shift and go to state 58

state 33

    (15) expression -> expression DIVIDE . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11

    expression                     shift and go to state 59

state 34

    (16) expression -> expression MOD . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11

    expression                     shift and go to state 60

state 35

    (17) expression -> expression EQEQ . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11

    expression                     shift and go to state 61

state 36

    (18) expression -> expression NOTEQ . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11

    expression                     shift and go to state 62

state 37

    (19) expression -> expression LT . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11

    expression                     shift and go to state 63

state 38

    (20) expression -> expression LTEQ . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11

    expression                     shift and go to state 64

state 39

    (21) expression -> expression GT . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11

    expression                     shift and go to state 65

state 40

    (22) expression -> expression GTEQ . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11

    expression                     shift and go to state 66

state 41

    (23) expression -> expression AND . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11

    expression                     shift and go to state 67

state 42

    (24) expression -> expression OR . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11

    expression                     shift and go to state 68

state 43

    (10) assignment -> VAR ID . ASSIGN expression

    ASSIGN          shift and go to state 69


state 44

    (11) assignment -> VAL ID . ASSIGN expression

    ASSIGN          shift and go to state 70


state 45

    (25) expression -> LPAREN expression . RPAREN
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . MOD expression
    (17) expression -> expression . EQEQ expression
    (18) expression -> expression . NOTEQ expression
    (19) expression -> expression . LT expression
    (20) expression -> expression . LTEQ expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GTEQ expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression

    RPAREN          shift and go to state 71
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MOD             shift and go to state 34
    EQEQ            shift and go to state 35
    NOTEQ           shift and go to state 36
    LT              shift and go to state 37
    LTEQ            shift and go to state 38
    GT              shift and go to state 39
    GTEQ            shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42


state 46

    (32) print -> PRINTLN LPAREN . argument_list RPAREN
    (34) argument_list -> . expression
    (35) argument_list -> . expression COMMA expression
    (36) argument_list -> . argument_list COMMA expression
    (37) argument_list -> . empty
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID
    (57) empty -> .

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11
    RPAREN          reduce using rule 57 (empty -> .)
    COMMA           reduce using rule 57 (empty -> .)

    argument_list                  shift and go to state 72
    expression                     shift and go to state 73
    empty                          shift and go to state 74

state 47

    (33) print -> PRINT LPAREN . argument_list RPAREN
    (34) argument_list -> . expression
    (35) argument_list -> . expression COMMA expression
    (36) argument_list -> . argument_list COMMA expression
    (37) argument_list -> . empty
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID
    (57) empty -> .

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11
    RPAREN          reduce using rule 57 (empty -> .)
    COMMA           reduce using rule 57 (empty -> .)

    argument_list                  shift and go to state 75
    expression                     shift and go to state 73
    empty                          shift and go to state 74

state 48

    (38) input -> READLINE LPAREN . RPAREN

    RPAREN          shift and go to state 76


state 49

    (39) condition -> IF expression . LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (40) condition -> IF expression . LBRACE statement_list RBRACE
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . MOD expression
    (17) expression -> expression . EQEQ expression
    (18) expression -> expression . NOTEQ expression
    (19) expression -> expression . LT expression
    (20) expression -> expression . LTEQ expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GTEQ expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression

    LBRACE          shift and go to state 77
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MOD             shift and go to state 34
    EQEQ            shift and go to state 35
    NOTEQ           shift and go to state 36
    LT              shift and go to state 37
    LTEQ            shift and go to state 38
    GT              shift and go to state 39
    GTEQ            shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42


state 50

    (43) condition -> WHEN LPAREN . expression RPAREN LBRACE when_cases RBRACE
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11

    expression                     shift and go to state 78

state 51

    (41) loop -> WHILE LPAREN . expression RPAREN LBRACE statement_list RBRACE
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11

    expression                     shift and go to state 79

state 52

    (42) loop -> FOR LPAREN . ID IN data_structure RPAREN LBRACE statement_list RBRACE

    ID              shift and go to state 80


state 53

    (50) data_structure -> LISTOF LPAREN . argument_list RPAREN
    (34) argument_list -> . expression
    (35) argument_list -> . expression COMMA expression
    (36) argument_list -> . argument_list COMMA expression
    (37) argument_list -> . empty
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID
    (57) empty -> .

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11
    RPAREN          reduce using rule 57 (empty -> .)
    COMMA           reduce using rule 57 (empty -> .)

    argument_list                  shift and go to state 81
    expression                     shift and go to state 73
    empty                          shift and go to state 74

state 54

    (51) data_structure -> MAPOF LPAREN . map_argument_list RPAREN
    (53) map_argument_list -> . map_element
    (54) map_argument_list -> . map_argument_list COMMA map_element
    (55) map_element -> . expression TO expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11

    map_argument_list              shift and go to state 82
    map_element                    shift and go to state 83
    expression                     shift and go to state 84

state 55

    (52) data_structure -> SETOF LPAREN . argument_list RPAREN
    (34) argument_list -> . expression
    (35) argument_list -> . expression COMMA expression
    (36) argument_list -> . argument_list COMMA expression
    (37) argument_list -> . empty
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID
    (57) empty -> .

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11
    RPAREN          reduce using rule 57 (empty -> .)
    COMMA           reduce using rule 57 (empty -> .)

    argument_list                  shift and go to state 85
    expression                     shift and go to state 73
    empty                          shift and go to state 74

state 56

    (12) expression -> expression PLUS expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . MOD expression
    (17) expression -> expression . EQEQ expression
    (18) expression -> expression . NOTEQ expression
    (19) expression -> expression . LT expression
    (20) expression -> expression . LTEQ expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GTEQ expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression

    PLUS            reduce using rule 12 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 12 (expression -> expression PLUS expression .)
    EQEQ            reduce using rule 12 (expression -> expression PLUS expression .)
    NOTEQ           reduce using rule 12 (expression -> expression PLUS expression .)
    LT              reduce using rule 12 (expression -> expression PLUS expression .)
    LTEQ            reduce using rule 12 (expression -> expression PLUS expression .)
    GT              reduce using rule 12 (expression -> expression PLUS expression .)
    GTEQ            reduce using rule 12 (expression -> expression PLUS expression .)
    AND             reduce using rule 12 (expression -> expression PLUS expression .)
    OR              reduce using rule 12 (expression -> expression PLUS expression .)
    VAR             reduce using rule 12 (expression -> expression PLUS expression .)
    VAL             reduce using rule 12 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 12 (expression -> expression PLUS expression .)
    NUMBER          reduce using rule 12 (expression -> expression PLUS expression .)
    FLOAT           reduce using rule 12 (expression -> expression PLUS expression .)
    DOUBLE          reduce using rule 12 (expression -> expression PLUS expression .)
    BOOLEAN         reduce using rule 12 (expression -> expression PLUS expression .)
    STRING          reduce using rule 12 (expression -> expression PLUS expression .)
    ID              reduce using rule 12 (expression -> expression PLUS expression .)
    PRINTLN         reduce using rule 12 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 12 (expression -> expression PLUS expression .)
    READLINE        reduce using rule 12 (expression -> expression PLUS expression .)
    IF              reduce using rule 12 (expression -> expression PLUS expression .)
    WHEN            reduce using rule 12 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 12 (expression -> expression PLUS expression .)
    FOR             reduce using rule 12 (expression -> expression PLUS expression .)
    LISTOF          reduce using rule 12 (expression -> expression PLUS expression .)
    MAPOF           reduce using rule 12 (expression -> expression PLUS expression .)
    SETOF           reduce using rule 12 (expression -> expression PLUS expression .)
    $end            reduce using rule 12 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 12 (expression -> expression PLUS expression .)
    LBRACE          reduce using rule 12 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 12 (expression -> expression PLUS expression .)
    TO              reduce using rule 12 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 12 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 12 (expression -> expression PLUS expression .)
    ARROW           reduce using rule 12 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MOD             shift and go to state 34

  ! TIMES           [ reduce using rule 12 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 12 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 12 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! EQEQ            [ shift and go to state 35 ]
  ! NOTEQ           [ shift and go to state 36 ]
  ! LT              [ shift and go to state 37 ]
  ! LTEQ            [ shift and go to state 38 ]
  ! GT              [ shift and go to state 39 ]
  ! GTEQ            [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 57

    (13) expression -> expression MINUS expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . MOD expression
    (17) expression -> expression . EQEQ expression
    (18) expression -> expression . NOTEQ expression
    (19) expression -> expression . LT expression
    (20) expression -> expression . LTEQ expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GTEQ expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression

    PLUS            reduce using rule 13 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 13 (expression -> expression MINUS expression .)
    EQEQ            reduce using rule 13 (expression -> expression MINUS expression .)
    NOTEQ           reduce using rule 13 (expression -> expression MINUS expression .)
    LT              reduce using rule 13 (expression -> expression MINUS expression .)
    LTEQ            reduce using rule 13 (expression -> expression MINUS expression .)
    GT              reduce using rule 13 (expression -> expression MINUS expression .)
    GTEQ            reduce using rule 13 (expression -> expression MINUS expression .)
    AND             reduce using rule 13 (expression -> expression MINUS expression .)
    OR              reduce using rule 13 (expression -> expression MINUS expression .)
    VAR             reduce using rule 13 (expression -> expression MINUS expression .)
    VAL             reduce using rule 13 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 13 (expression -> expression MINUS expression .)
    NUMBER          reduce using rule 13 (expression -> expression MINUS expression .)
    FLOAT           reduce using rule 13 (expression -> expression MINUS expression .)
    DOUBLE          reduce using rule 13 (expression -> expression MINUS expression .)
    BOOLEAN         reduce using rule 13 (expression -> expression MINUS expression .)
    STRING          reduce using rule 13 (expression -> expression MINUS expression .)
    ID              reduce using rule 13 (expression -> expression MINUS expression .)
    PRINTLN         reduce using rule 13 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 13 (expression -> expression MINUS expression .)
    READLINE        reduce using rule 13 (expression -> expression MINUS expression .)
    IF              reduce using rule 13 (expression -> expression MINUS expression .)
    WHEN            reduce using rule 13 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 13 (expression -> expression MINUS expression .)
    FOR             reduce using rule 13 (expression -> expression MINUS expression .)
    LISTOF          reduce using rule 13 (expression -> expression MINUS expression .)
    MAPOF           reduce using rule 13 (expression -> expression MINUS expression .)
    SETOF           reduce using rule 13 (expression -> expression MINUS expression .)
    $end            reduce using rule 13 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 13 (expression -> expression MINUS expression .)
    LBRACE          reduce using rule 13 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 13 (expression -> expression MINUS expression .)
    TO              reduce using rule 13 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 13 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 13 (expression -> expression MINUS expression .)
    ARROW           reduce using rule 13 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MOD             shift and go to state 34

  ! TIMES           [ reduce using rule 13 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 13 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 13 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! EQEQ            [ shift and go to state 35 ]
  ! NOTEQ           [ shift and go to state 36 ]
  ! LT              [ shift and go to state 37 ]
  ! LTEQ            [ shift and go to state 38 ]
  ! GT              [ shift and go to state 39 ]
  ! GTEQ            [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 58

    (14) expression -> expression TIMES expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . MOD expression
    (17) expression -> expression . EQEQ expression
    (18) expression -> expression . NOTEQ expression
    (19) expression -> expression . LT expression
    (20) expression -> expression . LTEQ expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GTEQ expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression

    PLUS            reduce using rule 14 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 14 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 14 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 14 (expression -> expression TIMES expression .)
    MOD             reduce using rule 14 (expression -> expression TIMES expression .)
    EQEQ            reduce using rule 14 (expression -> expression TIMES expression .)
    NOTEQ           reduce using rule 14 (expression -> expression TIMES expression .)
    LT              reduce using rule 14 (expression -> expression TIMES expression .)
    LTEQ            reduce using rule 14 (expression -> expression TIMES expression .)
    GT              reduce using rule 14 (expression -> expression TIMES expression .)
    GTEQ            reduce using rule 14 (expression -> expression TIMES expression .)
    AND             reduce using rule 14 (expression -> expression TIMES expression .)
    OR              reduce using rule 14 (expression -> expression TIMES expression .)
    VAR             reduce using rule 14 (expression -> expression TIMES expression .)
    VAL             reduce using rule 14 (expression -> expression TIMES expression .)
    LPAREN          reduce using rule 14 (expression -> expression TIMES expression .)
    NUMBER          reduce using rule 14 (expression -> expression TIMES expression .)
    FLOAT           reduce using rule 14 (expression -> expression TIMES expression .)
    DOUBLE          reduce using rule 14 (expression -> expression TIMES expression .)
    BOOLEAN         reduce using rule 14 (expression -> expression TIMES expression .)
    STRING          reduce using rule 14 (expression -> expression TIMES expression .)
    ID              reduce using rule 14 (expression -> expression TIMES expression .)
    PRINTLN         reduce using rule 14 (expression -> expression TIMES expression .)
    PRINT           reduce using rule 14 (expression -> expression TIMES expression .)
    READLINE        reduce using rule 14 (expression -> expression TIMES expression .)
    IF              reduce using rule 14 (expression -> expression TIMES expression .)
    WHEN            reduce using rule 14 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 14 (expression -> expression TIMES expression .)
    FOR             reduce using rule 14 (expression -> expression TIMES expression .)
    LISTOF          reduce using rule 14 (expression -> expression TIMES expression .)
    MAPOF           reduce using rule 14 (expression -> expression TIMES expression .)
    SETOF           reduce using rule 14 (expression -> expression TIMES expression .)
    $end            reduce using rule 14 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 14 (expression -> expression TIMES expression .)
    LBRACE          reduce using rule 14 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 14 (expression -> expression TIMES expression .)
    TO              reduce using rule 14 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 14 (expression -> expression TIMES expression .)
    ELSE            reduce using rule 14 (expression -> expression TIMES expression .)
    ARROW           reduce using rule 14 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! TIMES           [ shift and go to state 32 ]
  ! DIVIDE          [ shift and go to state 33 ]
  ! MOD             [ shift and go to state 34 ]
  ! EQEQ            [ shift and go to state 35 ]
  ! NOTEQ           [ shift and go to state 36 ]
  ! LT              [ shift and go to state 37 ]
  ! LTEQ            [ shift and go to state 38 ]
  ! GT              [ shift and go to state 39 ]
  ! GTEQ            [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 59

    (15) expression -> expression DIVIDE expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . MOD expression
    (17) expression -> expression . EQEQ expression
    (18) expression -> expression . NOTEQ expression
    (19) expression -> expression . LT expression
    (20) expression -> expression . LTEQ expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GTEQ expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression

    PLUS            reduce using rule 15 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 15 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 15 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 15 (expression -> expression DIVIDE expression .)
    MOD             reduce using rule 15 (expression -> expression DIVIDE expression .)
    EQEQ            reduce using rule 15 (expression -> expression DIVIDE expression .)
    NOTEQ           reduce using rule 15 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 15 (expression -> expression DIVIDE expression .)
    LTEQ            reduce using rule 15 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 15 (expression -> expression DIVIDE expression .)
    GTEQ            reduce using rule 15 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 15 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 15 (expression -> expression DIVIDE expression .)
    VAR             reduce using rule 15 (expression -> expression DIVIDE expression .)
    VAL             reduce using rule 15 (expression -> expression DIVIDE expression .)
    LPAREN          reduce using rule 15 (expression -> expression DIVIDE expression .)
    NUMBER          reduce using rule 15 (expression -> expression DIVIDE expression .)
    FLOAT           reduce using rule 15 (expression -> expression DIVIDE expression .)
    DOUBLE          reduce using rule 15 (expression -> expression DIVIDE expression .)
    BOOLEAN         reduce using rule 15 (expression -> expression DIVIDE expression .)
    STRING          reduce using rule 15 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 15 (expression -> expression DIVIDE expression .)
    PRINTLN         reduce using rule 15 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 15 (expression -> expression DIVIDE expression .)
    READLINE        reduce using rule 15 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 15 (expression -> expression DIVIDE expression .)
    WHEN            reduce using rule 15 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 15 (expression -> expression DIVIDE expression .)
    FOR             reduce using rule 15 (expression -> expression DIVIDE expression .)
    LISTOF          reduce using rule 15 (expression -> expression DIVIDE expression .)
    MAPOF           reduce using rule 15 (expression -> expression DIVIDE expression .)
    SETOF           reduce using rule 15 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 15 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 15 (expression -> expression DIVIDE expression .)
    LBRACE          reduce using rule 15 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 15 (expression -> expression DIVIDE expression .)
    TO              reduce using rule 15 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 15 (expression -> expression DIVIDE expression .)
    ELSE            reduce using rule 15 (expression -> expression DIVIDE expression .)
    ARROW           reduce using rule 15 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! TIMES           [ shift and go to state 32 ]
  ! DIVIDE          [ shift and go to state 33 ]
  ! MOD             [ shift and go to state 34 ]
  ! EQEQ            [ shift and go to state 35 ]
  ! NOTEQ           [ shift and go to state 36 ]
  ! LT              [ shift and go to state 37 ]
  ! LTEQ            [ shift and go to state 38 ]
  ! GT              [ shift and go to state 39 ]
  ! GTEQ            [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 60

    (16) expression -> expression MOD expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . MOD expression
    (17) expression -> expression . EQEQ expression
    (18) expression -> expression . NOTEQ expression
    (19) expression -> expression . LT expression
    (20) expression -> expression . LTEQ expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GTEQ expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression

    PLUS            reduce using rule 16 (expression -> expression MOD expression .)
    MINUS           reduce using rule 16 (expression -> expression MOD expression .)
    TIMES           reduce using rule 16 (expression -> expression MOD expression .)
    DIVIDE          reduce using rule 16 (expression -> expression MOD expression .)
    MOD             reduce using rule 16 (expression -> expression MOD expression .)
    EQEQ            reduce using rule 16 (expression -> expression MOD expression .)
    NOTEQ           reduce using rule 16 (expression -> expression MOD expression .)
    LT              reduce using rule 16 (expression -> expression MOD expression .)
    LTEQ            reduce using rule 16 (expression -> expression MOD expression .)
    GT              reduce using rule 16 (expression -> expression MOD expression .)
    GTEQ            reduce using rule 16 (expression -> expression MOD expression .)
    AND             reduce using rule 16 (expression -> expression MOD expression .)
    OR              reduce using rule 16 (expression -> expression MOD expression .)
    VAR             reduce using rule 16 (expression -> expression MOD expression .)
    VAL             reduce using rule 16 (expression -> expression MOD expression .)
    LPAREN          reduce using rule 16 (expression -> expression MOD expression .)
    NUMBER          reduce using rule 16 (expression -> expression MOD expression .)
    FLOAT           reduce using rule 16 (expression -> expression MOD expression .)
    DOUBLE          reduce using rule 16 (expression -> expression MOD expression .)
    BOOLEAN         reduce using rule 16 (expression -> expression MOD expression .)
    STRING          reduce using rule 16 (expression -> expression MOD expression .)
    ID              reduce using rule 16 (expression -> expression MOD expression .)
    PRINTLN         reduce using rule 16 (expression -> expression MOD expression .)
    PRINT           reduce using rule 16 (expression -> expression MOD expression .)
    READLINE        reduce using rule 16 (expression -> expression MOD expression .)
    IF              reduce using rule 16 (expression -> expression MOD expression .)
    WHEN            reduce using rule 16 (expression -> expression MOD expression .)
    WHILE           reduce using rule 16 (expression -> expression MOD expression .)
    FOR             reduce using rule 16 (expression -> expression MOD expression .)
    LISTOF          reduce using rule 16 (expression -> expression MOD expression .)
    MAPOF           reduce using rule 16 (expression -> expression MOD expression .)
    SETOF           reduce using rule 16 (expression -> expression MOD expression .)
    $end            reduce using rule 16 (expression -> expression MOD expression .)
    RPAREN          reduce using rule 16 (expression -> expression MOD expression .)
    LBRACE          reduce using rule 16 (expression -> expression MOD expression .)
    COMMA           reduce using rule 16 (expression -> expression MOD expression .)
    TO              reduce using rule 16 (expression -> expression MOD expression .)
    RBRACE          reduce using rule 16 (expression -> expression MOD expression .)
    ELSE            reduce using rule 16 (expression -> expression MOD expression .)
    ARROW           reduce using rule 16 (expression -> expression MOD expression .)

  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! TIMES           [ shift and go to state 32 ]
  ! DIVIDE          [ shift and go to state 33 ]
  ! MOD             [ shift and go to state 34 ]
  ! EQEQ            [ shift and go to state 35 ]
  ! NOTEQ           [ shift and go to state 36 ]
  ! LT              [ shift and go to state 37 ]
  ! LTEQ            [ shift and go to state 38 ]
  ! GT              [ shift and go to state 39 ]
  ! GTEQ            [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 61

    (17) expression -> expression EQEQ expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . MOD expression
    (17) expression -> expression . EQEQ expression
    (18) expression -> expression . NOTEQ expression
    (19) expression -> expression . LT expression
    (20) expression -> expression . LTEQ expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GTEQ expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression

    EQEQ            reduce using rule 17 (expression -> expression EQEQ expression .)
    NOTEQ           reduce using rule 17 (expression -> expression EQEQ expression .)
    LT              reduce using rule 17 (expression -> expression EQEQ expression .)
    LTEQ            reduce using rule 17 (expression -> expression EQEQ expression .)
    GT              reduce using rule 17 (expression -> expression EQEQ expression .)
    GTEQ            reduce using rule 17 (expression -> expression EQEQ expression .)
    AND             reduce using rule 17 (expression -> expression EQEQ expression .)
    OR              reduce using rule 17 (expression -> expression EQEQ expression .)
    VAR             reduce using rule 17 (expression -> expression EQEQ expression .)
    VAL             reduce using rule 17 (expression -> expression EQEQ expression .)
    LPAREN          reduce using rule 17 (expression -> expression EQEQ expression .)
    NUMBER          reduce using rule 17 (expression -> expression EQEQ expression .)
    FLOAT           reduce using rule 17 (expression -> expression EQEQ expression .)
    DOUBLE          reduce using rule 17 (expression -> expression EQEQ expression .)
    BOOLEAN         reduce using rule 17 (expression -> expression EQEQ expression .)
    STRING          reduce using rule 17 (expression -> expression EQEQ expression .)
    ID              reduce using rule 17 (expression -> expression EQEQ expression .)
    PRINTLN         reduce using rule 17 (expression -> expression EQEQ expression .)
    PRINT           reduce using rule 17 (expression -> expression EQEQ expression .)
    READLINE        reduce using rule 17 (expression -> expression EQEQ expression .)
    IF              reduce using rule 17 (expression -> expression EQEQ expression .)
    WHEN            reduce using rule 17 (expression -> expression EQEQ expression .)
    WHILE           reduce using rule 17 (expression -> expression EQEQ expression .)
    FOR             reduce using rule 17 (expression -> expression EQEQ expression .)
    LISTOF          reduce using rule 17 (expression -> expression EQEQ expression .)
    MAPOF           reduce using rule 17 (expression -> expression EQEQ expression .)
    SETOF           reduce using rule 17 (expression -> expression EQEQ expression .)
    $end            reduce using rule 17 (expression -> expression EQEQ expression .)
    RPAREN          reduce using rule 17 (expression -> expression EQEQ expression .)
    LBRACE          reduce using rule 17 (expression -> expression EQEQ expression .)
    COMMA           reduce using rule 17 (expression -> expression EQEQ expression .)
    TO              reduce using rule 17 (expression -> expression EQEQ expression .)
    RBRACE          reduce using rule 17 (expression -> expression EQEQ expression .)
    ELSE            reduce using rule 17 (expression -> expression EQEQ expression .)
    ARROW           reduce using rule 17 (expression -> expression EQEQ expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MOD             shift and go to state 34

  ! PLUS            [ reduce using rule 17 (expression -> expression EQEQ expression .) ]
  ! MINUS           [ reduce using rule 17 (expression -> expression EQEQ expression .) ]
  ! TIMES           [ reduce using rule 17 (expression -> expression EQEQ expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression EQEQ expression .) ]
  ! MOD             [ reduce using rule 17 (expression -> expression EQEQ expression .) ]
  ! EQEQ            [ shift and go to state 35 ]
  ! NOTEQ           [ shift and go to state 36 ]
  ! LT              [ shift and go to state 37 ]
  ! LTEQ            [ shift and go to state 38 ]
  ! GT              [ shift and go to state 39 ]
  ! GTEQ            [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 62

    (18) expression -> expression NOTEQ expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . MOD expression
    (17) expression -> expression . EQEQ expression
    (18) expression -> expression . NOTEQ expression
    (19) expression -> expression . LT expression
    (20) expression -> expression . LTEQ expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GTEQ expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression

    EQEQ            reduce using rule 18 (expression -> expression NOTEQ expression .)
    NOTEQ           reduce using rule 18 (expression -> expression NOTEQ expression .)
    LT              reduce using rule 18 (expression -> expression NOTEQ expression .)
    LTEQ            reduce using rule 18 (expression -> expression NOTEQ expression .)
    GT              reduce using rule 18 (expression -> expression NOTEQ expression .)
    GTEQ            reduce using rule 18 (expression -> expression NOTEQ expression .)
    AND             reduce using rule 18 (expression -> expression NOTEQ expression .)
    OR              reduce using rule 18 (expression -> expression NOTEQ expression .)
    VAR             reduce using rule 18 (expression -> expression NOTEQ expression .)
    VAL             reduce using rule 18 (expression -> expression NOTEQ expression .)
    LPAREN          reduce using rule 18 (expression -> expression NOTEQ expression .)
    NUMBER          reduce using rule 18 (expression -> expression NOTEQ expression .)
    FLOAT           reduce using rule 18 (expression -> expression NOTEQ expression .)
    DOUBLE          reduce using rule 18 (expression -> expression NOTEQ expression .)
    BOOLEAN         reduce using rule 18 (expression -> expression NOTEQ expression .)
    STRING          reduce using rule 18 (expression -> expression NOTEQ expression .)
    ID              reduce using rule 18 (expression -> expression NOTEQ expression .)
    PRINTLN         reduce using rule 18 (expression -> expression NOTEQ expression .)
    PRINT           reduce using rule 18 (expression -> expression NOTEQ expression .)
    READLINE        reduce using rule 18 (expression -> expression NOTEQ expression .)
    IF              reduce using rule 18 (expression -> expression NOTEQ expression .)
    WHEN            reduce using rule 18 (expression -> expression NOTEQ expression .)
    WHILE           reduce using rule 18 (expression -> expression NOTEQ expression .)
    FOR             reduce using rule 18 (expression -> expression NOTEQ expression .)
    LISTOF          reduce using rule 18 (expression -> expression NOTEQ expression .)
    MAPOF           reduce using rule 18 (expression -> expression NOTEQ expression .)
    SETOF           reduce using rule 18 (expression -> expression NOTEQ expression .)
    $end            reduce using rule 18 (expression -> expression NOTEQ expression .)
    RPAREN          reduce using rule 18 (expression -> expression NOTEQ expression .)
    LBRACE          reduce using rule 18 (expression -> expression NOTEQ expression .)
    COMMA           reduce using rule 18 (expression -> expression NOTEQ expression .)
    TO              reduce using rule 18 (expression -> expression NOTEQ expression .)
    RBRACE          reduce using rule 18 (expression -> expression NOTEQ expression .)
    ELSE            reduce using rule 18 (expression -> expression NOTEQ expression .)
    ARROW           reduce using rule 18 (expression -> expression NOTEQ expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MOD             shift and go to state 34

  ! PLUS            [ reduce using rule 18 (expression -> expression NOTEQ expression .) ]
  ! MINUS           [ reduce using rule 18 (expression -> expression NOTEQ expression .) ]
  ! TIMES           [ reduce using rule 18 (expression -> expression NOTEQ expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression NOTEQ expression .) ]
  ! MOD             [ reduce using rule 18 (expression -> expression NOTEQ expression .) ]
  ! EQEQ            [ shift and go to state 35 ]
  ! NOTEQ           [ shift and go to state 36 ]
  ! LT              [ shift and go to state 37 ]
  ! LTEQ            [ shift and go to state 38 ]
  ! GT              [ shift and go to state 39 ]
  ! GTEQ            [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 63

    (19) expression -> expression LT expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . MOD expression
    (17) expression -> expression . EQEQ expression
    (18) expression -> expression . NOTEQ expression
    (19) expression -> expression . LT expression
    (20) expression -> expression . LTEQ expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GTEQ expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression

    EQEQ            reduce using rule 19 (expression -> expression LT expression .)
    NOTEQ           reduce using rule 19 (expression -> expression LT expression .)
    LT              reduce using rule 19 (expression -> expression LT expression .)
    LTEQ            reduce using rule 19 (expression -> expression LT expression .)
    GT              reduce using rule 19 (expression -> expression LT expression .)
    GTEQ            reduce using rule 19 (expression -> expression LT expression .)
    AND             reduce using rule 19 (expression -> expression LT expression .)
    OR              reduce using rule 19 (expression -> expression LT expression .)
    VAR             reduce using rule 19 (expression -> expression LT expression .)
    VAL             reduce using rule 19 (expression -> expression LT expression .)
    LPAREN          reduce using rule 19 (expression -> expression LT expression .)
    NUMBER          reduce using rule 19 (expression -> expression LT expression .)
    FLOAT           reduce using rule 19 (expression -> expression LT expression .)
    DOUBLE          reduce using rule 19 (expression -> expression LT expression .)
    BOOLEAN         reduce using rule 19 (expression -> expression LT expression .)
    STRING          reduce using rule 19 (expression -> expression LT expression .)
    ID              reduce using rule 19 (expression -> expression LT expression .)
    PRINTLN         reduce using rule 19 (expression -> expression LT expression .)
    PRINT           reduce using rule 19 (expression -> expression LT expression .)
    READLINE        reduce using rule 19 (expression -> expression LT expression .)
    IF              reduce using rule 19 (expression -> expression LT expression .)
    WHEN            reduce using rule 19 (expression -> expression LT expression .)
    WHILE           reduce using rule 19 (expression -> expression LT expression .)
    FOR             reduce using rule 19 (expression -> expression LT expression .)
    LISTOF          reduce using rule 19 (expression -> expression LT expression .)
    MAPOF           reduce using rule 19 (expression -> expression LT expression .)
    SETOF           reduce using rule 19 (expression -> expression LT expression .)
    $end            reduce using rule 19 (expression -> expression LT expression .)
    RPAREN          reduce using rule 19 (expression -> expression LT expression .)
    LBRACE          reduce using rule 19 (expression -> expression LT expression .)
    COMMA           reduce using rule 19 (expression -> expression LT expression .)
    TO              reduce using rule 19 (expression -> expression LT expression .)
    RBRACE          reduce using rule 19 (expression -> expression LT expression .)
    ELSE            reduce using rule 19 (expression -> expression LT expression .)
    ARROW           reduce using rule 19 (expression -> expression LT expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MOD             shift and go to state 34

  ! PLUS            [ reduce using rule 19 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 19 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 19 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression -> expression LT expression .) ]
  ! MOD             [ reduce using rule 19 (expression -> expression LT expression .) ]
  ! EQEQ            [ shift and go to state 35 ]
  ! NOTEQ           [ shift and go to state 36 ]
  ! LT              [ shift and go to state 37 ]
  ! LTEQ            [ shift and go to state 38 ]
  ! GT              [ shift and go to state 39 ]
  ! GTEQ            [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 64

    (20) expression -> expression LTEQ expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . MOD expression
    (17) expression -> expression . EQEQ expression
    (18) expression -> expression . NOTEQ expression
    (19) expression -> expression . LT expression
    (20) expression -> expression . LTEQ expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GTEQ expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression

    EQEQ            reduce using rule 20 (expression -> expression LTEQ expression .)
    NOTEQ           reduce using rule 20 (expression -> expression LTEQ expression .)
    LT              reduce using rule 20 (expression -> expression LTEQ expression .)
    LTEQ            reduce using rule 20 (expression -> expression LTEQ expression .)
    GT              reduce using rule 20 (expression -> expression LTEQ expression .)
    GTEQ            reduce using rule 20 (expression -> expression LTEQ expression .)
    AND             reduce using rule 20 (expression -> expression LTEQ expression .)
    OR              reduce using rule 20 (expression -> expression LTEQ expression .)
    VAR             reduce using rule 20 (expression -> expression LTEQ expression .)
    VAL             reduce using rule 20 (expression -> expression LTEQ expression .)
    LPAREN          reduce using rule 20 (expression -> expression LTEQ expression .)
    NUMBER          reduce using rule 20 (expression -> expression LTEQ expression .)
    FLOAT           reduce using rule 20 (expression -> expression LTEQ expression .)
    DOUBLE          reduce using rule 20 (expression -> expression LTEQ expression .)
    BOOLEAN         reduce using rule 20 (expression -> expression LTEQ expression .)
    STRING          reduce using rule 20 (expression -> expression LTEQ expression .)
    ID              reduce using rule 20 (expression -> expression LTEQ expression .)
    PRINTLN         reduce using rule 20 (expression -> expression LTEQ expression .)
    PRINT           reduce using rule 20 (expression -> expression LTEQ expression .)
    READLINE        reduce using rule 20 (expression -> expression LTEQ expression .)
    IF              reduce using rule 20 (expression -> expression LTEQ expression .)
    WHEN            reduce using rule 20 (expression -> expression LTEQ expression .)
    WHILE           reduce using rule 20 (expression -> expression LTEQ expression .)
    FOR             reduce using rule 20 (expression -> expression LTEQ expression .)
    LISTOF          reduce using rule 20 (expression -> expression LTEQ expression .)
    MAPOF           reduce using rule 20 (expression -> expression LTEQ expression .)
    SETOF           reduce using rule 20 (expression -> expression LTEQ expression .)
    $end            reduce using rule 20 (expression -> expression LTEQ expression .)
    RPAREN          reduce using rule 20 (expression -> expression LTEQ expression .)
    LBRACE          reduce using rule 20 (expression -> expression LTEQ expression .)
    COMMA           reduce using rule 20 (expression -> expression LTEQ expression .)
    TO              reduce using rule 20 (expression -> expression LTEQ expression .)
    RBRACE          reduce using rule 20 (expression -> expression LTEQ expression .)
    ELSE            reduce using rule 20 (expression -> expression LTEQ expression .)
    ARROW           reduce using rule 20 (expression -> expression LTEQ expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MOD             shift and go to state 34

  ! PLUS            [ reduce using rule 20 (expression -> expression LTEQ expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> expression LTEQ expression .) ]
  ! TIMES           [ reduce using rule 20 (expression -> expression LTEQ expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression LTEQ expression .) ]
  ! MOD             [ reduce using rule 20 (expression -> expression LTEQ expression .) ]
  ! EQEQ            [ shift and go to state 35 ]
  ! NOTEQ           [ shift and go to state 36 ]
  ! LT              [ shift and go to state 37 ]
  ! LTEQ            [ shift and go to state 38 ]
  ! GT              [ shift and go to state 39 ]
  ! GTEQ            [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 65

    (21) expression -> expression GT expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . MOD expression
    (17) expression -> expression . EQEQ expression
    (18) expression -> expression . NOTEQ expression
    (19) expression -> expression . LT expression
    (20) expression -> expression . LTEQ expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GTEQ expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression

    EQEQ            reduce using rule 21 (expression -> expression GT expression .)
    NOTEQ           reduce using rule 21 (expression -> expression GT expression .)
    LT              reduce using rule 21 (expression -> expression GT expression .)
    LTEQ            reduce using rule 21 (expression -> expression GT expression .)
    GT              reduce using rule 21 (expression -> expression GT expression .)
    GTEQ            reduce using rule 21 (expression -> expression GT expression .)
    AND             reduce using rule 21 (expression -> expression GT expression .)
    OR              reduce using rule 21 (expression -> expression GT expression .)
    VAR             reduce using rule 21 (expression -> expression GT expression .)
    VAL             reduce using rule 21 (expression -> expression GT expression .)
    LPAREN          reduce using rule 21 (expression -> expression GT expression .)
    NUMBER          reduce using rule 21 (expression -> expression GT expression .)
    FLOAT           reduce using rule 21 (expression -> expression GT expression .)
    DOUBLE          reduce using rule 21 (expression -> expression GT expression .)
    BOOLEAN         reduce using rule 21 (expression -> expression GT expression .)
    STRING          reduce using rule 21 (expression -> expression GT expression .)
    ID              reduce using rule 21 (expression -> expression GT expression .)
    PRINTLN         reduce using rule 21 (expression -> expression GT expression .)
    PRINT           reduce using rule 21 (expression -> expression GT expression .)
    READLINE        reduce using rule 21 (expression -> expression GT expression .)
    IF              reduce using rule 21 (expression -> expression GT expression .)
    WHEN            reduce using rule 21 (expression -> expression GT expression .)
    WHILE           reduce using rule 21 (expression -> expression GT expression .)
    FOR             reduce using rule 21 (expression -> expression GT expression .)
    LISTOF          reduce using rule 21 (expression -> expression GT expression .)
    MAPOF           reduce using rule 21 (expression -> expression GT expression .)
    SETOF           reduce using rule 21 (expression -> expression GT expression .)
    $end            reduce using rule 21 (expression -> expression GT expression .)
    RPAREN          reduce using rule 21 (expression -> expression GT expression .)
    LBRACE          reduce using rule 21 (expression -> expression GT expression .)
    COMMA           reduce using rule 21 (expression -> expression GT expression .)
    TO              reduce using rule 21 (expression -> expression GT expression .)
    RBRACE          reduce using rule 21 (expression -> expression GT expression .)
    ELSE            reduce using rule 21 (expression -> expression GT expression .)
    ARROW           reduce using rule 21 (expression -> expression GT expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MOD             shift and go to state 34

  ! PLUS            [ reduce using rule 21 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 21 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression GT expression .) ]
  ! MOD             [ reduce using rule 21 (expression -> expression GT expression .) ]
  ! EQEQ            [ shift and go to state 35 ]
  ! NOTEQ           [ shift and go to state 36 ]
  ! LT              [ shift and go to state 37 ]
  ! LTEQ            [ shift and go to state 38 ]
  ! GT              [ shift and go to state 39 ]
  ! GTEQ            [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 66

    (22) expression -> expression GTEQ expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . MOD expression
    (17) expression -> expression . EQEQ expression
    (18) expression -> expression . NOTEQ expression
    (19) expression -> expression . LT expression
    (20) expression -> expression . LTEQ expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GTEQ expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression

    EQEQ            reduce using rule 22 (expression -> expression GTEQ expression .)
    NOTEQ           reduce using rule 22 (expression -> expression GTEQ expression .)
    LT              reduce using rule 22 (expression -> expression GTEQ expression .)
    LTEQ            reduce using rule 22 (expression -> expression GTEQ expression .)
    GT              reduce using rule 22 (expression -> expression GTEQ expression .)
    GTEQ            reduce using rule 22 (expression -> expression GTEQ expression .)
    AND             reduce using rule 22 (expression -> expression GTEQ expression .)
    OR              reduce using rule 22 (expression -> expression GTEQ expression .)
    VAR             reduce using rule 22 (expression -> expression GTEQ expression .)
    VAL             reduce using rule 22 (expression -> expression GTEQ expression .)
    LPAREN          reduce using rule 22 (expression -> expression GTEQ expression .)
    NUMBER          reduce using rule 22 (expression -> expression GTEQ expression .)
    FLOAT           reduce using rule 22 (expression -> expression GTEQ expression .)
    DOUBLE          reduce using rule 22 (expression -> expression GTEQ expression .)
    BOOLEAN         reduce using rule 22 (expression -> expression GTEQ expression .)
    STRING          reduce using rule 22 (expression -> expression GTEQ expression .)
    ID              reduce using rule 22 (expression -> expression GTEQ expression .)
    PRINTLN         reduce using rule 22 (expression -> expression GTEQ expression .)
    PRINT           reduce using rule 22 (expression -> expression GTEQ expression .)
    READLINE        reduce using rule 22 (expression -> expression GTEQ expression .)
    IF              reduce using rule 22 (expression -> expression GTEQ expression .)
    WHEN            reduce using rule 22 (expression -> expression GTEQ expression .)
    WHILE           reduce using rule 22 (expression -> expression GTEQ expression .)
    FOR             reduce using rule 22 (expression -> expression GTEQ expression .)
    LISTOF          reduce using rule 22 (expression -> expression GTEQ expression .)
    MAPOF           reduce using rule 22 (expression -> expression GTEQ expression .)
    SETOF           reduce using rule 22 (expression -> expression GTEQ expression .)
    $end            reduce using rule 22 (expression -> expression GTEQ expression .)
    RPAREN          reduce using rule 22 (expression -> expression GTEQ expression .)
    LBRACE          reduce using rule 22 (expression -> expression GTEQ expression .)
    COMMA           reduce using rule 22 (expression -> expression GTEQ expression .)
    TO              reduce using rule 22 (expression -> expression GTEQ expression .)
    RBRACE          reduce using rule 22 (expression -> expression GTEQ expression .)
    ELSE            reduce using rule 22 (expression -> expression GTEQ expression .)
    ARROW           reduce using rule 22 (expression -> expression GTEQ expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MOD             shift and go to state 34

  ! PLUS            [ reduce using rule 22 (expression -> expression GTEQ expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> expression GTEQ expression .) ]
  ! TIMES           [ reduce using rule 22 (expression -> expression GTEQ expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> expression GTEQ expression .) ]
  ! MOD             [ reduce using rule 22 (expression -> expression GTEQ expression .) ]
  ! EQEQ            [ shift and go to state 35 ]
  ! NOTEQ           [ shift and go to state 36 ]
  ! LT              [ shift and go to state 37 ]
  ! LTEQ            [ shift and go to state 38 ]
  ! GT              [ shift and go to state 39 ]
  ! GTEQ            [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 67

    (23) expression -> expression AND expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . MOD expression
    (17) expression -> expression . EQEQ expression
    (18) expression -> expression . NOTEQ expression
    (19) expression -> expression . LT expression
    (20) expression -> expression . LTEQ expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GTEQ expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression

    AND             reduce using rule 23 (expression -> expression AND expression .)
    OR              reduce using rule 23 (expression -> expression AND expression .)
    VAR             reduce using rule 23 (expression -> expression AND expression .)
    VAL             reduce using rule 23 (expression -> expression AND expression .)
    LPAREN          reduce using rule 23 (expression -> expression AND expression .)
    NUMBER          reduce using rule 23 (expression -> expression AND expression .)
    FLOAT           reduce using rule 23 (expression -> expression AND expression .)
    DOUBLE          reduce using rule 23 (expression -> expression AND expression .)
    BOOLEAN         reduce using rule 23 (expression -> expression AND expression .)
    STRING          reduce using rule 23 (expression -> expression AND expression .)
    ID              reduce using rule 23 (expression -> expression AND expression .)
    PRINTLN         reduce using rule 23 (expression -> expression AND expression .)
    PRINT           reduce using rule 23 (expression -> expression AND expression .)
    READLINE        reduce using rule 23 (expression -> expression AND expression .)
    IF              reduce using rule 23 (expression -> expression AND expression .)
    WHEN            reduce using rule 23 (expression -> expression AND expression .)
    WHILE           reduce using rule 23 (expression -> expression AND expression .)
    FOR             reduce using rule 23 (expression -> expression AND expression .)
    LISTOF          reduce using rule 23 (expression -> expression AND expression .)
    MAPOF           reduce using rule 23 (expression -> expression AND expression .)
    SETOF           reduce using rule 23 (expression -> expression AND expression .)
    $end            reduce using rule 23 (expression -> expression AND expression .)
    RPAREN          reduce using rule 23 (expression -> expression AND expression .)
    LBRACE          reduce using rule 23 (expression -> expression AND expression .)
    COMMA           reduce using rule 23 (expression -> expression AND expression .)
    TO              reduce using rule 23 (expression -> expression AND expression .)
    RBRACE          reduce using rule 23 (expression -> expression AND expression .)
    ELSE            reduce using rule 23 (expression -> expression AND expression .)
    ARROW           reduce using rule 23 (expression -> expression AND expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MOD             shift and go to state 34
    EQEQ            shift and go to state 35
    NOTEQ           shift and go to state 36
    LT              shift and go to state 37
    LTEQ            shift and go to state 38
    GT              shift and go to state 39
    GTEQ            shift and go to state 40

  ! PLUS            [ reduce using rule 23 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 23 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 23 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression AND expression .) ]
  ! MOD             [ reduce using rule 23 (expression -> expression AND expression .) ]
  ! EQEQ            [ reduce using rule 23 (expression -> expression AND expression .) ]
  ! NOTEQ           [ reduce using rule 23 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 23 (expression -> expression AND expression .) ]
  ! LTEQ            [ reduce using rule 23 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 23 (expression -> expression AND expression .) ]
  ! GTEQ            [ reduce using rule 23 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 68

    (24) expression -> expression OR expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . MOD expression
    (17) expression -> expression . EQEQ expression
    (18) expression -> expression . NOTEQ expression
    (19) expression -> expression . LT expression
    (20) expression -> expression . LTEQ expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GTEQ expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression

    OR              reduce using rule 24 (expression -> expression OR expression .)
    VAR             reduce using rule 24 (expression -> expression OR expression .)
    VAL             reduce using rule 24 (expression -> expression OR expression .)
    LPAREN          reduce using rule 24 (expression -> expression OR expression .)
    NUMBER          reduce using rule 24 (expression -> expression OR expression .)
    FLOAT           reduce using rule 24 (expression -> expression OR expression .)
    DOUBLE          reduce using rule 24 (expression -> expression OR expression .)
    BOOLEAN         reduce using rule 24 (expression -> expression OR expression .)
    STRING          reduce using rule 24 (expression -> expression OR expression .)
    ID              reduce using rule 24 (expression -> expression OR expression .)
    PRINTLN         reduce using rule 24 (expression -> expression OR expression .)
    PRINT           reduce using rule 24 (expression -> expression OR expression .)
    READLINE        reduce using rule 24 (expression -> expression OR expression .)
    IF              reduce using rule 24 (expression -> expression OR expression .)
    WHEN            reduce using rule 24 (expression -> expression OR expression .)
    WHILE           reduce using rule 24 (expression -> expression OR expression .)
    FOR             reduce using rule 24 (expression -> expression OR expression .)
    LISTOF          reduce using rule 24 (expression -> expression OR expression .)
    MAPOF           reduce using rule 24 (expression -> expression OR expression .)
    SETOF           reduce using rule 24 (expression -> expression OR expression .)
    $end            reduce using rule 24 (expression -> expression OR expression .)
    RPAREN          reduce using rule 24 (expression -> expression OR expression .)
    LBRACE          reduce using rule 24 (expression -> expression OR expression .)
    COMMA           reduce using rule 24 (expression -> expression OR expression .)
    TO              reduce using rule 24 (expression -> expression OR expression .)
    RBRACE          reduce using rule 24 (expression -> expression OR expression .)
    ELSE            reduce using rule 24 (expression -> expression OR expression .)
    ARROW           reduce using rule 24 (expression -> expression OR expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MOD             shift and go to state 34
    EQEQ            shift and go to state 35
    NOTEQ           shift and go to state 36
    LT              shift and go to state 37
    LTEQ            shift and go to state 38
    GT              shift and go to state 39
    GTEQ            shift and go to state 40
    AND             shift and go to state 41

  ! PLUS            [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! MOD             [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! EQEQ            [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! NOTEQ           [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! LTEQ            [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! GTEQ            [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 42 ]


state 69

    (10) assignment -> VAR ID ASSIGN . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11

    expression                     shift and go to state 86

state 70

    (11) assignment -> VAL ID ASSIGN . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11

    expression                     shift and go to state 87

state 71

    (25) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    EQEQ            reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    NOTEQ           reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    LTEQ            reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    GTEQ            reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    VAR             reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    VAL             reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    FLOAT           reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    DOUBLE          reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    BOOLEAN         reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    STRING          reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    ID              reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    PRINTLN         reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    READLINE        reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    WHEN            reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    FOR             reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    LISTOF          reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    MAPOF           reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    SETOF           reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    TO              reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    ARROW           reduce using rule 25 (expression -> LPAREN expression RPAREN .)


state 72

    (32) print -> PRINTLN LPAREN argument_list . RPAREN
    (36) argument_list -> argument_list . COMMA expression

    RPAREN          shift and go to state 88
    COMMA           shift and go to state 89


state 73

    (34) argument_list -> expression .
    (35) argument_list -> expression . COMMA expression
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . MOD expression
    (17) expression -> expression . EQEQ expression
    (18) expression -> expression . NOTEQ expression
    (19) expression -> expression . LT expression
    (20) expression -> expression . LTEQ expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GTEQ expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression

  ! shift/reduce conflict for COMMA resolved as shift
    RPAREN          reduce using rule 34 (argument_list -> expression .)
    COMMA           shift and go to state 90
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MOD             shift and go to state 34
    EQEQ            shift and go to state 35
    NOTEQ           shift and go to state 36
    LT              shift and go to state 37
    LTEQ            shift and go to state 38
    GT              shift and go to state 39
    GTEQ            shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42

  ! COMMA           [ reduce using rule 34 (argument_list -> expression .) ]


state 74

    (37) argument_list -> empty .

    RPAREN          reduce using rule 37 (argument_list -> empty .)
    COMMA           reduce using rule 37 (argument_list -> empty .)


state 75

    (33) print -> PRINT LPAREN argument_list . RPAREN
    (36) argument_list -> argument_list . COMMA expression

    RPAREN          shift and go to state 91
    COMMA           shift and go to state 89


state 76

    (38) input -> READLINE LPAREN RPAREN .

    VAR             reduce using rule 38 (input -> READLINE LPAREN RPAREN .)
    VAL             reduce using rule 38 (input -> READLINE LPAREN RPAREN .)
    LPAREN          reduce using rule 38 (input -> READLINE LPAREN RPAREN .)
    NUMBER          reduce using rule 38 (input -> READLINE LPAREN RPAREN .)
    FLOAT           reduce using rule 38 (input -> READLINE LPAREN RPAREN .)
    DOUBLE          reduce using rule 38 (input -> READLINE LPAREN RPAREN .)
    BOOLEAN         reduce using rule 38 (input -> READLINE LPAREN RPAREN .)
    STRING          reduce using rule 38 (input -> READLINE LPAREN RPAREN .)
    ID              reduce using rule 38 (input -> READLINE LPAREN RPAREN .)
    PRINTLN         reduce using rule 38 (input -> READLINE LPAREN RPAREN .)
    PRINT           reduce using rule 38 (input -> READLINE LPAREN RPAREN .)
    READLINE        reduce using rule 38 (input -> READLINE LPAREN RPAREN .)
    IF              reduce using rule 38 (input -> READLINE LPAREN RPAREN .)
    WHEN            reduce using rule 38 (input -> READLINE LPAREN RPAREN .)
    WHILE           reduce using rule 38 (input -> READLINE LPAREN RPAREN .)
    FOR             reduce using rule 38 (input -> READLINE LPAREN RPAREN .)
    LISTOF          reduce using rule 38 (input -> READLINE LPAREN RPAREN .)
    MAPOF           reduce using rule 38 (input -> READLINE LPAREN RPAREN .)
    SETOF           reduce using rule 38 (input -> READLINE LPAREN RPAREN .)
    $end            reduce using rule 38 (input -> READLINE LPAREN RPAREN .)
    RBRACE          reduce using rule 38 (input -> READLINE LPAREN RPAREN .)
    ELSE            reduce using rule 38 (input -> READLINE LPAREN RPAREN .)


state 77

    (39) condition -> IF expression LBRACE . statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (40) condition -> IF expression LBRACE . statement_list RBRACE
    (1) statement_list -> . statement
    (2) statement_list -> . statement_list statement
    (3) statement -> . assignment
    (4) statement -> . expression
    (5) statement -> . print
    (6) statement -> . input
    (7) statement -> . condition
    (8) statement -> . loop
    (9) statement -> . data_structure
    (10) assignment -> . VAR ID ASSIGN expression
    (11) assignment -> . VAL ID ASSIGN expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID
    (32) print -> . PRINTLN LPAREN argument_list RPAREN
    (33) print -> . PRINT LPAREN argument_list RPAREN
    (38) input -> . READLINE LPAREN RPAREN
    (39) condition -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (40) condition -> . IF expression LBRACE statement_list RBRACE
    (43) condition -> . WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE
    (41) loop -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (42) loop -> . FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE
    (50) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (51) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (52) data_structure -> . SETOF LPAREN argument_list RPAREN

    VAR             shift and go to state 10
    VAL             shift and go to state 12
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11
    PRINTLN         shift and go to state 19
    PRINT           shift and go to state 20
    READLINE        shift and go to state 21
    IF              shift and go to state 22
    WHEN            shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    LISTOF          shift and go to state 26
    MAPOF           shift and go to state 27
    SETOF           shift and go to state 28

    expression                     shift and go to state 4
    statement_list                 shift and go to state 92
    statement                      shift and go to state 2
    assignment                     shift and go to state 3
    print                          shift and go to state 5
    input                          shift and go to state 6
    condition                      shift and go to state 7
    loop                           shift and go to state 8
    data_structure                 shift and go to state 9

state 78

    (43) condition -> WHEN LPAREN expression . RPAREN LBRACE when_cases RBRACE
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . MOD expression
    (17) expression -> expression . EQEQ expression
    (18) expression -> expression . NOTEQ expression
    (19) expression -> expression . LT expression
    (20) expression -> expression . LTEQ expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GTEQ expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression

    RPAREN          shift and go to state 93
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MOD             shift and go to state 34
    EQEQ            shift and go to state 35
    NOTEQ           shift and go to state 36
    LT              shift and go to state 37
    LTEQ            shift and go to state 38
    GT              shift and go to state 39
    GTEQ            shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42


state 79

    (41) loop -> WHILE LPAREN expression . RPAREN LBRACE statement_list RBRACE
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . MOD expression
    (17) expression -> expression . EQEQ expression
    (18) expression -> expression . NOTEQ expression
    (19) expression -> expression . LT expression
    (20) expression -> expression . LTEQ expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GTEQ expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression

    RPAREN          shift and go to state 94
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MOD             shift and go to state 34
    EQEQ            shift and go to state 35
    NOTEQ           shift and go to state 36
    LT              shift and go to state 37
    LTEQ            shift and go to state 38
    GT              shift and go to state 39
    GTEQ            shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42


state 80

    (42) loop -> FOR LPAREN ID . IN data_structure RPAREN LBRACE statement_list RBRACE

    IN              shift and go to state 95


state 81

    (50) data_structure -> LISTOF LPAREN argument_list . RPAREN
    (36) argument_list -> argument_list . COMMA expression

    RPAREN          shift and go to state 96
    COMMA           shift and go to state 89


state 82

    (51) data_structure -> MAPOF LPAREN map_argument_list . RPAREN
    (54) map_argument_list -> map_argument_list . COMMA map_element

    RPAREN          shift and go to state 97
    COMMA           shift and go to state 98


state 83

    (53) map_argument_list -> map_element .

    RPAREN          reduce using rule 53 (map_argument_list -> map_element .)
    COMMA           reduce using rule 53 (map_argument_list -> map_element .)


state 84

    (55) map_element -> expression . TO expression
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . MOD expression
    (17) expression -> expression . EQEQ expression
    (18) expression -> expression . NOTEQ expression
    (19) expression -> expression . LT expression
    (20) expression -> expression . LTEQ expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GTEQ expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression

    TO              shift and go to state 99
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MOD             shift and go to state 34
    EQEQ            shift and go to state 35
    NOTEQ           shift and go to state 36
    LT              shift and go to state 37
    LTEQ            shift and go to state 38
    GT              shift and go to state 39
    GTEQ            shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42


state 85

    (52) data_structure -> SETOF LPAREN argument_list . RPAREN
    (36) argument_list -> argument_list . COMMA expression

    RPAREN          shift and go to state 100
    COMMA           shift and go to state 89


state 86

    (10) assignment -> VAR ID ASSIGN expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . MOD expression
    (17) expression -> expression . EQEQ expression
    (18) expression -> expression . NOTEQ expression
    (19) expression -> expression . LT expression
    (20) expression -> expression . LTEQ expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GTEQ expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression

    VAR             reduce using rule 10 (assignment -> VAR ID ASSIGN expression .)
    VAL             reduce using rule 10 (assignment -> VAR ID ASSIGN expression .)
    LPAREN          reduce using rule 10 (assignment -> VAR ID ASSIGN expression .)
    NUMBER          reduce using rule 10 (assignment -> VAR ID ASSIGN expression .)
    FLOAT           reduce using rule 10 (assignment -> VAR ID ASSIGN expression .)
    DOUBLE          reduce using rule 10 (assignment -> VAR ID ASSIGN expression .)
    BOOLEAN         reduce using rule 10 (assignment -> VAR ID ASSIGN expression .)
    STRING          reduce using rule 10 (assignment -> VAR ID ASSIGN expression .)
    ID              reduce using rule 10 (assignment -> VAR ID ASSIGN expression .)
    PRINTLN         reduce using rule 10 (assignment -> VAR ID ASSIGN expression .)
    PRINT           reduce using rule 10 (assignment -> VAR ID ASSIGN expression .)
    READLINE        reduce using rule 10 (assignment -> VAR ID ASSIGN expression .)
    IF              reduce using rule 10 (assignment -> VAR ID ASSIGN expression .)
    WHEN            reduce using rule 10 (assignment -> VAR ID ASSIGN expression .)
    WHILE           reduce using rule 10 (assignment -> VAR ID ASSIGN expression .)
    FOR             reduce using rule 10 (assignment -> VAR ID ASSIGN expression .)
    LISTOF          reduce using rule 10 (assignment -> VAR ID ASSIGN expression .)
    MAPOF           reduce using rule 10 (assignment -> VAR ID ASSIGN expression .)
    SETOF           reduce using rule 10 (assignment -> VAR ID ASSIGN expression .)
    $end            reduce using rule 10 (assignment -> VAR ID ASSIGN expression .)
    RBRACE          reduce using rule 10 (assignment -> VAR ID ASSIGN expression .)
    ELSE            reduce using rule 10 (assignment -> VAR ID ASSIGN expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MOD             shift and go to state 34
    EQEQ            shift and go to state 35
    NOTEQ           shift and go to state 36
    LT              shift and go to state 37
    LTEQ            shift and go to state 38
    GT              shift and go to state 39
    GTEQ            shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42


state 87

    (11) assignment -> VAL ID ASSIGN expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . MOD expression
    (17) expression -> expression . EQEQ expression
    (18) expression -> expression . NOTEQ expression
    (19) expression -> expression . LT expression
    (20) expression -> expression . LTEQ expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GTEQ expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression

    VAR             reduce using rule 11 (assignment -> VAL ID ASSIGN expression .)
    VAL             reduce using rule 11 (assignment -> VAL ID ASSIGN expression .)
    LPAREN          reduce using rule 11 (assignment -> VAL ID ASSIGN expression .)
    NUMBER          reduce using rule 11 (assignment -> VAL ID ASSIGN expression .)
    FLOAT           reduce using rule 11 (assignment -> VAL ID ASSIGN expression .)
    DOUBLE          reduce using rule 11 (assignment -> VAL ID ASSIGN expression .)
    BOOLEAN         reduce using rule 11 (assignment -> VAL ID ASSIGN expression .)
    STRING          reduce using rule 11 (assignment -> VAL ID ASSIGN expression .)
    ID              reduce using rule 11 (assignment -> VAL ID ASSIGN expression .)
    PRINTLN         reduce using rule 11 (assignment -> VAL ID ASSIGN expression .)
    PRINT           reduce using rule 11 (assignment -> VAL ID ASSIGN expression .)
    READLINE        reduce using rule 11 (assignment -> VAL ID ASSIGN expression .)
    IF              reduce using rule 11 (assignment -> VAL ID ASSIGN expression .)
    WHEN            reduce using rule 11 (assignment -> VAL ID ASSIGN expression .)
    WHILE           reduce using rule 11 (assignment -> VAL ID ASSIGN expression .)
    FOR             reduce using rule 11 (assignment -> VAL ID ASSIGN expression .)
    LISTOF          reduce using rule 11 (assignment -> VAL ID ASSIGN expression .)
    MAPOF           reduce using rule 11 (assignment -> VAL ID ASSIGN expression .)
    SETOF           reduce using rule 11 (assignment -> VAL ID ASSIGN expression .)
    $end            reduce using rule 11 (assignment -> VAL ID ASSIGN expression .)
    RBRACE          reduce using rule 11 (assignment -> VAL ID ASSIGN expression .)
    ELSE            reduce using rule 11 (assignment -> VAL ID ASSIGN expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MOD             shift and go to state 34
    EQEQ            shift and go to state 35
    NOTEQ           shift and go to state 36
    LT              shift and go to state 37
    LTEQ            shift and go to state 38
    GT              shift and go to state 39
    GTEQ            shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42


state 88

    (32) print -> PRINTLN LPAREN argument_list RPAREN .

    VAR             reduce using rule 32 (print -> PRINTLN LPAREN argument_list RPAREN .)
    VAL             reduce using rule 32 (print -> PRINTLN LPAREN argument_list RPAREN .)
    LPAREN          reduce using rule 32 (print -> PRINTLN LPAREN argument_list RPAREN .)
    NUMBER          reduce using rule 32 (print -> PRINTLN LPAREN argument_list RPAREN .)
    FLOAT           reduce using rule 32 (print -> PRINTLN LPAREN argument_list RPAREN .)
    DOUBLE          reduce using rule 32 (print -> PRINTLN LPAREN argument_list RPAREN .)
    BOOLEAN         reduce using rule 32 (print -> PRINTLN LPAREN argument_list RPAREN .)
    STRING          reduce using rule 32 (print -> PRINTLN LPAREN argument_list RPAREN .)
    ID              reduce using rule 32 (print -> PRINTLN LPAREN argument_list RPAREN .)
    PRINTLN         reduce using rule 32 (print -> PRINTLN LPAREN argument_list RPAREN .)
    PRINT           reduce using rule 32 (print -> PRINTLN LPAREN argument_list RPAREN .)
    READLINE        reduce using rule 32 (print -> PRINTLN LPAREN argument_list RPAREN .)
    IF              reduce using rule 32 (print -> PRINTLN LPAREN argument_list RPAREN .)
    WHEN            reduce using rule 32 (print -> PRINTLN LPAREN argument_list RPAREN .)
    WHILE           reduce using rule 32 (print -> PRINTLN LPAREN argument_list RPAREN .)
    FOR             reduce using rule 32 (print -> PRINTLN LPAREN argument_list RPAREN .)
    LISTOF          reduce using rule 32 (print -> PRINTLN LPAREN argument_list RPAREN .)
    MAPOF           reduce using rule 32 (print -> PRINTLN LPAREN argument_list RPAREN .)
    SETOF           reduce using rule 32 (print -> PRINTLN LPAREN argument_list RPAREN .)
    $end            reduce using rule 32 (print -> PRINTLN LPAREN argument_list RPAREN .)
    RBRACE          reduce using rule 32 (print -> PRINTLN LPAREN argument_list RPAREN .)
    ELSE            reduce using rule 32 (print -> PRINTLN LPAREN argument_list RPAREN .)


state 89

    (36) argument_list -> argument_list COMMA . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11

    expression                     shift and go to state 101

state 90

    (35) argument_list -> expression COMMA . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11

    expression                     shift and go to state 102

state 91

    (33) print -> PRINT LPAREN argument_list RPAREN .

    VAR             reduce using rule 33 (print -> PRINT LPAREN argument_list RPAREN .)
    VAL             reduce using rule 33 (print -> PRINT LPAREN argument_list RPAREN .)
    LPAREN          reduce using rule 33 (print -> PRINT LPAREN argument_list RPAREN .)
    NUMBER          reduce using rule 33 (print -> PRINT LPAREN argument_list RPAREN .)
    FLOAT           reduce using rule 33 (print -> PRINT LPAREN argument_list RPAREN .)
    DOUBLE          reduce using rule 33 (print -> PRINT LPAREN argument_list RPAREN .)
    BOOLEAN         reduce using rule 33 (print -> PRINT LPAREN argument_list RPAREN .)
    STRING          reduce using rule 33 (print -> PRINT LPAREN argument_list RPAREN .)
    ID              reduce using rule 33 (print -> PRINT LPAREN argument_list RPAREN .)
    PRINTLN         reduce using rule 33 (print -> PRINT LPAREN argument_list RPAREN .)
    PRINT           reduce using rule 33 (print -> PRINT LPAREN argument_list RPAREN .)
    READLINE        reduce using rule 33 (print -> PRINT LPAREN argument_list RPAREN .)
    IF              reduce using rule 33 (print -> PRINT LPAREN argument_list RPAREN .)
    WHEN            reduce using rule 33 (print -> PRINT LPAREN argument_list RPAREN .)
    WHILE           reduce using rule 33 (print -> PRINT LPAREN argument_list RPAREN .)
    FOR             reduce using rule 33 (print -> PRINT LPAREN argument_list RPAREN .)
    LISTOF          reduce using rule 33 (print -> PRINT LPAREN argument_list RPAREN .)
    MAPOF           reduce using rule 33 (print -> PRINT LPAREN argument_list RPAREN .)
    SETOF           reduce using rule 33 (print -> PRINT LPAREN argument_list RPAREN .)
    $end            reduce using rule 33 (print -> PRINT LPAREN argument_list RPAREN .)
    RBRACE          reduce using rule 33 (print -> PRINT LPAREN argument_list RPAREN .)
    ELSE            reduce using rule 33 (print -> PRINT LPAREN argument_list RPAREN .)


state 92

    (39) condition -> IF expression LBRACE statement_list . RBRACE ELSE LBRACE statement_list RBRACE
    (40) condition -> IF expression LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (3) statement -> . assignment
    (4) statement -> . expression
    (5) statement -> . print
    (6) statement -> . input
    (7) statement -> . condition
    (8) statement -> . loop
    (9) statement -> . data_structure
    (10) assignment -> . VAR ID ASSIGN expression
    (11) assignment -> . VAL ID ASSIGN expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID
    (32) print -> . PRINTLN LPAREN argument_list RPAREN
    (33) print -> . PRINT LPAREN argument_list RPAREN
    (38) input -> . READLINE LPAREN RPAREN
    (39) condition -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (40) condition -> . IF expression LBRACE statement_list RBRACE
    (43) condition -> . WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE
    (41) loop -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (42) loop -> . FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE
    (50) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (51) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (52) data_structure -> . SETOF LPAREN argument_list RPAREN

    RBRACE          shift and go to state 103
    VAR             shift and go to state 10
    VAL             shift and go to state 12
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11
    PRINTLN         shift and go to state 19
    PRINT           shift and go to state 20
    READLINE        shift and go to state 21
    IF              shift and go to state 22
    WHEN            shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    LISTOF          shift and go to state 26
    MAPOF           shift and go to state 27
    SETOF           shift and go to state 28

    expression                     shift and go to state 4
    statement                      shift and go to state 29
    assignment                     shift and go to state 3
    print                          shift and go to state 5
    input                          shift and go to state 6
    condition                      shift and go to state 7
    loop                           shift and go to state 8
    data_structure                 shift and go to state 9

state 93

    (43) condition -> WHEN LPAREN expression RPAREN . LBRACE when_cases RBRACE

    LBRACE          shift and go to state 104


state 94

    (41) loop -> WHILE LPAREN expression RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 105


state 95

    (42) loop -> FOR LPAREN ID IN . data_structure RPAREN LBRACE statement_list RBRACE
    (50) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (51) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (52) data_structure -> . SETOF LPAREN argument_list RPAREN

    LISTOF          shift and go to state 26
    MAPOF           shift and go to state 27
    SETOF           shift and go to state 28

    data_structure                 shift and go to state 106

state 96

    (50) data_structure -> LISTOF LPAREN argument_list RPAREN .

    VAR             reduce using rule 50 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    VAL             reduce using rule 50 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    LPAREN          reduce using rule 50 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    NUMBER          reduce using rule 50 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    FLOAT           reduce using rule 50 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    DOUBLE          reduce using rule 50 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    BOOLEAN         reduce using rule 50 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    STRING          reduce using rule 50 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    ID              reduce using rule 50 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    PRINTLN         reduce using rule 50 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    PRINT           reduce using rule 50 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    READLINE        reduce using rule 50 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    IF              reduce using rule 50 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    WHEN            reduce using rule 50 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    WHILE           reduce using rule 50 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    FOR             reduce using rule 50 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    LISTOF          reduce using rule 50 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    MAPOF           reduce using rule 50 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    SETOF           reduce using rule 50 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    $end            reduce using rule 50 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    RBRACE          reduce using rule 50 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    RPAREN          reduce using rule 50 (data_structure -> LISTOF LPAREN argument_list RPAREN .)
    ELSE            reduce using rule 50 (data_structure -> LISTOF LPAREN argument_list RPAREN .)


state 97

    (51) data_structure -> MAPOF LPAREN map_argument_list RPAREN .

    VAR             reduce using rule 51 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    VAL             reduce using rule 51 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    LPAREN          reduce using rule 51 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    NUMBER          reduce using rule 51 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    FLOAT           reduce using rule 51 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    DOUBLE          reduce using rule 51 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    BOOLEAN         reduce using rule 51 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    STRING          reduce using rule 51 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    ID              reduce using rule 51 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    PRINTLN         reduce using rule 51 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    PRINT           reduce using rule 51 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    READLINE        reduce using rule 51 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    IF              reduce using rule 51 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    WHEN            reduce using rule 51 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    WHILE           reduce using rule 51 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    FOR             reduce using rule 51 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    LISTOF          reduce using rule 51 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    MAPOF           reduce using rule 51 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    SETOF           reduce using rule 51 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    $end            reduce using rule 51 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    RBRACE          reduce using rule 51 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    RPAREN          reduce using rule 51 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)
    ELSE            reduce using rule 51 (data_structure -> MAPOF LPAREN map_argument_list RPAREN .)


state 98

    (54) map_argument_list -> map_argument_list COMMA . map_element
    (55) map_element -> . expression TO expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11

    map_element                    shift and go to state 107
    expression                     shift and go to state 84

state 99

    (55) map_element -> expression TO . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11

    expression                     shift and go to state 108

state 100

    (52) data_structure -> SETOF LPAREN argument_list RPAREN .

    VAR             reduce using rule 52 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    VAL             reduce using rule 52 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    LPAREN          reduce using rule 52 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    NUMBER          reduce using rule 52 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    FLOAT           reduce using rule 52 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    DOUBLE          reduce using rule 52 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    BOOLEAN         reduce using rule 52 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    STRING          reduce using rule 52 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    ID              reduce using rule 52 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    PRINTLN         reduce using rule 52 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    PRINT           reduce using rule 52 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    READLINE        reduce using rule 52 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    IF              reduce using rule 52 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    WHEN            reduce using rule 52 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    WHILE           reduce using rule 52 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    FOR             reduce using rule 52 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    LISTOF          reduce using rule 52 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    MAPOF           reduce using rule 52 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    SETOF           reduce using rule 52 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    $end            reduce using rule 52 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    RBRACE          reduce using rule 52 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    RPAREN          reduce using rule 52 (data_structure -> SETOF LPAREN argument_list RPAREN .)
    ELSE            reduce using rule 52 (data_structure -> SETOF LPAREN argument_list RPAREN .)


state 101

    (36) argument_list -> argument_list COMMA expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . MOD expression
    (17) expression -> expression . EQEQ expression
    (18) expression -> expression . NOTEQ expression
    (19) expression -> expression . LT expression
    (20) expression -> expression . LTEQ expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GTEQ expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression

    RPAREN          reduce using rule 36 (argument_list -> argument_list COMMA expression .)
    COMMA           reduce using rule 36 (argument_list -> argument_list COMMA expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MOD             shift and go to state 34
    EQEQ            shift and go to state 35
    NOTEQ           shift and go to state 36
    LT              shift and go to state 37
    LTEQ            shift and go to state 38
    GT              shift and go to state 39
    GTEQ            shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42


state 102

    (35) argument_list -> expression COMMA expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . MOD expression
    (17) expression -> expression . EQEQ expression
    (18) expression -> expression . NOTEQ expression
    (19) expression -> expression . LT expression
    (20) expression -> expression . LTEQ expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GTEQ expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression

    RPAREN          reduce using rule 35 (argument_list -> expression COMMA expression .)
    COMMA           reduce using rule 35 (argument_list -> expression COMMA expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MOD             shift and go to state 34
    EQEQ            shift and go to state 35
    NOTEQ           shift and go to state 36
    LT              shift and go to state 37
    LTEQ            shift and go to state 38
    GT              shift and go to state 39
    GTEQ            shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42


state 103

    (39) condition -> IF expression LBRACE statement_list RBRACE . ELSE LBRACE statement_list RBRACE
    (40) condition -> IF expression LBRACE statement_list RBRACE .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 109
    VAR             reduce using rule 40 (condition -> IF expression LBRACE statement_list RBRACE .)
    VAL             reduce using rule 40 (condition -> IF expression LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 40 (condition -> IF expression LBRACE statement_list RBRACE .)
    NUMBER          reduce using rule 40 (condition -> IF expression LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 40 (condition -> IF expression LBRACE statement_list RBRACE .)
    DOUBLE          reduce using rule 40 (condition -> IF expression LBRACE statement_list RBRACE .)
    BOOLEAN         reduce using rule 40 (condition -> IF expression LBRACE statement_list RBRACE .)
    STRING          reduce using rule 40 (condition -> IF expression LBRACE statement_list RBRACE .)
    ID              reduce using rule 40 (condition -> IF expression LBRACE statement_list RBRACE .)
    PRINTLN         reduce using rule 40 (condition -> IF expression LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 40 (condition -> IF expression LBRACE statement_list RBRACE .)
    READLINE        reduce using rule 40 (condition -> IF expression LBRACE statement_list RBRACE .)
    IF              reduce using rule 40 (condition -> IF expression LBRACE statement_list RBRACE .)
    WHEN            reduce using rule 40 (condition -> IF expression LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 40 (condition -> IF expression LBRACE statement_list RBRACE .)
    FOR             reduce using rule 40 (condition -> IF expression LBRACE statement_list RBRACE .)
    LISTOF          reduce using rule 40 (condition -> IF expression LBRACE statement_list RBRACE .)
    MAPOF           reduce using rule 40 (condition -> IF expression LBRACE statement_list RBRACE .)
    SETOF           reduce using rule 40 (condition -> IF expression LBRACE statement_list RBRACE .)
    $end            reduce using rule 40 (condition -> IF expression LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 40 (condition -> IF expression LBRACE statement_list RBRACE .)

  ! ELSE            [ reduce using rule 40 (condition -> IF expression LBRACE statement_list RBRACE .) ]


state 104

    (43) condition -> WHEN LPAREN expression RPAREN LBRACE . when_cases RBRACE
    (44) when_cases -> . when_case
    (45) when_cases -> . when_cases when_case
    (46) when_case -> . expression_list ARROW statement_list
    (47) when_case -> . ELSE ARROW statement_list
    (48) expression_list -> . expression
    (49) expression_list -> . expression_list COMMA expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID

    ELSE            shift and go to state 114
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11

    expression                     shift and go to state 110
    when_cases                     shift and go to state 111
    when_case                      shift and go to state 112
    expression_list                shift and go to state 113

state 105

    (41) loop -> WHILE LPAREN expression RPAREN LBRACE . statement_list RBRACE
    (1) statement_list -> . statement
    (2) statement_list -> . statement_list statement
    (3) statement -> . assignment
    (4) statement -> . expression
    (5) statement -> . print
    (6) statement -> . input
    (7) statement -> . condition
    (8) statement -> . loop
    (9) statement -> . data_structure
    (10) assignment -> . VAR ID ASSIGN expression
    (11) assignment -> . VAL ID ASSIGN expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID
    (32) print -> . PRINTLN LPAREN argument_list RPAREN
    (33) print -> . PRINT LPAREN argument_list RPAREN
    (38) input -> . READLINE LPAREN RPAREN
    (39) condition -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (40) condition -> . IF expression LBRACE statement_list RBRACE
    (43) condition -> . WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE
    (41) loop -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (42) loop -> . FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE
    (50) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (51) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (52) data_structure -> . SETOF LPAREN argument_list RPAREN

    VAR             shift and go to state 10
    VAL             shift and go to state 12
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11
    PRINTLN         shift and go to state 19
    PRINT           shift and go to state 20
    READLINE        shift and go to state 21
    IF              shift and go to state 22
    WHEN            shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    LISTOF          shift and go to state 26
    MAPOF           shift and go to state 27
    SETOF           shift and go to state 28

    expression                     shift and go to state 4
    statement_list                 shift and go to state 115
    statement                      shift and go to state 2
    assignment                     shift and go to state 3
    print                          shift and go to state 5
    input                          shift and go to state 6
    condition                      shift and go to state 7
    loop                           shift and go to state 8
    data_structure                 shift and go to state 9

state 106

    (42) loop -> FOR LPAREN ID IN data_structure . RPAREN LBRACE statement_list RBRACE

    RPAREN          shift and go to state 116


state 107

    (54) map_argument_list -> map_argument_list COMMA map_element .

    RPAREN          reduce using rule 54 (map_argument_list -> map_argument_list COMMA map_element .)
    COMMA           reduce using rule 54 (map_argument_list -> map_argument_list COMMA map_element .)


state 108

    (55) map_element -> expression TO expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . MOD expression
    (17) expression -> expression . EQEQ expression
    (18) expression -> expression . NOTEQ expression
    (19) expression -> expression . LT expression
    (20) expression -> expression . LTEQ expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GTEQ expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression

    RPAREN          reduce using rule 55 (map_element -> expression TO expression .)
    COMMA           reduce using rule 55 (map_element -> expression TO expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MOD             shift and go to state 34
    EQEQ            shift and go to state 35
    NOTEQ           shift and go to state 36
    LT              shift and go to state 37
    LTEQ            shift and go to state 38
    GT              shift and go to state 39
    GTEQ            shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42


state 109

    (39) condition -> IF expression LBRACE statement_list RBRACE ELSE . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 117


state 110

    (48) expression_list -> expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . MOD expression
    (17) expression -> expression . EQEQ expression
    (18) expression -> expression . NOTEQ expression
    (19) expression -> expression . LT expression
    (20) expression -> expression . LTEQ expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GTEQ expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression

    ARROW           reduce using rule 48 (expression_list -> expression .)
    COMMA           reduce using rule 48 (expression_list -> expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MOD             shift and go to state 34
    EQEQ            shift and go to state 35
    NOTEQ           shift and go to state 36
    LT              shift and go to state 37
    LTEQ            shift and go to state 38
    GT              shift and go to state 39
    GTEQ            shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42


state 111

    (43) condition -> WHEN LPAREN expression RPAREN LBRACE when_cases . RBRACE
    (45) when_cases -> when_cases . when_case
    (46) when_case -> . expression_list ARROW statement_list
    (47) when_case -> . ELSE ARROW statement_list
    (48) expression_list -> . expression
    (49) expression_list -> . expression_list COMMA expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID

    RBRACE          shift and go to state 118
    ELSE            shift and go to state 114
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11

    expression                     shift and go to state 110
    when_case                      shift and go to state 119
    expression_list                shift and go to state 113

state 112

    (44) when_cases -> when_case .

    RBRACE          reduce using rule 44 (when_cases -> when_case .)
    ELSE            reduce using rule 44 (when_cases -> when_case .)
    LPAREN          reduce using rule 44 (when_cases -> when_case .)
    NUMBER          reduce using rule 44 (when_cases -> when_case .)
    FLOAT           reduce using rule 44 (when_cases -> when_case .)
    DOUBLE          reduce using rule 44 (when_cases -> when_case .)
    BOOLEAN         reduce using rule 44 (when_cases -> when_case .)
    STRING          reduce using rule 44 (when_cases -> when_case .)
    ID              reduce using rule 44 (when_cases -> when_case .)


state 113

    (46) when_case -> expression_list . ARROW statement_list
    (49) expression_list -> expression_list . COMMA expression

    ARROW           shift and go to state 120
    COMMA           shift and go to state 121


state 114

    (47) when_case -> ELSE . ARROW statement_list

    ARROW           shift and go to state 122


state 115

    (41) loop -> WHILE LPAREN expression RPAREN LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (3) statement -> . assignment
    (4) statement -> . expression
    (5) statement -> . print
    (6) statement -> . input
    (7) statement -> . condition
    (8) statement -> . loop
    (9) statement -> . data_structure
    (10) assignment -> . VAR ID ASSIGN expression
    (11) assignment -> . VAL ID ASSIGN expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID
    (32) print -> . PRINTLN LPAREN argument_list RPAREN
    (33) print -> . PRINT LPAREN argument_list RPAREN
    (38) input -> . READLINE LPAREN RPAREN
    (39) condition -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (40) condition -> . IF expression LBRACE statement_list RBRACE
    (43) condition -> . WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE
    (41) loop -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (42) loop -> . FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE
    (50) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (51) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (52) data_structure -> . SETOF LPAREN argument_list RPAREN

    RBRACE          shift and go to state 123
    VAR             shift and go to state 10
    VAL             shift and go to state 12
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11
    PRINTLN         shift and go to state 19
    PRINT           shift and go to state 20
    READLINE        shift and go to state 21
    IF              shift and go to state 22
    WHEN            shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    LISTOF          shift and go to state 26
    MAPOF           shift and go to state 27
    SETOF           shift and go to state 28

    expression                     shift and go to state 4
    statement                      shift and go to state 29
    assignment                     shift and go to state 3
    print                          shift and go to state 5
    input                          shift and go to state 6
    condition                      shift and go to state 7
    loop                           shift and go to state 8
    data_structure                 shift and go to state 9

state 116

    (42) loop -> FOR LPAREN ID IN data_structure RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 124


state 117

    (39) condition -> IF expression LBRACE statement_list RBRACE ELSE LBRACE . statement_list RBRACE
    (1) statement_list -> . statement
    (2) statement_list -> . statement_list statement
    (3) statement -> . assignment
    (4) statement -> . expression
    (5) statement -> . print
    (6) statement -> . input
    (7) statement -> . condition
    (8) statement -> . loop
    (9) statement -> . data_structure
    (10) assignment -> . VAR ID ASSIGN expression
    (11) assignment -> . VAL ID ASSIGN expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID
    (32) print -> . PRINTLN LPAREN argument_list RPAREN
    (33) print -> . PRINT LPAREN argument_list RPAREN
    (38) input -> . READLINE LPAREN RPAREN
    (39) condition -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (40) condition -> . IF expression LBRACE statement_list RBRACE
    (43) condition -> . WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE
    (41) loop -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (42) loop -> . FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE
    (50) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (51) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (52) data_structure -> . SETOF LPAREN argument_list RPAREN

    VAR             shift and go to state 10
    VAL             shift and go to state 12
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11
    PRINTLN         shift and go to state 19
    PRINT           shift and go to state 20
    READLINE        shift and go to state 21
    IF              shift and go to state 22
    WHEN            shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    LISTOF          shift and go to state 26
    MAPOF           shift and go to state 27
    SETOF           shift and go to state 28

    expression                     shift and go to state 4
    statement_list                 shift and go to state 125
    statement                      shift and go to state 2
    assignment                     shift and go to state 3
    print                          shift and go to state 5
    input                          shift and go to state 6
    condition                      shift and go to state 7
    loop                           shift and go to state 8
    data_structure                 shift and go to state 9

state 118

    (43) condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .

    VAR             reduce using rule 43 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    VAL             reduce using rule 43 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    LPAREN          reduce using rule 43 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    NUMBER          reduce using rule 43 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    FLOAT           reduce using rule 43 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    DOUBLE          reduce using rule 43 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    BOOLEAN         reduce using rule 43 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    STRING          reduce using rule 43 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    ID              reduce using rule 43 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    PRINTLN         reduce using rule 43 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    PRINT           reduce using rule 43 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    READLINE        reduce using rule 43 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    IF              reduce using rule 43 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    WHEN            reduce using rule 43 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    WHILE           reduce using rule 43 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    FOR             reduce using rule 43 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    LISTOF          reduce using rule 43 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    MAPOF           reduce using rule 43 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    SETOF           reduce using rule 43 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    $end            reduce using rule 43 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    RBRACE          reduce using rule 43 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)
    ELSE            reduce using rule 43 (condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE .)


state 119

    (45) when_cases -> when_cases when_case .

    RBRACE          reduce using rule 45 (when_cases -> when_cases when_case .)
    ELSE            reduce using rule 45 (when_cases -> when_cases when_case .)
    LPAREN          reduce using rule 45 (when_cases -> when_cases when_case .)
    NUMBER          reduce using rule 45 (when_cases -> when_cases when_case .)
    FLOAT           reduce using rule 45 (when_cases -> when_cases when_case .)
    DOUBLE          reduce using rule 45 (when_cases -> when_cases when_case .)
    BOOLEAN         reduce using rule 45 (when_cases -> when_cases when_case .)
    STRING          reduce using rule 45 (when_cases -> when_cases when_case .)
    ID              reduce using rule 45 (when_cases -> when_cases when_case .)


state 120

    (46) when_case -> expression_list ARROW . statement_list
    (1) statement_list -> . statement
    (2) statement_list -> . statement_list statement
    (3) statement -> . assignment
    (4) statement -> . expression
    (5) statement -> . print
    (6) statement -> . input
    (7) statement -> . condition
    (8) statement -> . loop
    (9) statement -> . data_structure
    (10) assignment -> . VAR ID ASSIGN expression
    (11) assignment -> . VAL ID ASSIGN expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID
    (32) print -> . PRINTLN LPAREN argument_list RPAREN
    (33) print -> . PRINT LPAREN argument_list RPAREN
    (38) input -> . READLINE LPAREN RPAREN
    (39) condition -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (40) condition -> . IF expression LBRACE statement_list RBRACE
    (43) condition -> . WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE
    (41) loop -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (42) loop -> . FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE
    (50) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (51) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (52) data_structure -> . SETOF LPAREN argument_list RPAREN

    VAR             shift and go to state 10
    VAL             shift and go to state 12
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11
    PRINTLN         shift and go to state 19
    PRINT           shift and go to state 20
    READLINE        shift and go to state 21
    IF              shift and go to state 22
    WHEN            shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    LISTOF          shift and go to state 26
    MAPOF           shift and go to state 27
    SETOF           shift and go to state 28

    statement_list                 shift and go to state 126
    statement                      shift and go to state 2
    assignment                     shift and go to state 3
    expression                     shift and go to state 4
    print                          shift and go to state 5
    input                          shift and go to state 6
    condition                      shift and go to state 7
    loop                           shift and go to state 8
    data_structure                 shift and go to state 9

state 121

    (49) expression_list -> expression_list COMMA . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID

    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11

    expression                     shift and go to state 127

state 122

    (47) when_case -> ELSE ARROW . statement_list
    (1) statement_list -> . statement
    (2) statement_list -> . statement_list statement
    (3) statement -> . assignment
    (4) statement -> . expression
    (5) statement -> . print
    (6) statement -> . input
    (7) statement -> . condition
    (8) statement -> . loop
    (9) statement -> . data_structure
    (10) assignment -> . VAR ID ASSIGN expression
    (11) assignment -> . VAL ID ASSIGN expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID
    (32) print -> . PRINTLN LPAREN argument_list RPAREN
    (33) print -> . PRINT LPAREN argument_list RPAREN
    (38) input -> . READLINE LPAREN RPAREN
    (39) condition -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (40) condition -> . IF expression LBRACE statement_list RBRACE
    (43) condition -> . WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE
    (41) loop -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (42) loop -> . FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE
    (50) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (51) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (52) data_structure -> . SETOF LPAREN argument_list RPAREN

    VAR             shift and go to state 10
    VAL             shift and go to state 12
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11
    PRINTLN         shift and go to state 19
    PRINT           shift and go to state 20
    READLINE        shift and go to state 21
    IF              shift and go to state 22
    WHEN            shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    LISTOF          shift and go to state 26
    MAPOF           shift and go to state 27
    SETOF           shift and go to state 28

    statement_list                 shift and go to state 128
    statement                      shift and go to state 2
    assignment                     shift and go to state 3
    expression                     shift and go to state 4
    print                          shift and go to state 5
    input                          shift and go to state 6
    condition                      shift and go to state 7
    loop                           shift and go to state 8
    data_structure                 shift and go to state 9

state 123

    (41) loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .

    VAR             reduce using rule 41 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    VAL             reduce using rule 41 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 41 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    NUMBER          reduce using rule 41 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 41 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    DOUBLE          reduce using rule 41 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    BOOLEAN         reduce using rule 41 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    STRING          reduce using rule 41 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    ID              reduce using rule 41 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    PRINTLN         reduce using rule 41 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 41 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    READLINE        reduce using rule 41 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 41 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    WHEN            reduce using rule 41 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 41 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 41 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    LISTOF          reduce using rule 41 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    MAPOF           reduce using rule 41 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    SETOF           reduce using rule 41 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 41 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 41 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    ELSE            reduce using rule 41 (loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)


state 124

    (42) loop -> FOR LPAREN ID IN data_structure RPAREN LBRACE . statement_list RBRACE
    (1) statement_list -> . statement
    (2) statement_list -> . statement_list statement
    (3) statement -> . assignment
    (4) statement -> . expression
    (5) statement -> . print
    (6) statement -> . input
    (7) statement -> . condition
    (8) statement -> . loop
    (9) statement -> . data_structure
    (10) assignment -> . VAR ID ASSIGN expression
    (11) assignment -> . VAL ID ASSIGN expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID
    (32) print -> . PRINTLN LPAREN argument_list RPAREN
    (33) print -> . PRINT LPAREN argument_list RPAREN
    (38) input -> . READLINE LPAREN RPAREN
    (39) condition -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (40) condition -> . IF expression LBRACE statement_list RBRACE
    (43) condition -> . WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE
    (41) loop -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (42) loop -> . FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE
    (50) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (51) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (52) data_structure -> . SETOF LPAREN argument_list RPAREN

    VAR             shift and go to state 10
    VAL             shift and go to state 12
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11
    PRINTLN         shift and go to state 19
    PRINT           shift and go to state 20
    READLINE        shift and go to state 21
    IF              shift and go to state 22
    WHEN            shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    LISTOF          shift and go to state 26
    MAPOF           shift and go to state 27
    SETOF           shift and go to state 28

    data_structure                 shift and go to state 9
    statement_list                 shift and go to state 129
    statement                      shift and go to state 2
    assignment                     shift and go to state 3
    expression                     shift and go to state 4
    print                          shift and go to state 5
    input                          shift and go to state 6
    condition                      shift and go to state 7
    loop                           shift and go to state 8

state 125

    (39) condition -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (3) statement -> . assignment
    (4) statement -> . expression
    (5) statement -> . print
    (6) statement -> . input
    (7) statement -> . condition
    (8) statement -> . loop
    (9) statement -> . data_structure
    (10) assignment -> . VAR ID ASSIGN expression
    (11) assignment -> . VAL ID ASSIGN expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID
    (32) print -> . PRINTLN LPAREN argument_list RPAREN
    (33) print -> . PRINT LPAREN argument_list RPAREN
    (38) input -> . READLINE LPAREN RPAREN
    (39) condition -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (40) condition -> . IF expression LBRACE statement_list RBRACE
    (43) condition -> . WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE
    (41) loop -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (42) loop -> . FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE
    (50) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (51) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (52) data_structure -> . SETOF LPAREN argument_list RPAREN

    RBRACE          shift and go to state 130
    VAR             shift and go to state 10
    VAL             shift and go to state 12
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11
    PRINTLN         shift and go to state 19
    PRINT           shift and go to state 20
    READLINE        shift and go to state 21
    IF              shift and go to state 22
    WHEN            shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    LISTOF          shift and go to state 26
    MAPOF           shift and go to state 27
    SETOF           shift and go to state 28

    expression                     shift and go to state 4
    statement                      shift and go to state 29
    assignment                     shift and go to state 3
    print                          shift and go to state 5
    input                          shift and go to state 6
    condition                      shift and go to state 7
    loop                           shift and go to state 8
    data_structure                 shift and go to state 9

state 126

    (46) when_case -> expression_list ARROW statement_list .
    (2) statement_list -> statement_list . statement
    (3) statement -> . assignment
    (4) statement -> . expression
    (5) statement -> . print
    (6) statement -> . input
    (7) statement -> . condition
    (8) statement -> . loop
    (9) statement -> . data_structure
    (10) assignment -> . VAR ID ASSIGN expression
    (11) assignment -> . VAL ID ASSIGN expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID
    (32) print -> . PRINTLN LPAREN argument_list RPAREN
    (33) print -> . PRINT LPAREN argument_list RPAREN
    (38) input -> . READLINE LPAREN RPAREN
    (39) condition -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (40) condition -> . IF expression LBRACE statement_list RBRACE
    (43) condition -> . WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE
    (41) loop -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (42) loop -> . FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE
    (50) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (51) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (52) data_structure -> . SETOF LPAREN argument_list RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    RBRACE          reduce using rule 46 (when_case -> expression_list ARROW statement_list .)
    ELSE            reduce using rule 46 (when_case -> expression_list ARROW statement_list .)
    VAR             shift and go to state 10
    VAL             shift and go to state 12
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11
    PRINTLN         shift and go to state 19
    PRINT           shift and go to state 20
    READLINE        shift and go to state 21
    IF              shift and go to state 22
    WHEN            shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    LISTOF          shift and go to state 26
    MAPOF           shift and go to state 27
    SETOF           shift and go to state 28

  ! LPAREN          [ reduce using rule 46 (when_case -> expression_list ARROW statement_list .) ]
  ! NUMBER          [ reduce using rule 46 (when_case -> expression_list ARROW statement_list .) ]
  ! FLOAT           [ reduce using rule 46 (when_case -> expression_list ARROW statement_list .) ]
  ! DOUBLE          [ reduce using rule 46 (when_case -> expression_list ARROW statement_list .) ]
  ! BOOLEAN         [ reduce using rule 46 (when_case -> expression_list ARROW statement_list .) ]
  ! STRING          [ reduce using rule 46 (when_case -> expression_list ARROW statement_list .) ]
  ! ID              [ reduce using rule 46 (when_case -> expression_list ARROW statement_list .) ]

    statement                      shift and go to state 29
    assignment                     shift and go to state 3
    expression                     shift and go to state 4
    print                          shift and go to state 5
    input                          shift and go to state 6
    condition                      shift and go to state 7
    loop                           shift and go to state 8
    data_structure                 shift and go to state 9

state 127

    (49) expression_list -> expression_list COMMA expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . MOD expression
    (17) expression -> expression . EQEQ expression
    (18) expression -> expression . NOTEQ expression
    (19) expression -> expression . LT expression
    (20) expression -> expression . LTEQ expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GTEQ expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression

    ARROW           reduce using rule 49 (expression_list -> expression_list COMMA expression .)
    COMMA           reduce using rule 49 (expression_list -> expression_list COMMA expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MOD             shift and go to state 34
    EQEQ            shift and go to state 35
    NOTEQ           shift and go to state 36
    LT              shift and go to state 37
    LTEQ            shift and go to state 38
    GT              shift and go to state 39
    GTEQ            shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42


state 128

    (47) when_case -> ELSE ARROW statement_list .
    (2) statement_list -> statement_list . statement
    (3) statement -> . assignment
    (4) statement -> . expression
    (5) statement -> . print
    (6) statement -> . input
    (7) statement -> . condition
    (8) statement -> . loop
    (9) statement -> . data_structure
    (10) assignment -> . VAR ID ASSIGN expression
    (11) assignment -> . VAL ID ASSIGN expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID
    (32) print -> . PRINTLN LPAREN argument_list RPAREN
    (33) print -> . PRINT LPAREN argument_list RPAREN
    (38) input -> . READLINE LPAREN RPAREN
    (39) condition -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (40) condition -> . IF expression LBRACE statement_list RBRACE
    (43) condition -> . WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE
    (41) loop -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (42) loop -> . FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE
    (50) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (51) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (52) data_structure -> . SETOF LPAREN argument_list RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    RBRACE          reduce using rule 47 (when_case -> ELSE ARROW statement_list .)
    ELSE            reduce using rule 47 (when_case -> ELSE ARROW statement_list .)
    VAR             shift and go to state 10
    VAL             shift and go to state 12
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11
    PRINTLN         shift and go to state 19
    PRINT           shift and go to state 20
    READLINE        shift and go to state 21
    IF              shift and go to state 22
    WHEN            shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    LISTOF          shift and go to state 26
    MAPOF           shift and go to state 27
    SETOF           shift and go to state 28

  ! LPAREN          [ reduce using rule 47 (when_case -> ELSE ARROW statement_list .) ]
  ! NUMBER          [ reduce using rule 47 (when_case -> ELSE ARROW statement_list .) ]
  ! FLOAT           [ reduce using rule 47 (when_case -> ELSE ARROW statement_list .) ]
  ! DOUBLE          [ reduce using rule 47 (when_case -> ELSE ARROW statement_list .) ]
  ! BOOLEAN         [ reduce using rule 47 (when_case -> ELSE ARROW statement_list .) ]
  ! STRING          [ reduce using rule 47 (when_case -> ELSE ARROW statement_list .) ]
  ! ID              [ reduce using rule 47 (when_case -> ELSE ARROW statement_list .) ]

    statement                      shift and go to state 29
    assignment                     shift and go to state 3
    expression                     shift and go to state 4
    print                          shift and go to state 5
    input                          shift and go to state 6
    condition                      shift and go to state 7
    loop                           shift and go to state 8
    data_structure                 shift and go to state 9

state 129

    (42) loop -> FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (3) statement -> . assignment
    (4) statement -> . expression
    (5) statement -> . print
    (6) statement -> . input
    (7) statement -> . condition
    (8) statement -> . loop
    (9) statement -> . data_structure
    (10) assignment -> . VAR ID ASSIGN expression
    (11) assignment -> . VAL ID ASSIGN expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression MOD expression
    (17) expression -> . expression EQEQ expression
    (18) expression -> . expression NOTEQ expression
    (19) expression -> . expression LT expression
    (20) expression -> . expression LTEQ expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GTEQ expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . FLOAT
    (28) expression -> . DOUBLE
    (29) expression -> . BOOLEAN
    (30) expression -> . STRING
    (31) expression -> . ID
    (32) print -> . PRINTLN LPAREN argument_list RPAREN
    (33) print -> . PRINT LPAREN argument_list RPAREN
    (38) input -> . READLINE LPAREN RPAREN
    (39) condition -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (40) condition -> . IF expression LBRACE statement_list RBRACE
    (43) condition -> . WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE
    (41) loop -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (42) loop -> . FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE
    (50) data_structure -> . LISTOF LPAREN argument_list RPAREN
    (51) data_structure -> . MAPOF LPAREN map_argument_list RPAREN
    (52) data_structure -> . SETOF LPAREN argument_list RPAREN

    RBRACE          shift and go to state 131
    VAR             shift and go to state 10
    VAL             shift and go to state 12
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 14
    FLOAT           shift and go to state 15
    DOUBLE          shift and go to state 16
    BOOLEAN         shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 11
    PRINTLN         shift and go to state 19
    PRINT           shift and go to state 20
    READLINE        shift and go to state 21
    IF              shift and go to state 22
    WHEN            shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    LISTOF          shift and go to state 26
    MAPOF           shift and go to state 27
    SETOF           shift and go to state 28

    data_structure                 shift and go to state 9
    statement                      shift and go to state 29
    assignment                     shift and go to state 3
    expression                     shift and go to state 4
    print                          shift and go to state 5
    input                          shift and go to state 6
    condition                      shift and go to state 7
    loop                           shift and go to state 8

state 130

    (39) condition -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .

    VAR             reduce using rule 39 (condition -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    VAL             reduce using rule 39 (condition -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 39 (condition -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    NUMBER          reduce using rule 39 (condition -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 39 (condition -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    DOUBLE          reduce using rule 39 (condition -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    BOOLEAN         reduce using rule 39 (condition -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    STRING          reduce using rule 39 (condition -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    ID              reduce using rule 39 (condition -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    PRINTLN         reduce using rule 39 (condition -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 39 (condition -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    READLINE        reduce using rule 39 (condition -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    IF              reduce using rule 39 (condition -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    WHEN            reduce using rule 39 (condition -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 39 (condition -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    FOR             reduce using rule 39 (condition -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    LISTOF          reduce using rule 39 (condition -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    MAPOF           reduce using rule 39 (condition -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    SETOF           reduce using rule 39 (condition -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    $end            reduce using rule 39 (condition -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 39 (condition -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    ELSE            reduce using rule 39 (condition -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)


state 131

    (42) loop -> FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE .

    VAR             reduce using rule 42 (loop -> FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE .)
    VAL             reduce using rule 42 (loop -> FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 42 (loop -> FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE .)
    NUMBER          reduce using rule 42 (loop -> FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 42 (loop -> FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE .)
    DOUBLE          reduce using rule 42 (loop -> FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE .)
    BOOLEAN         reduce using rule 42 (loop -> FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE .)
    STRING          reduce using rule 42 (loop -> FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE .)
    ID              reduce using rule 42 (loop -> FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE .)
    PRINTLN         reduce using rule 42 (loop -> FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 42 (loop -> FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE .)
    READLINE        reduce using rule 42 (loop -> FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 42 (loop -> FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE .)
    WHEN            reduce using rule 42 (loop -> FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 42 (loop -> FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 42 (loop -> FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE .)
    LISTOF          reduce using rule 42 (loop -> FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE .)
    MAPOF           reduce using rule 42 (loop -> FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE .)
    SETOF           reduce using rule 42 (loop -> FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 42 (loop -> FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 42 (loop -> FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE .)
    ELSE            reduce using rule 42 (loop -> FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 73 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 103 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 126 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 126 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 126 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 126 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 126 resolved as shift
WARNING: shift/reduce conflict for STRING in state 126 resolved as shift
WARNING: shift/reduce conflict for ID in state 126 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 128 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 128 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 128 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 128 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 128 resolved as shift
WARNING: shift/reduce conflict for STRING in state 128 resolved as shift
WARNING: shift/reduce conflict for ID in state 128 resolved as shift
