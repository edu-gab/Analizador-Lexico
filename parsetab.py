
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQEQNOTEQLTLTEQGTGTEQleftPLUSMINUSleftTIMESDIVIDEMODABSTRACT ACTUAL ADDEQ AND ANNOTATION ARROW AS ASSIGN BOOLEAN BREAK BY CATCH CHAR CLASS COLON COMMA COMPANION CONST CONSTRUCTOR CONTINUE CROSSINLINE DATA DECREMENT DELIMITED_COMMENT DIVEQ DIVIDE DO DOT DOUBLE DOUBLECOLON DYNAMIC EACH ELSE ENUM EQEQ EXPECT EXTERNAL FINAL FINALLY FLOAT FOR FUN GT GTEQ ID IF IMPORT IN INCREMENT INFIX INIT INLINE INNER INTERFACE INTERNAL IS LATEINIT LBRACE LBRACK LINE_COMMENT LIST LISTOF LPAREN LT LTEQ MAP MAPOF MINUS MOD MODEQ MODULE MULTEQ NOINLINE NOT NOTEQ NOT_IN NOT_IS NULL NUMBER OBJECT OF OPEN OPERATOR OR OUT OVERRIDE PACKAGE PLUS PRINT PRINTLN PRIVATE PROTECTED PUBLIC RANGE RBRACE RBRACK READLINE REIFIED REPEAT RETURN RPAREN SEALED SEMICOLON SETOF SHEBANG STRING SUBEQ SUPER SUSPEND TAILREC THEN THIS THROW TIMES TO TRY TYPEDATA TYPEOF TYPE_ALIAS UNIT VAL VAR VARARG WHEN WHERE WHILE WSstatement_list : statement\n                      | statement_list statementstatement : assignment\n                 | expression\n                 | print\n                 | input\n                 | repeat\n                 | condition\n                 | loop\n                 | rangeassignment : VAR ID ASSIGN expression\n                  | VAL ID ASSIGN expressionassignment : ID ASSIGN expressionexpression : expression NOTEQ expression\n                  | expression LT expression\n                  | expression LTEQ expression\n                  | expression GT expression\n                  | expression GTEQ expression\n                  | expression AND expression\n                  | expression OR expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression MOD expressionexpression : LPAREN expression RPARENexpression : NUMBER\n                  | FLOAT\n                  | DOUBLEexpression : BOOLEANexpression : STRINGexpression : IDrange : NUMBER RANGE NUMBERprint : PRINTLN LPAREN argument_list RPAREN\n             | PRINT LPAREN argument_list RPARENargument_list : expression\n                     | expression COMMA expression\n                     | argument_list COMMA expression\n                     | emptyinput : READLINE LPAREN RPARENrepeat : REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACEcondition : IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE\n                 | IF LPAREN expression RPAREN LBRACE statement_list RBRACEloop : WHILE LPAREN expression RPAREN LBRACE statement_list RBRACEloop : FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE\n            | FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACEcondition : WHEN LPAREN expression RPAREN LBRACE when_cases RBRACEwhen_cases : when_case\n                  | when_cases when_casewhen_case : expression_list ARROW statement_list\n                 | ELSE ARROW statement_listexpression_list : expression\n                       | expression_list COMMA expressiondata_structure : LISTOF LPAREN argument_list RPAREN\n                      | MAPOF LPAREN map_argument_list RPAREN\n                      | SETOF LPAREN argument_list RPARENexpression : data_structuremap_argument_list : map_element\n                         | map_argument_list COMMA map_elementmap_element : expression TO expressiontype : IDempty :'
    
_lr_action_items = {'VAR':([0,1,2,3,4,5,6,7,8,9,10,12,15,16,17,18,19,20,32,49,50,63,64,65,66,67,68,69,70,71,72,73,74,76,78,79,84,95,96,97,100,106,107,110,113,114,116,122,123,129,132,133,134,136,138,139,140,141,143,145,146,147,148,149,150,151,152,],[11,11,-1,-3,-4,-5,-6,-7,-8,-9,-10,-32,-27,-28,-29,-30,-31,-57,-2,-27,-32,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-13,-26,-33,-40,-11,-12,-34,-35,-54,-55,-56,11,11,11,11,11,11,-41,-43,-47,11,11,-44,11,11,11,11,11,11,11,-45,-46,11,-42,]),'VAL':([0,1,2,3,4,5,6,7,8,9,10,12,15,16,17,18,19,20,32,49,50,63,64,65,66,67,68,69,70,71,72,73,74,76,78,79,84,95,96,97,100,106,107,110,113,114,116,122,123,129,132,133,134,136,138,139,140,141,143,145,146,147,148,149,150,151,152,],[13,13,-1,-3,-4,-5,-6,-7,-8,-9,-10,-32,-27,-28,-29,-30,-31,-57,-2,-27,-32,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-13,-26,-33,-40,-11,-12,-34,-35,-54,-55,-56,13,13,13,13,13,13,-41,-43,-47,13,13,-44,13,13,13,13,13,13,13,-45,-46,13,-42,]),'ID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,32,33,34,35,36,37,38,39,40,41,42,43,44,46,49,50,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,95,96,97,98,99,100,106,107,108,109,110,113,114,115,116,122,123,125,126,129,132,133,134,135,136,137,138,139,140,141,143,145,146,147,148,149,150,151,152,],[12,12,-1,-3,-4,-5,-6,-7,-8,-9,-10,45,-32,47,50,-27,-28,-29,-30,-31,-57,-2,50,50,50,50,50,50,50,50,50,50,50,50,50,-27,-32,50,50,50,50,50,89,50,50,50,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,50,-13,50,-26,-33,-40,-11,-12,-34,50,50,-35,-54,-55,50,50,-56,12,12,50,12,12,12,50,-48,12,-41,-43,-47,-49,12,50,12,-44,12,12,12,12,12,12,12,-45,-46,12,-42,]),'LPAREN':([0,1,2,3,4,5,6,7,8,9,10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,49,50,52,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,95,96,97,98,99,100,106,107,108,109,110,113,114,115,116,122,123,125,126,129,132,133,134,135,136,137,138,139,140,141,143,145,146,147,148,149,150,151,152,],[14,14,-1,-3,-4,-5,-6,-7,-8,-9,-10,-32,14,-27,-28,-29,-30,-31,-57,52,53,54,55,56,57,58,59,60,61,62,-2,14,14,14,14,14,14,14,14,14,14,14,14,14,-27,-32,14,14,14,14,14,14,14,14,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,14,-13,14,-26,-33,-40,-11,-12,-34,14,14,-35,-54,-55,14,14,-56,14,14,14,14,14,14,14,-48,14,-41,-43,-47,-49,14,14,14,-44,14,14,14,14,14,14,14,-45,-46,14,-42,]),'NUMBER':([0,1,2,3,4,5,6,7,8,9,10,12,14,15,16,17,18,19,20,32,33,34,35,36,37,38,39,40,41,42,43,44,46,49,50,51,52,53,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,95,96,97,98,99,100,105,106,107,108,109,110,113,114,115,116,122,123,125,126,129,132,133,134,135,136,137,138,139,140,141,143,145,146,147,148,149,150,151,152,],[15,15,-1,-3,-4,-5,-6,-7,-8,-9,-10,-32,49,-27,-28,-29,-30,-31,-57,-2,49,49,49,49,49,49,49,49,49,49,49,49,49,-27,-32,79,49,49,85,49,49,49,49,49,49,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,49,-13,49,-26,-33,-40,-11,-12,-34,49,49,-35,119,-54,-55,49,49,-56,15,15,49,15,15,15,49,-48,15,-41,-43,-47,-49,15,49,15,-44,15,15,15,15,15,15,15,-45,-46,15,-42,]),'FLOAT':([0,1,2,3,4,5,6,7,8,9,10,12,14,15,16,17,18,19,20,32,33,34,35,36,37,38,39,40,41,42,43,44,46,49,50,52,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,95,96,97,98,99,100,106,107,108,109,110,113,114,115,116,122,123,125,126,129,132,133,134,135,136,137,138,139,140,141,143,145,146,147,148,149,150,151,152,],[16,16,-1,-3,-4,-5,-6,-7,-8,-9,-10,-32,16,-27,-28,-29,-30,-31,-57,-2,16,16,16,16,16,16,16,16,16,16,16,16,16,-27,-32,16,16,16,16,16,16,16,16,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,16,-13,16,-26,-33,-40,-11,-12,-34,16,16,-35,-54,-55,16,16,-56,16,16,16,16,16,16,16,-48,16,-41,-43,-47,-49,16,16,16,-44,16,16,16,16,16,16,16,-45,-46,16,-42,]),'DOUBLE':([0,1,2,3,4,5,6,7,8,9,10,12,14,15,16,17,18,19,20,32,33,34,35,36,37,38,39,40,41,42,43,44,46,49,50,52,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,95,96,97,98,99,100,106,107,108,109,110,113,114,115,116,122,123,125,126,129,132,133,134,135,136,137,138,139,140,141,143,145,146,147,148,149,150,151,152,],[17,17,-1,-3,-4,-5,-6,-7,-8,-9,-10,-32,17,-27,-28,-29,-30,-31,-57,-2,17,17,17,17,17,17,17,17,17,17,17,17,17,-27,-32,17,17,17,17,17,17,17,17,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,17,-13,17,-26,-33,-40,-11,-12,-34,17,17,-35,-54,-55,17,17,-56,17,17,17,17,17,17,17,-48,17,-41,-43,-47,-49,17,17,17,-44,17,17,17,17,17,17,17,-45,-46,17,-42,]),'BOOLEAN':([0,1,2,3,4,5,6,7,8,9,10,12,14,15,16,17,18,19,20,32,33,34,35,36,37,38,39,40,41,42,43,44,46,49,50,52,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,95,96,97,98,99,100,106,107,108,109,110,113,114,115,116,122,123,125,126,129,132,133,134,135,136,137,138,139,140,141,143,145,146,147,148,149,150,151,152,],[18,18,-1,-3,-4,-5,-6,-7,-8,-9,-10,-32,18,-27,-28,-29,-30,-31,-57,-2,18,18,18,18,18,18,18,18,18,18,18,18,18,-27,-32,18,18,18,18,18,18,18,18,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,18,-13,18,-26,-33,-40,-11,-12,-34,18,18,-35,-54,-55,18,18,-56,18,18,18,18,18,18,18,-48,18,-41,-43,-47,-49,18,18,18,-44,18,18,18,18,18,18,18,-45,-46,18,-42,]),'STRING':([0,1,2,3,4,5,6,7,8,9,10,12,14,15,16,17,18,19,20,32,33,34,35,36,37,38,39,40,41,42,43,44,46,49,50,52,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,95,96,97,98,99,100,106,107,108,109,110,113,114,115,116,122,123,125,126,129,132,133,134,135,136,137,138,139,140,141,143,145,146,147,148,149,150,151,152,],[19,19,-1,-3,-4,-5,-6,-7,-8,-9,-10,-32,19,-27,-28,-29,-30,-31,-57,-2,19,19,19,19,19,19,19,19,19,19,19,19,19,-27,-32,19,19,19,19,19,19,19,19,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,19,-13,19,-26,-33,-40,-11,-12,-34,19,19,-35,-54,-55,19,19,-56,19,19,19,19,19,19,19,-48,19,-41,-43,-47,-49,19,19,19,-44,19,19,19,19,19,19,19,-45,-46,19,-42,]),'PRINTLN':([0,1,2,3,4,5,6,7,8,9,10,12,15,16,17,18,19,20,32,49,50,63,64,65,66,67,68,69,70,71,72,73,74,76,78,79,84,95,96,97,100,106,107,110,113,114,116,122,123,129,132,133,134,136,138,139,140,141,143,145,146,147,148,149,150,151,152,],[21,21,-1,-3,-4,-5,-6,-7,-8,-9,-10,-32,-27,-28,-29,-30,-31,-57,-2,-27,-32,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-13,-26,-33,-40,-11,-12,-34,-35,-54,-55,-56,21,21,21,21,21,21,-41,-43,-47,21,21,-44,21,21,21,21,21,21,21,-45,-46,21,-42,]),'PRINT':([0,1,2,3,4,5,6,7,8,9,10,12,15,16,17,18,19,20,32,49,50,63,64,65,66,67,68,69,70,71,72,73,74,76,78,79,84,95,96,97,100,106,107,110,113,114,116,122,123,129,132,133,134,136,138,139,140,141,143,145,146,147,148,149,150,151,152,],[22,22,-1,-3,-4,-5,-6,-7,-8,-9,-10,-32,-27,-28,-29,-30,-31,-57,-2,-27,-32,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-13,-26,-33,-40,-11,-12,-34,-35,-54,-55,-56,22,22,22,22,22,22,-41,-43,-47,22,22,-44,22,22,22,22,22,22,22,-45,-46,22,-42,]),'READLINE':([0,1,2,3,4,5,6,7,8,9,10,12,15,16,17,18,19,20,32,49,50,63,64,65,66,67,68,69,70,71,72,73,74,76,78,79,84,95,96,97,100,106,107,110,113,114,116,122,123,129,132,133,134,136,138,139,140,141,143,145,146,147,148,149,150,151,152,],[23,23,-1,-3,-4,-5,-6,-7,-8,-9,-10,-32,-27,-28,-29,-30,-31,-57,-2,-27,-32,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-13,-26,-33,-40,-11,-12,-34,-35,-54,-55,-56,23,23,23,23,23,23,-41,-43,-47,23,23,-44,23,23,23,23,23,23,23,-45,-46,23,-42,]),'REPEAT':([0,1,2,3,4,5,6,7,8,9,10,12,15,16,17,18,19,20,32,49,50,63,64,65,66,67,68,69,70,71,72,73,74,76,78,79,84,95,96,97,100,106,107,110,113,114,116,122,123,129,132,133,134,136,138,139,140,141,143,145,146,147,148,149,150,151,152,],[24,24,-1,-3,-4,-5,-6,-7,-8,-9,-10,-32,-27,-28,-29,-30,-31,-57,-2,-27,-32,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-13,-26,-33,-40,-11,-12,-34,-35,-54,-55,-56,24,24,24,24,24,24,-41,-43,-47,24,24,-44,24,24,24,24,24,24,24,-45,-46,24,-42,]),'IF':([0,1,2,3,4,5,6,7,8,9,10,12,15,16,17,18,19,20,32,49,50,63,64,65,66,67,68,69,70,71,72,73,74,76,78,79,84,95,96,97,100,106,107,110,113,114,116,122,123,129,132,133,134,136,138,139,140,141,143,145,146,147,148,149,150,151,152,],[25,25,-1,-3,-4,-5,-6,-7,-8,-9,-10,-32,-27,-28,-29,-30,-31,-57,-2,-27,-32,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-13,-26,-33,-40,-11,-12,-34,-35,-54,-55,-56,25,25,25,25,25,25,-41,-43,-47,25,25,-44,25,25,25,25,25,25,25,-45,-46,25,-42,]),'WHEN':([0,1,2,3,4,5,6,7,8,9,10,12,15,16,17,18,19,20,32,49,50,63,64,65,66,67,68,69,70,71,72,73,74,76,78,79,84,95,96,97,100,106,107,110,113,114,116,122,123,129,132,133,134,136,138,139,140,141,143,145,146,147,148,149,150,151,152,],[26,26,-1,-3,-4,-5,-6,-7,-8,-9,-10,-32,-27,-28,-29,-30,-31,-57,-2,-27,-32,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-13,-26,-33,-40,-11,-12,-34,-35,-54,-55,-56,26,26,26,26,26,26,-41,-43,-47,26,26,-44,26,26,26,26,26,26,26,-45,-46,26,-42,]),'WHILE':([0,1,2,3,4,5,6,7,8,9,10,12,15,16,17,18,19,20,32,49,50,63,64,65,66,67,68,69,70,71,72,73,74,76,78,79,84,95,96,97,100,106,107,110,113,114,116,122,123,129,132,133,134,136,138,139,140,141,143,145,146,147,148,149,150,151,152,],[27,27,-1,-3,-4,-5,-6,-7,-8,-9,-10,-32,-27,-28,-29,-30,-31,-57,-2,-27,-32,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-13,-26,-33,-40,-11,-12,-34,-35,-54,-55,-56,27,27,27,27,27,27,-41,-43,-47,27,27,-44,27,27,27,27,27,27,27,-45,-46,27,-42,]),'FOR':([0,1,2,3,4,5,6,7,8,9,10,12,15,16,17,18,19,20,32,49,50,63,64,65,66,67,68,69,70,71,72,73,74,76,78,79,84,95,96,97,100,106,107,110,113,114,116,122,123,129,132,133,134,136,138,139,140,141,143,145,146,147,148,149,150,151,152,],[28,28,-1,-3,-4,-5,-6,-7,-8,-9,-10,-32,-27,-28,-29,-30,-31,-57,-2,-27,-32,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-13,-26,-33,-40,-11,-12,-34,-35,-54,-55,-56,28,28,28,28,28,28,-41,-43,-47,28,28,-44,28,28,28,28,28,28,28,-45,-46,28,-42,]),'LISTOF':([0,1,2,3,4,5,6,7,8,9,10,12,14,15,16,17,18,19,20,32,33,34,35,36,37,38,39,40,41,42,43,44,46,49,50,52,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,95,96,97,98,99,100,105,106,107,108,109,110,113,114,115,116,122,123,125,126,129,132,133,134,135,136,137,138,139,140,141,143,145,146,147,148,149,150,151,152,],[29,29,-1,-3,-4,-5,-6,-7,-8,-9,-10,-32,29,-27,-28,-29,-30,-31,-57,-2,29,29,29,29,29,29,29,29,29,29,29,29,29,-27,-32,29,29,29,29,29,29,29,29,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,29,-13,29,-26,-33,-40,-11,-12,-34,29,29,-35,29,-54,-55,29,29,-56,29,29,29,29,29,29,29,-48,29,-41,-43,-47,-49,29,29,29,-44,29,29,29,29,29,29,29,-45,-46,29,-42,]),'MAPOF':([0,1,2,3,4,5,6,7,8,9,10,12,14,15,16,17,18,19,20,32,33,34,35,36,37,38,39,40,41,42,43,44,46,49,50,52,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,95,96,97,98,99,100,105,106,107,108,109,110,113,114,115,116,122,123,125,126,129,132,133,134,135,136,137,138,139,140,141,143,145,146,147,148,149,150,151,152,],[30,30,-1,-3,-4,-5,-6,-7,-8,-9,-10,-32,30,-27,-28,-29,-30,-31,-57,-2,30,30,30,30,30,30,30,30,30,30,30,30,30,-27,-32,30,30,30,30,30,30,30,30,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,30,-13,30,-26,-33,-40,-11,-12,-34,30,30,-35,30,-54,-55,30,30,-56,30,30,30,30,30,30,30,-48,30,-41,-43,-47,-49,30,30,30,-44,30,30,30,30,30,30,30,-45,-46,30,-42,]),'SETOF':([0,1,2,3,4,5,6,7,8,9,10,12,14,15,16,17,18,19,20,32,33,34,35,36,37,38,39,40,41,42,43,44,46,49,50,52,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,95,96,97,98,99,100,105,106,107,108,109,110,113,114,115,116,122,123,125,126,129,132,133,134,135,136,137,138,139,140,141,143,145,146,147,148,149,150,151,152,],[31,31,-1,-3,-4,-5,-6,-7,-8,-9,-10,-32,31,-27,-28,-29,-30,-31,-57,-2,31,31,31,31,31,31,31,31,31,31,31,31,31,-27,-32,31,31,31,31,31,31,31,31,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,31,-13,31,-26,-33,-40,-11,-12,-34,31,31,-35,31,-54,-55,31,31,-56,31,31,31,31,31,31,31,-48,31,-41,-43,-47,-49,31,31,31,-44,31,31,31,31,31,31,31,-45,-46,31,-42,]),'$end':([1,2,3,4,5,6,7,8,9,10,12,15,16,17,18,19,20,32,49,50,63,64,65,66,67,68,69,70,71,72,73,74,76,78,79,84,95,96,97,100,106,107,110,132,133,134,139,149,150,152,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-32,-27,-28,-29,-30,-31,-57,-2,-27,-32,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-13,-26,-33,-40,-11,-12,-34,-35,-54,-55,-56,-41,-43,-47,-44,-45,-46,-42,]),'RBRACE':([2,3,4,5,6,7,8,9,10,12,15,16,17,18,19,20,32,49,50,63,64,65,66,67,68,69,70,71,72,73,74,76,78,79,84,95,96,97,100,106,107,110,122,123,125,126,129,132,133,134,135,139,143,145,146,147,149,150,151,152,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-32,-27,-28,-29,-30,-31,-57,-2,-27,-32,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-13,-26,-33,-40,-11,-12,-34,-35,-54,-55,-56,132,133,134,-48,139,-41,-43,-47,-49,-44,-50,-51,149,150,-45,-46,152,-42,]),'ELSE':([2,3,4,5,6,7,8,9,10,12,15,16,17,18,19,20,32,49,50,63,64,65,66,67,68,69,70,71,72,73,74,76,78,79,84,95,96,97,100,106,107,110,115,125,126,132,133,134,135,139,143,145,149,150,152,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-32,-27,-28,-29,-30,-31,-57,-2,-27,-32,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-13,-26,-33,-40,-11,-12,-34,-35,-54,-55,-56,128,128,-48,-41,142,-47,-49,-44,-50,-51,-45,-46,-42,]),'NOTEQ':([4,12,15,16,17,18,19,20,48,49,50,63,64,65,66,67,68,69,70,71,72,73,74,76,78,81,86,87,88,93,95,96,106,107,110,111,112,121,124,144,],[33,-32,-27,-28,-29,-30,-31,-57,33,-27,-32,-14,-15,-16,-17,-18,33,33,-21,-22,-23,-24,-25,33,-26,33,33,33,33,33,33,33,-54,-55,-56,33,33,33,33,33,]),'LT':([4,12,15,16,17,18,19,20,48,49,50,63,64,65,66,67,68,69,70,71,72,73,74,76,78,81,86,87,88,93,95,96,106,107,110,111,112,121,124,144,],[34,-32,-27,-28,-29,-30,-31,-57,34,-27,-32,-14,-15,-16,-17,-18,34,34,-21,-22,-23,-24,-25,34,-26,34,34,34,34,34,34,34,-54,-55,-56,34,34,34,34,34,]),'LTEQ':([4,12,15,16,17,18,19,20,48,49,50,63,64,65,66,67,68,69,70,71,72,73,74,76,78,81,86,87,88,93,95,96,106,107,110,111,112,121,124,144,],[35,-32,-27,-28,-29,-30,-31,-57,35,-27,-32,-14,-15,-16,-17,-18,35,35,-21,-22,-23,-24,-25,35,-26,35,35,35,35,35,35,35,-54,-55,-56,35,35,35,35,35,]),'GT':([4,12,15,16,17,18,19,20,48,49,50,63,64,65,66,67,68,69,70,71,72,73,74,76,78,81,86,87,88,93,95,96,106,107,110,111,112,121,124,144,],[36,-32,-27,-28,-29,-30,-31,-57,36,-27,-32,-14,-15,-16,-17,-18,36,36,-21,-22,-23,-24,-25,36,-26,36,36,36,36,36,36,36,-54,-55,-56,36,36,36,36,36,]),'GTEQ':([4,12,15,16,17,18,19,20,48,49,50,63,64,65,66,67,68,69,70,71,72,73,74,76,78,81,86,87,88,93,95,96,106,107,110,111,112,121,124,144,],[37,-32,-27,-28,-29,-30,-31,-57,37,-27,-32,-14,-15,-16,-17,-18,37,37,-21,-22,-23,-24,-25,37,-26,37,37,37,37,37,37,37,-54,-55,-56,37,37,37,37,37,]),'AND':([4,12,15,16,17,18,19,20,48,49,50,63,64,65,66,67,68,69,70,71,72,73,74,76,78,81,86,87,88,93,95,96,106,107,110,111,112,121,124,144,],[38,-32,-27,-28,-29,-30,-31,-57,38,-27,-32,-14,-15,-16,-17,-18,-19,38,-21,-22,-23,-24,-25,38,-26,38,38,38,38,38,38,38,-54,-55,-56,38,38,38,38,38,]),'OR':([4,12,15,16,17,18,19,20,48,49,50,63,64,65,66,67,68,69,70,71,72,73,74,76,78,81,86,87,88,93,95,96,106,107,110,111,112,121,124,144,],[39,-32,-27,-28,-29,-30,-31,-57,39,-27,-32,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,39,-26,39,39,39,39,39,39,39,-54,-55,-56,39,39,39,39,39,]),'PLUS':([4,12,15,16,17,18,19,20,48,49,50,63,64,65,66,67,68,69,70,71,72,73,74,76,78,81,86,87,88,93,95,96,106,107,110,111,112,121,124,144,],[40,-32,-27,-28,-29,-30,-31,-57,40,-27,-32,40,40,40,40,40,40,40,-21,-22,-23,-24,-25,40,-26,40,40,40,40,40,40,40,-54,-55,-56,40,40,40,40,40,]),'MINUS':([4,12,15,16,17,18,19,20,48,49,50,63,64,65,66,67,68,69,70,71,72,73,74,76,78,81,86,87,88,93,95,96,106,107,110,111,112,121,124,144,],[41,-32,-27,-28,-29,-30,-31,-57,41,-27,-32,41,41,41,41,41,41,41,-21,-22,-23,-24,-25,41,-26,41,41,41,41,41,41,41,-54,-55,-56,41,41,41,41,41,]),'TIMES':([4,12,15,16,17,18,19,20,48,49,50,63,64,65,66,67,68,69,70,71,72,73,74,76,78,81,86,87,88,93,95,96,106,107,110,111,112,121,124,144,],[42,-32,-27,-28,-29,-30,-31,-57,42,-27,-32,42,42,42,42,42,42,42,42,42,-23,-24,-25,42,-26,42,42,42,42,42,42,42,-54,-55,-56,42,42,42,42,42,]),'DIVIDE':([4,12,15,16,17,18,19,20,48,49,50,63,64,65,66,67,68,69,70,71,72,73,74,76,78,81,86,87,88,93,95,96,106,107,110,111,112,121,124,144,],[43,-32,-27,-28,-29,-30,-31,-57,43,-27,-32,43,43,43,43,43,43,43,43,43,-23,-24,-25,43,-26,43,43,43,43,43,43,43,-54,-55,-56,43,43,43,43,43,]),'MOD':([4,12,15,16,17,18,19,20,48,49,50,63,64,65,66,67,68,69,70,71,72,73,74,76,78,81,86,87,88,93,95,96,106,107,110,111,112,121,124,144,],[44,-32,-27,-28,-29,-30,-31,-57,44,-27,-32,44,44,44,44,44,44,44,44,44,-23,-24,-25,44,-26,44,44,44,44,44,44,44,-54,-55,-56,44,44,44,44,44,]),'ASSIGN':([12,45,47,],[46,75,77,]),'RANGE':([15,119,],[51,51,]),'RPAREN':([16,17,18,19,20,48,49,50,52,53,54,60,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,85,86,87,88,90,91,92,94,106,107,110,111,112,117,118,120,121,],[-28,-29,-30,-31,-57,78,-27,-32,-62,-62,84,-62,-62,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-33,97,-36,-39,100,101,102,103,104,106,107,-58,110,-54,-55,-56,-38,-37,130,131,-59,-60,]),'COMMA':([16,17,18,19,20,49,50,52,53,60,62,63,64,65,66,67,68,69,70,71,72,73,74,78,80,81,82,83,90,91,92,94,106,107,110,111,112,120,121,124,127,144,],[-28,-29,-30,-31,-57,-27,-32,-62,-62,-62,-62,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,98,99,-39,98,98,108,-58,98,-54,-55,-56,-38,-37,-59,-60,-52,137,-53,]),'TO':([16,17,18,19,20,49,50,63,64,65,66,67,68,69,70,71,72,73,74,78,93,106,107,110,],[-28,-29,-30,-31,-57,-27,-32,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,109,-54,-55,-56,]),'ARROW':([16,17,18,19,20,49,50,63,64,65,66,67,68,69,70,71,72,73,74,78,106,107,110,124,127,128,144,],[-28,-29,-30,-31,-57,-27,-32,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-54,-55,-56,-52,136,138,-53,]),'IN':([89,],[105,]),'LBRACE':([101,102,103,104,130,131,142,],[113,114,115,116,140,141,148,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement_list':([0,113,114,116,136,138,140,141,148,],[1,122,123,129,143,145,146,147,151,]),'statement':([0,1,113,114,116,122,123,129,136,138,140,141,143,145,146,147,148,151,],[2,32,2,2,2,32,32,32,2,2,2,2,32,32,32,32,2,32,]),'assignment':([0,1,113,114,116,122,123,129,136,138,140,141,143,145,146,147,148,151,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'expression':([0,1,14,33,34,35,36,37,38,39,40,41,42,43,44,46,52,53,56,57,58,60,61,62,75,77,98,99,108,109,113,114,115,116,122,123,125,129,136,137,138,140,141,143,145,146,147,148,151,],[4,4,48,63,64,65,66,67,68,69,70,71,72,73,74,76,81,81,86,87,88,81,93,81,95,96,111,112,93,121,4,4,124,4,4,4,124,4,4,144,4,4,4,4,4,4,4,4,4,]),'print':([0,1,113,114,116,122,123,129,136,138,140,141,143,145,146,147,148,151,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'input':([0,1,113,114,116,122,123,129,136,138,140,141,143,145,146,147,148,151,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'repeat':([0,1,113,114,116,122,123,129,136,138,140,141,143,145,146,147,148,151,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'condition':([0,1,113,114,116,122,123,129,136,138,140,141,143,145,146,147,148,151,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'loop':([0,1,113,114,116,122,123,129,136,138,140,141,143,145,146,147,148,151,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'range':([0,1,105,113,114,116,122,123,129,136,138,140,141,143,145,146,147,148,151,],[10,10,118,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'data_structure':([0,1,14,33,34,35,36,37,38,39,40,41,42,43,44,46,52,53,56,57,58,60,61,62,75,77,98,99,105,108,109,113,114,115,116,122,123,125,129,136,137,138,140,141,143,145,146,147,148,151,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,117,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'argument_list':([52,53,60,62,],[80,83,90,94,]),'empty':([52,53,60,62,],[82,82,82,82,]),'map_argument_list':([61,],[91,]),'map_element':([61,108,],[92,120,]),'when_cases':([115,],[125,]),'when_case':([115,125,],[126,135,]),'expression_list':([115,125,],[127,127,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement_list","S'",1,None,None,None),
  ('statement_list -> statement','statement_list',1,'p_statement_list','sintactico.py',18),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','sintactico.py',19),
  ('statement -> assignment','statement',1,'p_statement','sintactico.py',36),
  ('statement -> expression','statement',1,'p_statement','sintactico.py',37),
  ('statement -> print','statement',1,'p_statement','sintactico.py',38),
  ('statement -> input','statement',1,'p_statement','sintactico.py',39),
  ('statement -> repeat','statement',1,'p_statement','sintactico.py',40),
  ('statement -> condition','statement',1,'p_statement','sintactico.py',41),
  ('statement -> loop','statement',1,'p_statement','sintactico.py',42),
  ('statement -> range','statement',1,'p_statement','sintactico.py',43),
  ('assignment -> VAR ID ASSIGN expression','assignment',4,'p_assignment','sintactico.py',51),
  ('assignment -> VAL ID ASSIGN expression','assignment',4,'p_assignment','sintactico.py',52),
  ('assignment -> ID ASSIGN expression','assignment',3,'p_reasignement','sintactico.py',58),
  ('expression -> expression NOTEQ expression','expression',3,'p_expression_binop_boolean','sintactico.py',64),
  ('expression -> expression LT expression','expression',3,'p_expression_binop_boolean','sintactico.py',65),
  ('expression -> expression LTEQ expression','expression',3,'p_expression_binop_boolean','sintactico.py',66),
  ('expression -> expression GT expression','expression',3,'p_expression_binop_boolean','sintactico.py',67),
  ('expression -> expression GTEQ expression','expression',3,'p_expression_binop_boolean','sintactico.py',68),
  ('expression -> expression AND expression','expression',3,'p_expression_binop_boolean','sintactico.py',69),
  ('expression -> expression OR expression','expression',3,'p_expression_binop_boolean','sintactico.py',70),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop_arimetic','sintactico.py',86),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop_arimetic','sintactico.py',87),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop_arimetic','sintactico.py',88),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop_arimetic','sintactico.py',89),
  ('expression -> expression MOD expression','expression',3,'p_expression_binop_arimetic','sintactico.py',90),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','sintactico.py',116),
  ('expression -> NUMBER','expression',1,'p_expression_number','sintactico.py',126),
  ('expression -> FLOAT','expression',1,'p_expression_number','sintactico.py',127),
  ('expression -> DOUBLE','expression',1,'p_expression_number','sintactico.py',128),
  ('expression -> BOOLEAN','expression',1,'p_expression_boolean','sintactico.py',138),
  ('expression -> STRING','expression',1,'p_expression_string','sintactico.py',148),
  ('expression -> ID','expression',1,'p_expression_id','sintactico.py',158),
  ('range -> NUMBER RANGE NUMBER','range',3,'p_range','sintactico.py',168),
  ('print -> PRINTLN LPAREN argument_list RPAREN','print',4,'p_print','sintactico.py',173),
  ('print -> PRINT LPAREN argument_list RPAREN','print',4,'p_print','sintactico.py',174),
  ('argument_list -> expression','argument_list',1,'p_argument_list','sintactico.py',183),
  ('argument_list -> expression COMMA expression','argument_list',3,'p_argument_list','sintactico.py',184),
  ('argument_list -> argument_list COMMA expression','argument_list',3,'p_argument_list','sintactico.py',185),
  ('argument_list -> empty','argument_list',1,'p_argument_list','sintactico.py',186),
  ('input -> READLINE LPAREN RPAREN','input',3,'p_input','sintactico.py',201),
  ('repeat -> REPEAT LPAREN NUMBER RPAREN LBRACE statement_list RBRACE','repeat',7,'p_repeat','sintactico.py',207),
  ('condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE','condition',11,'p_condition','sintactico.py',218),
  ('condition -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE','condition',7,'p_condition','sintactico.py',219),
  ('loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE','loop',7,'p_loop_while','sintactico.py',237),
  ('loop -> FOR LPAREN ID IN data_structure RPAREN LBRACE statement_list RBRACE','loop',9,'p_loop_for','sintactico.py',249),
  ('loop -> FOR LPAREN ID IN range RPAREN LBRACE statement_list RBRACE','loop',9,'p_loop_for','sintactico.py',250),
  ('condition -> WHEN LPAREN expression RPAREN LBRACE when_cases RBRACE','condition',7,'p_condition_when','sintactico.py',262),
  ('when_cases -> when_case','when_cases',1,'p_when_cases','sintactico.py',273),
  ('when_cases -> when_cases when_case','when_cases',2,'p_when_cases','sintactico.py',274),
  ('when_case -> expression_list ARROW statement_list','when_case',3,'p_when_case','sintactico.py',285),
  ('when_case -> ELSE ARROW statement_list','when_case',3,'p_when_case','sintactico.py',286),
  ('expression_list -> expression','expression_list',1,'p_expression_list','sintactico.py',298),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','sintactico.py',299),
  ('data_structure -> LISTOF LPAREN argument_list RPAREN','data_structure',4,'p_data_structure','sintactico.py',303),
  ('data_structure -> MAPOF LPAREN map_argument_list RPAREN','data_structure',4,'p_data_structure','sintactico.py',304),
  ('data_structure -> SETOF LPAREN argument_list RPAREN','data_structure',4,'p_data_structure','sintactico.py',305),
  ('expression -> data_structure','expression',1,'p_expression_data_structure','sintactico.py',309),
  ('map_argument_list -> map_element','map_argument_list',1,'p_map_argument_list','sintactico.py',314),
  ('map_argument_list -> map_argument_list COMMA map_element','map_argument_list',3,'p_map_argument_list','sintactico.py',315),
  ('map_element -> expression TO expression','map_element',3,'p_map_element','sintactico.py',322),
  ('type -> ID','type',1,'p_type','sintactico.py',325),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',328),
]
